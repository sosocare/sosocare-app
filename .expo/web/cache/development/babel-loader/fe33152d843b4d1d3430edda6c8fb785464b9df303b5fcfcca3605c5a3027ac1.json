{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { Text, Link, HStack, Center, Heading, Switch, useColorMode, NativeBaseProvider, extendTheme, VStack, Box } from \"native-base\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ButtonWithTitle } from \"../components/ButtonWithTitle\";\nimport { COLORS } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#52A56E',\n      200: '#C6C6C6'\n    }\n  },\n  config: config\n});\nvar LandingScreen = function LandingScreen() {\n  var navigation = useNavigation();\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  return _jsx(NativeBaseProvider, {\n    theme: theme,\n    children: _jsxs(Center, {\n      _dark: {\n        bg: \"blueGray.900\"\n      },\n      _light: {\n        bg: \"primary.100\"\n      },\n      px: 3,\n      flex: 1,\n      py: 4,\n      position: \"relative\",\n      children: [_jsxs(VStack, {\n        space: 5,\n        w: 'full',\n        alignItems: \"center\",\n        children: [_jsxs(Box, {\n          children: [_jsx(Heading, {\n            size: \"2xl\",\n            color: 'white',\n            fontWeight: \"light\",\n            children: \"Upcycling for a \"\n          }), _jsx(Heading, {\n            size: \"2xl\",\n            color: 'white',\n            fontWeight: \"extrabold\",\n            mb: \"10\",\n            children: \"healthier society \"\n          })]\n        }), _jsxs(VStack, {\n          w: 'full',\n          space: 2,\n          children: [_jsx(ButtonWithTitle, {\n            noBg: false,\n            loading: false,\n            title: 'LOG IN',\n            width: '100%',\n            backgroundColor: COLORS.white,\n            color: COLORS.primary,\n            onTap: function onTap() {\n              return navigation.navigate('UserAuth', {\n                page: \"login\"\n              });\n            }\n          }), _jsx(ButtonWithTitle, {\n            noBg: false,\n            title: 'SIGN UP',\n            loading: false,\n            backgroundColor: 'transparent',\n            bordered: true,\n            color: COLORS.white,\n            onTap: function onTap() {\n              return navigation.navigate('UserAuth', {\n                page: \"signup\"\n              });\n            },\n            width: '100%'\n          })]\n        })]\n      }), _jsx(Box, {\n        safeAreaBottom: true,\n        position: \"absolute\",\n        bottom: 0,\n        mb: '2',\n        children: _jsxs(HStack, {\n          space: 2,\n          alignItems: \"center\",\n          children: [_jsx(Text, {\n            color: 'primary.200',\n            children: \"Are you an agent?\"\n          }), _jsx(Link, {\n            onPress: function onPress() {\n              return navigation.navigate('AgentAuth');\n            },\n            children: _jsx(Text, {\n              _light: {\n                color: 'white'\n              },\n              _dark: {\n                color: 'primary.100'\n              },\n              underline: true,\n              children: \"Login here\"\n            })\n          })]\n        })\n      })]\n    })\n  });\n};\nfunction ToggleDarkMode() {\n  var _useColorMode = useColorMode(),\n    colorMode = _useColorMode.colorMode,\n    toggleColorMode = _useColorMode.toggleColorMode;\n  return _jsxs(HStack, {\n    space: 2,\n    mt: \"10\",\n    alignItems: \"center\",\n    children: [_jsx(Text, {\n      children: \"Dark\"\n    }), _jsx(Switch, {\n      isChecked: colorMode === \"light\",\n      onToggle: toggleColorMode,\n      \"aria-label\": colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\"\n    }), _jsx(Text, {\n      children: \"Light\"\n    })]\n  });\n}\nexport default LandingScreen;","map":{"version":3,"names":["React","useContext","Text","Link","HStack","Center","Heading","Switch","useColorMode","NativeBaseProvider","extendTheme","VStack","Box","AuthContext","useNavigation","ButtonWithTitle","COLORS","jsx","_jsx","jsxs","_jsxs","config","useSystemColorMode","initialColorMode","theme","colors","primary","LandingScreen","navigation","_useContext","login","children","_dark","bg","_light","px","flex","py","position","space","w","alignItems","size","color","fontWeight","mb","noBg","loading","title","width","backgroundColor","white","onTap","navigate","page","bordered","safeAreaBottom","bottom","onPress","underline","ToggleDarkMode","_useColorMode","colorMode","toggleColorMode","mt","isChecked","onToggle"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/screens/LandingScreen.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport {\n    Text,\n    Link,\n    HStack,\n    Center,\n    Heading,\n    Switch,\n    useColorMode,\n    NativeBaseProvider,\n    extendTheme,\n    VStack,\n    Box,\n    Button,\n    Image,\n    AspectRatio,\n    Pressable,\n} from \"native-base\";\nimport { SafeAreaView, View } from \"react-native\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { LandingAuthScreenNavigationProp } from \"../navigation/auth/types\";\nimport { ButtonWithTitle } from \"../components/ButtonWithTitle\";\nimport { COLORS } from \"../constants\";\n\n// Define the config\nconst config = {\n    useSystemColorMode: false,\n    initialColorMode: \"light\",\n};\n\n// extend the theme\nexport const theme = extendTheme({\n    colors: {\n        primary: {\n            100: '#52A56E',\n            200: '#C6C6C6'\n        }\n    },\n    config\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n    interface ICustomTheme extends MyThemeType { }\n}\nconst LandingScreen = () => {\n    const navigation = useNavigation<LandingAuthScreenNavigationProp>();\n    const { login } = useContext(AuthContext);\n    return (\n        <NativeBaseProvider theme={theme}>\n            <Center\n                _dark={{ bg: \"blueGray.900\" }}\n                _light={{ bg: \"primary.100\" }}\n                px={3}\n                flex={1}\n                py={4}\n                position=\"relative\"\n            >\n                <VStack space={5} w={'full'} alignItems=\"center\">\n                    <Box>\n                        <Heading size=\"2xl\" color={'white'} fontWeight={\"light\"}>Upcycling for a </Heading>\n                        <Heading size=\"2xl\" color={'white'} fontWeight={\"extrabold\"} mb={\"10\"}>healthier society </Heading>\n                    </Box>\n                    <VStack w={'full'} space={2}>\n                        <ButtonWithTitle\n                            noBg={false}\n                            loading={false}\n                            title={'LOG IN'}\n                            width={'100%'}\n                            backgroundColor={COLORS.white}\n                            color={COLORS.primary}\n                            onTap={() => navigation.navigate('UserAuth', {\n                                page: \"login\",\n                            })}\n                        />\n                        <ButtonWithTitle\n                            noBg={false}\n                            title={'SIGN UP'}\n                            loading={false}\n                            backgroundColor={'transparent'}\n                            bordered={true}\n                            color={COLORS.white}\n                            onTap={() => navigation.navigate('UserAuth', {\n                                page: \"signup\"\n                            })}\n                            width={'100%'}\n                        />\n                    </VStack>\n                </VStack>\n                <Box safeAreaBottom position={\"absolute\"} bottom={0} mb={'2'}>\n                    <HStack space={2} alignItems=\"center\">\n                        <Text color={'primary.200'}>Are you an agent?</Text>\n                        <Link onPress={() => navigation.navigate('AgentAuth')}>\n                            <Text _light={{ color: 'white' }} _dark={{ color: 'primary.100' }} underline>\n                                Login here\n                            </Text>\n                        </Link>\n                    </HStack>\n\n                </Box>\n            </Center>\n        </NativeBaseProvider>\n    );\n};\n\n// Color Switch Component\nfunction ToggleDarkMode() {\n    const { colorMode, toggleColorMode } = useColorMode();\n    return (\n        <HStack space={2} mt={\"10\"} alignItems=\"center\">\n            <Text>Dark</Text>\n            <Switch\n                isChecked={colorMode === \"light\"}\n                onToggle={toggleColorMode}\n                aria-label={\n                    colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\"\n                }\n            />\n            <Text>Light</Text>\n        </HStack>\n    );\n}\n\nexport default LandingScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}