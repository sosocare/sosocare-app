{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AuthStack from \"./auth\";\nimport AppStack from \"./app\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useFonts } from \"expo-font\";\nimport { connect } from 'react-redux';\nimport { OnUserRefresh, OnLoadInsurance, OnAgentRefresh, OnLoadWallet } from \"../redux\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _AppNav = function _AppNav(props) {\n  var OnAgentRefresh = props.OnAgentRefresh,\n    OnUserRefresh = props.OnUserRefresh,\n    userReducer = props.userReducer,\n    agentReducer = props.agentReducer,\n    OnLoadWallet = props.OnLoadWallet,\n    OnLoadInsurance = props.OnLoadInsurance;\n  var _useContext = useContext(AuthContext),\n    loading = _useContext.loading,\n    authToken = _useContext.authToken,\n    login = _useContext.login,\n    logout = _useContext.logout,\n    onLoading = _useContext.onLoading,\n    doneLoading = _useContext.doneLoading;\n  useEffect(function () {\n    var setTokens = function () {\n      var _ref = _asyncToGenerator(function* () {\n        onLoading();\n        var userToken = yield AsyncStorage.getItem('user_token');\n        var agentToken = yield AsyncStorage.getItem('agent_token');\n        if (agentToken) {\n          var res = yield OnAgentRefresh();\n          var res2 = yield OnLoadWallet('agent', agentReducer.agent.authToken);\n          if (res.error === 'logout') {\n            logout();\n            doneLoading();\n            return;\n          }\n          login(agentToken, 'agent');\n          doneLoading();\n        } else if (userToken) {\n          var _res = yield OnUserRefresh();\n          var _res2 = yield OnLoadWallet('user', userReducer.user.authToken);\n          var res3 = yield OnLoadInsurance('user', userReducer.user.authToken);\n          if (_res.error === 'logout') {\n            logout();\n            doneLoading();\n            return;\n          }\n          login(userToken, 'user');\n          doneLoading();\n        } else {\n          logout();\n          doneLoading();\n        }\n      });\n      return function setTokens() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    setTokens();\n  }, []);\n  var _useFonts = useFonts({\n      InterBold: require(\"../../assets/fonts/Inter-Bold.ttf\"),\n      InterSemiBold: require(\"../../assets/fonts/Inter-SemiBold.ttf\"),\n      InterMedium: require(\"../../assets/fonts/Inter-Medium.ttf\"),\n      InterRegular: require(\"../../assets/fonts/Inter-Regular.ttf\"),\n      InterLight: require(\"../../assets/fonts/Inter-Light.ttf\"),\n      PoppinsLight: require(\"../../assets/fonts/Poppins/Poppins-Light.ttf\"),\n      PoppinsRegular: require(\"../../assets/fonts/Poppins/Poppins-Regular.ttf\"),\n      PoppinsMedium: require(\"../../assets/fonts/Poppins/Poppins-Medium.ttf\"),\n      PoppinsSemiBold: require(\"../../assets/fonts/Poppins/Poppins-SemiBold.ttf\"),\n      PoppinsBold: require(\"../../assets/fonts/Poppins/Poppins-Bold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (loading || !fontsLoaded) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: 'large'\n      })\n    });\n  }\n  return authToken ? _jsx(AppStack, {}) : _jsx(AuthStack, {});\n};\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    userReducer: state.UserReducer,\n    agentReducer: state.AgentReducer\n  };\n};\nvar AppNav = connect(mapToStateProps, {\n  OnAgentRefresh: OnAgentRefresh,\n  OnUserRefresh: OnUserRefresh,\n  OnLoadWallet: OnLoadWallet,\n  OnLoadInsurance: OnLoadInsurance\n})(_AppNav);\nexport default AppNav;","map":{"version":3,"names":["React","useContext","useEffect","View","ActivityIndicator","AuthStack","AppStack","AuthContext","useFonts","connect","OnUserRefresh","OnLoadInsurance","OnAgentRefresh","OnLoadWallet","AsyncStorage","jsx","_jsx","_AppNav","props","userReducer","agentReducer","_useContext","loading","authToken","login","logout","onLoading","doneLoading","setTokens","_ref","_asyncToGenerator","userToken","getItem","agentToken","res","res2","agent","error","user","res3","apply","arguments","_useFonts","InterBold","require","InterSemiBold","InterMedium","InterRegular","InterLight","PoppinsLight","PoppinsRegular","PoppinsMedium","PoppinsSemiBold","PoppinsBold","_useFonts2","_slicedToArray","fontsLoaded","style","flex","justifyContent","alignItems","children","size","mapToStateProps","state","UserReducer","AgentReducer","AppNav"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/navigation/index.tsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport AuthStack from \"./auth\";\nimport AppStack from \"./app\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useFonts } from \"expo-font\";\nimport { connect } from 'react-redux';\nimport { ApplicationState, UserState, AgentState, OnUserRefresh, OnLoadInsurance, OnAgentRefresh, OnLoadWallet } from '../redux';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport type { AuthContextType } from \"../contexts/AuthContext\";\n\ninterface AppNavProps {\n    userReducer: UserState;\n    agentReducer: AgentState;\n    OnAgentRefresh: Function;\n    OnUserRefresh: Function;\n    OnLoadWallet: Function;\n    OnLoadInsurance: Function;\n}\nconst _AppNav: React.FC<AppNavProps> = (props) => {\n    const { OnAgentRefresh, OnUserRefresh, userReducer, agentReducer, OnLoadWallet, OnLoadInsurance } = props;\n    const { loading, authToken, login, logout, onLoading, doneLoading }: AuthContextType = useContext(AuthContext);\n\n    useEffect(() => {\n        const setTokens = async () => {\n            onLoading();\n            let userToken = await AsyncStorage.getItem('user_token');\n            let agentToken = await AsyncStorage.getItem('agent_token');\n            if (agentToken) {\n                let res = await OnAgentRefresh();\n                let res2 = await OnLoadWallet('agent', agentReducer.agent.authToken);\n                if (res.error === 'logout') {\n                    logout();\n                    doneLoading();\n                    return;\n                }\n                login(agentToken, 'agent');\n\n                doneLoading();\n            } else if (userToken) {\n                let res = await OnUserRefresh();\n                let res2 = await OnLoadWallet('user', userReducer.user.authToken);\n                let res3 = await OnLoadInsurance('user', userReducer.user.authToken);\n                if (res.error === 'logout') {\n                    logout();\n                    doneLoading();\n                    return;\n                }\n                login(userToken, 'user');\n\n                doneLoading();\n            } else {\n                logout();\n                doneLoading();\n            }\n        };\n        setTokens();\n    }, []);\n    const [fontsLoaded] = useFonts({\n        InterBold: require(\"../../assets/fonts/Inter-Bold.ttf\"),\n        InterSemiBold: require(\"../../assets/fonts/Inter-SemiBold.ttf\"),\n        InterMedium: require(\"../../assets/fonts/Inter-Medium.ttf\"),\n        InterRegular: require(\"../../assets/fonts/Inter-Regular.ttf\"),\n        InterLight: require(\"../../assets/fonts/Inter-Light.ttf\"),\n        PoppinsLight: require(\"../../assets/fonts/Poppins/Poppins-Light.ttf\"),\n        PoppinsRegular: require(\"../../assets/fonts/Poppins/Poppins-Regular.ttf\"),\n        PoppinsMedium: require(\"../../assets/fonts/Poppins/Poppins-Medium.ttf\"),\n        PoppinsSemiBold: require(\"../../assets/fonts/Poppins/Poppins-SemiBold.ttf\"),\n        PoppinsBold: require(\"../../assets/fonts/Poppins/Poppins-Bold.ttf\"),\n    });\n\n    if (loading || !fontsLoaded) {\n        return (\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n                <ActivityIndicator size={'large'} />\n            </View>\n        );\n    }\n    return authToken ? <AppStack /> : <AuthStack />;\n};\n// export default AppNav;\n\nconst mapToStateProps = (state: ApplicationState) => ({\n    userReducer: state.UserReducer,\n    agentReducer: state.AgentReducer\n});\n\nconst AppNav = connect(mapToStateProps, { OnAgentRefresh, OnUserRefresh, OnLoadWallet, OnLoadInsurance })(_AppNav);\nexport default AppNav;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}