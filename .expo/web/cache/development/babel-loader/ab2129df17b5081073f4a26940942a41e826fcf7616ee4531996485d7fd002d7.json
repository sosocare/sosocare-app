{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { COLORS, FONTS } from \"../constants\";\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WasteLog = function WasteLog(_ref) {\n  var onTap = _ref.onTap,\n    id = _ref.id,\n    title = _ref.title,\n    balance = _ref.balance,\n    _ref$tint = _ref.tint,\n    tint = _ref$tint === void 0 ? COLORS.fade : _ref$tint,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? COLORS.dark : _ref$color,\n    _ref$backgroundColor = _ref.backgroundColor,\n    backgroundColor = _ref$backgroundColor === void 0 ? 'transparent' : _ref$backgroundColor,\n    _ref$loading = _ref.loading,\n    loading = _ref$loading === void 0 ? false : _ref$loading;\n  return _jsxs(Pressable, {\n    onPress: onTap ? function () {\n      return onTap(id);\n    } : function () {},\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1,\n        backgroundColor: pressed ? tint : backgroundColor,\n        width: '100%',\n        position: 'relative',\n        paddingHorizontal: 10,\n        paddingVertical: 12,\n        borderRadius: 10,\n        marginBottom: 8,\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n      };\n    },\n    children: [_jsx(View, {\n      style: {\n        borderRadius: 6,\n        backgroundColor: tint,\n        marginRight: 6,\n        padding: 4\n      },\n      children: _jsx(MaterialIcons, {\n        name: \"recycle-variant\",\n        style: {\n          fontSize: 20\n        },\n        color: COLORS.primary\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        width: '90%',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 16,\n          fontFamily: FONTS.medium,\n          color: color\n        },\n        children: title\n      }), title === \"Batteries\" ? _jsxs(Text, {\n        style: {\n          fontSize: 16,\n          fontFamily: FONTS.medium,\n          color: color\n        },\n        children: [balance, \" Units\"]\n      }) : _jsxs(Text, {\n        style: {\n          fontSize: 16,\n          fontFamily: FONTS.medium,\n          color: color\n        },\n        children: [balance, \" Kg\"]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  btn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15\n  },\n  loading: {\n    opacity: 0.7\n  }\n});\nexport { WasteLog };","map":{"version":3,"names":["React","StyleSheet","Text","Pressable","View","COLORS","FONTS","MaterialIcons","jsx","_jsx","jsxs","_jsxs","WasteLog","_ref","onTap","id","title","balance","_ref$tint","tint","fade","_ref$color","color","dark","_ref$backgroundColor","backgroundColor","_ref$loading","loading","onPress","style","_ref2","pressed","opacity","width","position","paddingHorizontal","paddingVertical","borderRadius","marginBottom","flexDirection","justifyContent","alignItems","children","marginRight","padding","name","fontSize","primary","fontFamily","medium","styles","create","btn"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/components/WasteLog.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, Pressable, View } from 'react-native';\nimport { COLORS, FONTS } from '../constants';\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport {\n    Spinner\n} from \"native-base\";\n\ninterface ButtonProps {\n    title: string,\n    id: string,\n    balance: number | 0,\n    color: string,\n    backgroundColor: string,\n    tint?: string,\n    loading: boolean;\n    onTap?: Function;\n}\n\nconst WasteLog: React.FC<ButtonProps> = ({ onTap, id, title, balance, tint = COLORS.fade, color = COLORS.dark, backgroundColor = 'transparent', loading = false, }) => {\n\n    return (\n        <Pressable onPress={onTap ? () => onTap(id) : () => { }} style={({ pressed }) => ({\n            opacity: pressed ? 0.5 : 1,\n            backgroundColor: pressed ? tint : backgroundColor,\n            width: '100%', position: 'relative', paddingHorizontal: 10, paddingVertical: 12, borderRadius: 10, marginBottom: 8, flexDirection: 'row', justifyContent: 'flex-start', alignItems: 'center'\n        })}>\n            <View style={{ borderRadius: 6, backgroundColor: tint, marginRight: 6, padding: 4 }}>\n                <MaterialIcons name='recycle-variant' style={{ fontSize: 20 }} color={COLORS.primary} />\n            </View>\n            <View style={{ flexDirection: 'row', width: '90%', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Text style={{ fontSize: 16, fontFamily: FONTS.medium, color: color }}>{title}</Text>\n                {title === \"Batteries\"\n                    ? <Text style={{ fontSize: 16, fontFamily: FONTS.medium, color: color }}>{balance} Units</Text>\n                    : <Text style={{ fontSize: 16, fontFamily: FONTS.medium, color: color }}>{balance} Kg</Text>}\n            </View>\n\n        </Pressable>\n    );\n\n};\n\n\nconst styles = StyleSheet.create({\n    btn: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 15,\n    },\n    loading: {\n        opacity: 0.7\n    }\n\n});\n\nexport { WasteLog };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}