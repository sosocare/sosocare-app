{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useEffect, useState } from 'react';\nimport { COLORS, SIZES, FONTS } from \"../../../constants\";\nimport { TransactionListItem } from \"../../../components/TransactionListItem\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\nimport ContentSheet from \"../../../components/ContentSheet\";\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { formatCurrency } from \"react-native-format-currency\";\nimport axios from 'axios';\nimport { BASE_URL } from \"../../../utils\";\nimport { connect } from 'react-redux';\nimport { OnLoadWallet } from \"../../../redux\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#52A56E',\n      200: '#C6C6C6'\n    }\n  },\n  config: config\n});\nvar deviceWidth = Dimensions.get('screen').width;\nvar deviceHeight = Dimensions.get('screen').height;\nvar _TransactionsScreen = function _TransactionsScreen(props) {\n  var userReducer = props.userReducer,\n    walletReducer = props.walletReducer,\n    OnLoadWallet = props.OnLoadWallet;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    firstName = _useState6[0],\n    setFirstName = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    activeItem = _useState8[0],\n    setActiveItem = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    successMessage = _useState10[0],\n    setSuccessMessage = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    hasError = _useState12[0],\n    setHasError = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isSuccess = _useState14[0],\n    setIsSuccess = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    transactions = _useState16[0],\n    setTransactions = _useState16[1];\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    totalIn = _useState18[0],\n    setTotalIn = _useState18[1];\n  var _useState19 = useState(0),\n    _useState20 = _slicedToArray(_useState19, 2),\n    totalOut = _useState20[0],\n    setTotalOut = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    showContent = _useState22[0],\n    setShowContent = _useState22[1];\n  var closeContent = function closeContent() {\n    setShowContent(false);\n    setLoading(false);\n  };\n  var clearError = function clearError() {\n    setHasError(false);\n    setLoading(false);\n  };\n  var handleSuccess = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setIsSuccess(false);\n      setLoading(false);\n    });\n    return function handleSuccess() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var mounted = true;\n    var source = axios.CancelToken.source();\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      try {\n        setLoading(true);\n        var existingUser = userReducer.user;\n        var wallet = walletReducer.wallet;\n        var response = yield axios.get(`${BASE_URL}user/transactions/all`, {\n          cancelToken: source.token,\n          headers: {\n            'Authorization': `Bearer ${existingUser.authToken}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          setLoading(false);\n          setError('Unable to load transations');\n          setHasError(true);\n          return;\n        } else {\n          if (!mounted) {\n            return;\n          }\n          var _transactions = resBody['transactions'];\n          setTransactions(resBody['transactions']);\n          var income = 0;\n          var expense = 0;\n          for (var i = 0; i < _transactions.length; i++) {\n            var currentItem = _transactions[i];\n            if (currentItem.category === 'conversion' || currentItem.category === 'funding') {\n              income += currentItem.amount;\n            } else {\n              expense += currentItem.amount;\n            }\n          }\n          var _formatCurrency = formatCurrency({\n              amount: income / 100,\n              code: \"USD\"\n            }),\n            _formatCurrency2 = _slicedToArray(_formatCurrency, 3),\n            incomeValueFormattedWithSymbol = _formatCurrency2[0],\n            incomeValueFormattedWithoutSymbol = _formatCurrency2[1],\n            incomeSymbol = _formatCurrency2[2];\n          var _formatCurrency3 = formatCurrency({\n              amount: expense / 100,\n              code: \"USD\"\n            }),\n            _formatCurrency4 = _slicedToArray(_formatCurrency3, 3),\n            expenseValueFormattedWithSymbol = _formatCurrency4[0],\n            expenseValueFormattedWithoutSymbol = _formatCurrency4[1],\n            expenseSymbol = _formatCurrency4[2];\n          setTotalIn(incomeValueFormattedWithoutSymbol);\n          setTotalOut(expenseValueFormattedWithoutSymbol);\n          setLoading(false);\n          return;\n        }\n      } catch (error) {\n        setLoading(false);\n        setError('Unable to load transations');\n        setHasError(true);\n        return;\n      }\n    })();\n    return function () {\n      source.cancel();\n      mounted = false;\n    };\n  }, []);\n  var showTransaction = function () {\n    var _ref3 = _asyncToGenerator(function* (id) {\n      try {\n        setLoading(true);\n        var currentItem = transactions.find(function (item) {\n          return item._id === id;\n        });\n        if (currentItem) {\n          setActiveItem(currentItem);\n          setShowContent(true);\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(\"Error kindly retry\");\n        setHasError(true);\n      }\n    });\n    return function showTransaction(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var TransactionContent = function TransactionContent() {\n    if (activeItem) {\n      var _formatCurrency5 = formatCurrency({\n          amount: activeItem.amount / 100,\n          code: \"USD\"\n        }),\n        _formatCurrency6 = _slicedToArray(_formatCurrency5, 3),\n        valueFormattedWithSymbol = _formatCurrency6[0],\n        valueFormattedWithoutSymbol = _formatCurrency6[1],\n        symbol = _formatCurrency6[2];\n      var formattedAmount = valueFormattedWithoutSymbol;\n      return _jsxs(View, {\n        style: {\n          width: '100%',\n          justifyContent: 'flex-start',\n          alignItems: 'flex-start',\n          paddingHorizontal: 12\n        },\n        children: [_jsx(Text, {\n          style: _objectSpread(_objectSpread({}, styles.transactionHeading), {}, {\n            color: COLORS.pallete_deep\n          }),\n          children: \"Transaction Details\"\n        }), _jsxs(View, {\n          style: {\n            width: '100%',\n            justifyContent: 'flex-start',\n            alignItems: 'flex-start',\n            marginTop: 20\n          },\n          children: [_jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Date\"\n            }), _jsx(Text, {\n              style: styles.transactionRecordRight,\n              children: new Date(activeItem.date).toDateString()\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Reference\"\n            }), _jsx(Text, {\n              style: styles.transactionRecordRight,\n              children: activeItem.reference\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Category\"\n            }), _jsx(Text, {\n              style: _objectSpread(_objectSpread({}, styles.transactionRecordRight), {}, {\n                textTransform: 'capitalize'\n              }),\n              children: activeItem.category\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Amount\"\n            }), _jsxs(Text, {\n              style: _objectSpread(_objectSpread({}, styles.transactionRecordRight), {}, {\n                fontFamily: FONTS.semiBold,\n                color: COLORS.pallete_deep\n              }),\n              children: [\"\\u20A6\", formattedAmount]\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Status\"\n            }), _jsx(View, {\n              style: [styles.transactionRecordRight, {\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                flexDirection: 'row'\n              }],\n              children: _jsx(Text, {\n                style: [{\n                  maxWidth: 50\n                }, activeItem.status === 'success' ? {\n                  color: COLORS.pallete_white,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  borderRadius: 10,\n                  fontSize: SIZES.base,\n                  backgroundColor: COLORS.pallete_deep,\n                  padding: 6\n                } : activeItem.status === 'failed' ? {\n                  color: COLORS.pallete_white,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  borderRadius: 10,\n                  fontSize: SIZES.base,\n                  backgroundColor: COLORS.negative,\n                  padding: 6\n                } : {\n                  color: COLORS.pallete_white,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  borderRadius: 10,\n                  fontSize: SIZES.base,\n                  backgroundColor: COLORS.dark,\n                  padding: 6\n                }],\n                children: activeItem.status\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Description\"\n            }), _jsx(Text, {\n              style: _objectSpread({}, styles.transactionRecordRight),\n              children: activeItem.description\n            })]\n          })]\n        })]\n      });\n    }\n    return _jsx(_Fragment, {});\n  };\n  return _jsxs(NativeBaseProvider, {\n    theme: theme,\n    children: [_jsx(SafeAreaView, {\n      style: {\n        backgroundColor: '#fefefe'\n      }\n    }), _jsx(ScrollView, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white'\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: {\n            marginBottom: 20,\n            width: '100%',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          },\n          children: [_jsxs(View, {\n            style: {\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            children: [_jsx(MaterialIcons, {\n              name: \"arrow-up-bold\",\n              style: {\n                fontSize: 24,\n                marginRight: 4\n              },\n              color: COLORS.primary\n            }), _jsxs(Text, {\n              style: {\n                fontSize: SIZES.extraLarge,\n                fontFamily: FONTS.semiBold,\n                color: COLORS.pallete_green\n              },\n              children: [\"\\u20A6\", totalIn]\n            })]\n          }), _jsxs(View, {\n            style: {\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            children: [_jsx(MaterialIcons, {\n              name: \"arrow-down-bold\",\n              style: {\n                fontSize: 24,\n                marginRight: 4\n              },\n              color: COLORS.negative\n            }), _jsxs(Text, {\n              style: {\n                fontSize: SIZES.extraLarge,\n                fontFamily: FONTS.semiBold,\n                color: COLORS.pallete_green\n              },\n              children: [\"\\u20A6\", totalOut]\n            })]\n          })]\n        }), _jsx(TransactionsList, {\n          transactions: transactions,\n          viewTransaction: showTransaction\n        }), _jsx(ContentSheet, {\n          content: _jsx(TransactionContent, {}),\n          open: showContent,\n          closed: closeContent\n        }), _jsx(SuccessSheet, {\n          message: successMessage,\n          open: isSuccess,\n          closed: handleSuccess\n        }), _jsx(ErrorSheet, {\n          error: error,\n          open: hasError,\n          closed: clearError\n        })]\n      })\n    }), _jsx(SafeAreaView, {\n      style: {\n        backgroundColor: '#fefefe'\n      }\n    })]\n  });\n};\nvar TransactionsList = function TransactionsList(_ref4) {\n  var transactions = _ref4.transactions,\n    viewTransaction = _ref4.viewTransaction;\n  return _jsxs(View, {\n    style: _objectSpread(_objectSpread({}, styles.insuranceContainer), {}, {\n      borderWidth: 1,\n      borderColor: COLORS.fade,\n      backgroundColor: COLORS.pallete_white\n    }),\n    children: [_jsx(Text, {\n      style: _objectSpread(_objectSpread({}, styles.insuranceHeading), {}, {\n        color: COLORS.pallete_deep\n      }),\n      children: \"Transaction Records\"\n    }), _jsx(View, {\n      style: {\n        width: '100%',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      children: _jsx(View, {\n        style: {\n          width: '100%',\n          marginTop: 0\n        },\n        children: transactions.map(function (item) {\n          return _jsx(TransactionListItem, {\n            detail: item.category,\n            amount: item.amount,\n            description: item.description,\n            backgroundColor: COLORS.white,\n            tint: COLORS.fade,\n            color: COLORS.dark,\n            loading: false,\n            id: item._id,\n            onTap: viewTransaction\n          }, item._id);\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  transactionHeading: {\n    fontSize: SIZES.large,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18,\n    width: '100%'\n  },\n  transactionRecord: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.fade,\n    paddingVertical: 10,\n    paddingHorizontal: 6\n  },\n  transactionRecordLeft: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.pallete_deep,\n    flex: 2\n  },\n  transactionRecordRight: {\n    flex: 5,\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.medium,\n    color: COLORS.gray,\n    flexShrink: 1\n  },\n  insuranceContainer: {\n    width: '100%',\n    backgroundColor: COLORS.primary,\n    borderRadius: 15,\n    paddingTop: 30,\n    paddingBottom: 30,\n    marginBottom: 20,\n    paddingHorizontal: 18,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    borderTopEndRadius: 15,\n    elevation: 5,\n    shadowColor: 'rgb(230, 235, 243)',\n    shadowOffset: {\n      width: 4,\n      height: 12\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10\n  },\n  insuranceHeading: {\n    fontSize: SIZES.large,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18,\n    width: '100%'\n  },\n  insurancePlan: {\n    fontSize: SIZES.extraLarge,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 6\n  },\n  container: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fefefe',\n    paddingHorizontal: 24,\n    paddingTop: 20\n  },\n  imageBg: {\n    resizeMode: 'cover',\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: 'center'\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: 'center'\n  }\n});\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    userReducer: state.UserReducer,\n    walletReducer: state.WalletReducer\n  };\n};\nvar TransactionsScreen = connect(mapToStateProps, {\n  OnLoadWallet: OnLoadWallet\n})(_TransactionsScreen);\nexport default TransactionsScreen;\n;","map":{"version":3,"names":["React","useEffect","useState","COLORS","SIZES","FONTS","TransactionListItem","ErrorSheet","SuccessSheet","ContentSheet","MaterialIcons","useNavigation","formatCurrency","axios","BASE_URL","connect","OnLoadWallet","NativeBaseProvider","extendTheme","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","config","useSystemColorMode","initialColorMode","theme","colors","primary","deviceWidth","Dimensions","get","width","deviceHeight","height","_TransactionsScreen","props","userReducer","walletReducer","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","firstName","setFirstName","_useState7","_useState8","activeItem","setActiveItem","_useState9","_useState10","successMessage","setSuccessMessage","_useState11","_useState12","hasError","setHasError","_useState13","_useState14","isSuccess","setIsSuccess","_useState15","_useState16","transactions","setTransactions","_useState17","_useState18","totalIn","setTotalIn","_useState19","_useState20","totalOut","setTotalOut","_useState21","_useState22","showContent","setShowContent","closeContent","clearError","handleSuccess","_ref","_asyncToGenerator","apply","arguments","mounted","source","CancelToken","existingUser","user","wallet","response","cancelToken","token","headers","authToken","resBody","data","income","expense","i","length","currentItem","category","amount","_formatCurrency","code","_formatCurrency2","incomeValueFormattedWithSymbol","incomeValueFormattedWithoutSymbol","incomeSymbol","_formatCurrency3","_formatCurrency4","expenseValueFormattedWithSymbol","expenseValueFormattedWithoutSymbol","expenseSymbol","cancel","showTransaction","_ref3","id","find","item","_id","_x","TransactionContent","_formatCurrency5","_formatCurrency6","valueFormattedWithSymbol","valueFormattedWithoutSymbol","symbol","formattedAmount","View","style","justifyContent","alignItems","paddingHorizontal","children","Text","_objectSpread","styles","transactionHeading","color","pallete_deep","marginTop","transactionRecord","transactionRecordLeft","transactionRecordRight","Date","date","toDateString","reference","textTransform","fontFamily","semiBold","flexDirection","maxWidth","status","pallete_white","borderRadius","fontSize","base","backgroundColor","padding","negative","dark","description","SafeAreaView","ScrollView","flex","container","marginBottom","name","marginRight","extraLarge","pallete_green","TransactionsList","viewTransaction","content","open","closed","message","_ref4","insuranceContainer","borderWidth","borderColor","fade","insuranceHeading","map","detail","white","tint","onTap","StyleSheet","create","large","borderBottomWidth","borderBottomColor","paddingVertical","medium","gray","flexShrink","paddingTop","paddingBottom","borderTopEndRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","insurancePlan","imageBg","resizeMode","headingText","heading","font","textAlign","errorText","subHeadingText","mapToStateProps","state","UserReducer","WalletReducer","TransactionsScreen"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/screens/user/wallet/TransactionsScreen.tsx"],"sourcesContent":["import { View, Text, Dimensions, ScrollView, SafeAreaView, StyleSheet } from 'react-native';\nimport React, { useEffect, useState } from 'react';\n\nimport { COLORS, SIZES, FONTS } from '../../../constants';\n\nimport { TransactionListItem } from \"../../../components/TransactionListItem\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\nimport ContentSheet from \"../../../components/ContentSheet\";\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { HomeScreenNavigationProp } from \"../../../navigation/user/types\";\nimport { formatCurrency } from \"react-native-format-currency\";\nimport axios from 'axios';\nimport { BASE_URL } from '../../../utils';\n\nimport { connect } from 'react-redux';\nimport { ApplicationState, UserState, WalletState, TransactionModel, OnLoadWallet } from '../../../redux';\n\nimport {\n    NativeBaseProvider,\n    extendTheme,\n} from \"native-base\";\n// Define the config\nconst config = {\n    useSystemColorMode: false,\n    initialColorMode: \"light\",\n};\n\n// extend the theme\nexport const theme = extendTheme({\n    colors: {\n        primary: {\n            100: '#52A56E',\n            200: '#C6C6C6'\n        }\n    },\n    config\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n    interface ICustomTheme extends MyThemeType { }\n}\n\ninterface TransactionsScreenProps {\n    userReducer: UserState;\n    walletReducer: WalletState;\n    OnLoadWallet: Function;\n}\n\nconst deviceWidth = Dimensions.get('screen').width;\nconst deviceHeight = Dimensions.get('screen').height;\nconst _TransactionsScreen: React.FC<TransactionsScreenProps> = (props) => {\n    const { userReducer, walletReducer, OnLoadWallet } = props;\n    const navigation = useNavigation<HomeScreenNavigationProp>();\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [activeItem, setActiveItem] = useState<TransactionModel>();\n    const [successMessage, setSuccessMessage] = useState('');\n    const [hasError, setHasError] = useState(false);\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [transactions, setTransactions] = useState<Array<TransactionModel>>([]);\n    const [totalIn, setTotalIn] = useState(0);\n    const [totalOut, setTotalOut] = useState(0);\n    const [showContent, setShowContent] = useState(false);\n\n    const closeContent = () => {\n        setShowContent(false);\n        setLoading(false);\n    };\n    const clearError = () => {\n        setHasError(false);\n        setLoading(false);\n    };\n    const handleSuccess = async () => {\n        setIsSuccess(false);\n        setLoading(false);\n        // navigation.navigate('Login');\n    };\n\n    useEffect(() => {\n        let mounted = true;\n        const source = axios.CancelToken.source();\n        (async () => {\n            if (!mounted) {\n                return;\n            }\n            try {\n                setLoading(true);\n                let existingUser = userReducer.user;\n                let wallet = walletReducer.wallet;\n                const response = await axios.get<string>(`${BASE_URL}user/transactions/all`, {\n                    cancelToken: source.token,\n                    headers: {\n                        'Authorization': `Bearer ${existingUser.authToken}`\n                    }\n                });\n\n                let resBody = response.data;\n\n                if (resBody['status'] === 'error') {\n                    setLoading(false);\n                    setError('Unable to load transations');\n                    setHasError(true);\n                    return;\n                } else {\n                    if (!mounted) {\n                        return;\n                    }\n                    let transactions = resBody['transactions'];\n                    setTransactions(resBody['transactions']);\n                    let income = 0;\n                    let expense = 0;\n                    for (let i = 0; i < transactions.length; i++) {\n                        let currentItem = transactions[i];\n                        if (currentItem.category === 'conversion' || currentItem.category === 'funding') {\n                            income += currentItem.amount;\n                        } else {\n                            expense += currentItem.amount;\n                        }\n                    }\n                    const [incomeValueFormattedWithSymbol, incomeValueFormattedWithoutSymbol, incomeSymbol] = formatCurrency({ amount: income / 100, code: \"USD\" });\n                    const [expenseValueFormattedWithSymbol, expenseValueFormattedWithoutSymbol, expenseSymbol] = formatCurrency({ amount: expense / 100, code: \"USD\" });\n\n                    setTotalIn(incomeValueFormattedWithoutSymbol);\n                    setTotalOut(expenseValueFormattedWithoutSymbol);\n                    setLoading(false);\n                    return;\n                }\n            } catch (error) {\n                setLoading(false);\n                setError('Unable to load transations');\n                setHasError(true);\n                return;\n            }\n\n\n        })();\n        return () => {\n            source.cancel();\n            mounted = false;\n        };\n    }, []);\n\n    const showTransaction = async (id) => {\n        try {\n            setLoading(true);\n            let currentItem = transactions.find((item) => item._id === id);\n            if (currentItem) {\n                setActiveItem(currentItem);\n                setShowContent(true);\n            }\n        } catch (error) {\n            setLoading(false);\n            setError(\"Error kindly retry\");\n            setHasError(true);\n        }\n    };\n\n    const TransactionContent = () => {\n        if (activeItem) {\n            const [valueFormattedWithSymbol, valueFormattedWithoutSymbol, symbol] = formatCurrency({ amount: activeItem.amount / 100, code: \"USD\" });\n            let formattedAmount = valueFormattedWithoutSymbol;\n            return (\n                <View style={{ width: '100%', justifyContent: 'flex-start', alignItems: 'flex-start', paddingHorizontal: 12 }}>\n                    <Text style={{ ...styles.transactionHeading, color: COLORS.pallete_deep }}>Transaction Details</Text>\n                    <View style={{ width: '100%', justifyContent: 'flex-start', alignItems: 'flex-start', marginTop: 20 }}>\n                        <View style={styles.transactionRecord}>\n                            <Text style={styles.transactionRecordLeft}>\n                                Date\n                            </Text>\n                            <Text style={styles.transactionRecordRight}>{new Date(activeItem.date).toDateString()}</Text>\n                        </View>\n                        <View style={styles.transactionRecord}>\n                            <Text style={styles.transactionRecordLeft}>\n                                Reference\n                            </Text>\n                            <Text style={styles.transactionRecordRight}>{activeItem.reference}</Text>\n                        </View>\n                        <View style={styles.transactionRecord}>\n                            <Text style={styles.transactionRecordLeft}>\n                                Category\n                            </Text>\n                            <Text style={{ ...styles.transactionRecordRight, textTransform: 'capitalize' }}>{activeItem.category}</Text>\n                        </View>\n                        <View style={styles.transactionRecord}>\n                            <Text style={styles.transactionRecordLeft}>\n                                Amount\n                            </Text>\n                            <Text style={{ ...styles.transactionRecordRight, fontFamily: FONTS.semiBold, color: COLORS.pallete_deep }}>{'\\u20A6'}{formattedAmount}</Text>\n                        </View>\n                        <View style={styles.transactionRecord}>\n                            <Text style={styles.transactionRecordLeft}>\n                                Status\n                            </Text>\n                            <View style={[\n                                styles.transactionRecordRight, { justifyContent: 'flex-start', alignItems: 'center', flexDirection: 'row' }]}\n                            >\n                                <Text style={[\n                                    { maxWidth: 50 },\n                                    activeItem.status === 'success'\n                                        ? { color: COLORS.pallete_white, justifyContent: 'center', alignItems: 'center', borderRadius: 10, fontSize: SIZES.base, backgroundColor: COLORS.pallete_deep, padding: 6 }\n                                        : activeItem.status === 'failed'\n                                            ? { color: COLORS.pallete_white, justifyContent: 'center', alignItems: 'center', borderRadius: 10, fontSize: SIZES.base, backgroundColor: COLORS.negative, padding: 6 }\n                                            : { color: COLORS.pallete_white, justifyContent: 'center', alignItems: 'center', borderRadius: 10, fontSize: SIZES.base, backgroundColor: COLORS.dark, padding: 6 }\n                                ]}\n                                >\n                                    {activeItem.status}\n                                </Text>\n                            </View>\n                        </View>\n                        <View style={styles.transactionRecord}>\n                            <Text style={styles.transactionRecordLeft}>\n                                Description\n                            </Text>\n                            <Text style={{ ...styles.transactionRecordRight }}>{activeItem.description}</Text>\n                        </View>\n                    </View>\n                </View>\n            );\n        }\n        return (<></>);\n\n    };\n\n    return (\n        <NativeBaseProvider theme={theme}>\n            <SafeAreaView style={{ backgroundColor: '#fefefe' }} />\n            <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n                <View style={styles.container}>\n                    <View style={{\n                        marginBottom: 20,\n                        width: '100%',\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'space-between'\n                    }}>\n                        <View style={{ width: '100%', flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n                            <MaterialIcons name='arrow-up-bold' style={{ fontSize: 24, marginRight: 4 }} color={COLORS.primary} />\n                            <Text style={{ fontSize: SIZES.extraLarge, fontFamily: FONTS.semiBold, color: COLORS.pallete_green }}>{'\\u20A6'}{totalIn}</Text>\n                        </View>\n                        <View style={{ width: '100%', flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n                            <MaterialIcons name='arrow-down-bold' style={{ fontSize: 24, marginRight: 4 }} color={COLORS.negative} />\n                            <Text style={{ fontSize: SIZES.extraLarge, fontFamily: FONTS.semiBold, color: COLORS.pallete_green }}>{'\\u20A6'}{totalOut}</Text>\n                        </View>\n                    </View>\n                    <TransactionsList transactions={transactions} viewTransaction={showTransaction} />\n\n                    {<ContentSheet content={<TransactionContent />} open={showContent} closed={closeContent} />}\n                    <SuccessSheet message={successMessage} open={isSuccess} closed={handleSuccess} />\n                    <ErrorSheet error={error} open={hasError} closed={clearError} />\n                </View>\n\n            </ScrollView>\n            <SafeAreaView style={{ backgroundColor: '#fefefe' }} />\n        </NativeBaseProvider>\n    );\n};\n\n\nconst TransactionsList = ({ transactions, viewTransaction }) => {\n    return (\n        <View style={{ ...styles.insuranceContainer, borderWidth: 1, borderColor: COLORS.fade, backgroundColor: COLORS.pallete_white }}>\n            <Text style={{ ...styles.insuranceHeading, color: COLORS.pallete_deep }}>Transaction Records</Text>\n            <View style={{ width: '100%', flexDirection: 'column', justifyContent: 'center' }}>\n                <View style={{ width: '100%', marginTop: 0 }}>\n                    {\n                        transactions.map((item: TransactionModel) => (\n                            <TransactionListItem\n                                detail={item.category}\n                                amount={item.amount}\n                                description={item.description}\n                                backgroundColor={COLORS.white}\n                                tint={COLORS.fade}\n                                color={COLORS.dark}\n                                loading={false}\n                                key={item._id}\n                                id={item._id}\n                                onTap={viewTransaction}\n                            />\n                        ))\n                    }\n                </View>\n            </View>\n        </View>\n    );\n\n};\n\nconst styles = StyleSheet.create({\n    transactionHeading: {\n        fontSize: SIZES.large,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.white,\n        marginBottom: 18,\n        width: '100%'\n    },\n    transactionRecord: {\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        borderBottomWidth: 1,\n        borderBottomColor: COLORS.fade,\n        paddingVertical: 10,\n        paddingHorizontal: 6,\n    },\n    transactionRecordLeft: {\n        fontSize: SIZES.medium,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.pallete_deep,\n        flex: 2,\n    },\n    transactionRecordRight: {\n        flex: 5,\n        fontSize: SIZES.medium,\n        fontFamily: FONTS.medium,\n        color: COLORS.gray,\n        flexShrink: 1\n    },\n    insuranceContainer: {\n        width: '100%',\n        backgroundColor: COLORS.primary,\n        borderRadius: 15,\n        paddingTop: 30,\n        paddingBottom: 30,\n        marginBottom: 20,\n        paddingHorizontal: 18,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        borderTopEndRadius: 15,\n        elevation: 5,\n        shadowColor: 'rgb(230, 235, 243)',\n        shadowOffset: { width: 4, height: 12 },\n        shadowOpacity: 0.5,\n        shadowRadius: 10\n    },\n    insuranceHeading: {\n        fontSize: SIZES.large,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.white,\n        marginBottom: 18,\n        width: '100%'\n    },\n    insurancePlan: {\n        fontSize: SIZES.extraLarge,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.white,\n        marginBottom: 6\n    },\n    container: {\n        flex: 1,\n        width: '100%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fefefe',\n        paddingHorizontal: 24,\n        paddingTop: 20\n    },\n    imageBg: {\n        resizeMode: 'cover',\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    headingText: {\n        fontFamily: FONTS.semiBold,\n        fontSize: SIZES.heading,\n        color: COLORS.dark,\n        marginBottom: SIZES.font,\n        textAlign: 'center'\n    },\n    errorText: {\n        fontSize: 14,\n        fontFamily: FONTS.medium,\n        color: COLORS.negative,\n        marginTop: -26,\n        marginBottom: 10,\n    },\n    subHeadingText: {\n        fontFamily: FONTS.medium,\n        fontSize: SIZES.medium,\n        color: COLORS.gray,\n        marginBottom: 20,\n        textAlign: 'center'\n    },\n});\n\nconst mapToStateProps = (state: ApplicationState) => ({\n    userReducer: state.UserReducer,\n    walletReducer: state.WalletReducer\n});\n\nconst TransactionsScreen = connect(mapToStateProps, { OnLoadWallet })(_TransactionsScreen);\nexport default TransactionsScreen;;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}