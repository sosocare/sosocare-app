{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useState, useEffect } from \"react\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport SelectField from \"../../../components/SelectField\";\nimport { TextField } from \"../../../components/TextField\";\nimport { ButtonWithTitle } from \"../../../components/ButtonWithTitle\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\nimport { COLORS, FONTS, SIZES } from \"../../../constants\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../utils\";\nimport { connect } from \"react-redux\";\nimport { OnUpdateLocation } from \"../../../redux\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport * as Location from \"expo-location\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NativeBaseProvider, extendTheme, Image } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: \"#52A56E\",\n      200: \"#C6C6C6\"\n    }\n  },\n  config: config\n});\nvar deviceWidth = Dimensions.get(\"screen\").width;\nvar deviceHeight = Dimensions.get(\"screen\").height;\nvar _SetLocationScreen = function _SetLocationScreen(props) {\n  var userReducer = props.userReducer,\n    OnUpdateLocation = props.OnUpdateLocation;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    successMessage = _useState6[0],\n    setSuccessMessage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    hasError = _useState8[0],\n    setHasError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isSuccess = _useState10[0],\n    setIsSuccess = _useState10[1];\n  var keyboardVerticalOffset = Platform.OS === \"ios\" ? 40 : 0;\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    address = _useState12[0],\n    setAddress = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    addressState = _useState14[0],\n    setAddressState = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    city = _useState16[0],\n    setCity = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    cities = _useState18[0],\n    setCities = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    street = _useState20[0],\n    setStreet = _useState20[1];\n  var _useState21 = useState(\"Waiting for Current Location\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    displayAddress = _useState22[0],\n    setDisplayAddress = _useState22[1];\n  var clearError = function clearError() {\n    setHasError(false);\n  };\n  var handleSuccess = function handleSuccess() {\n    setIsSuccess(false);\n    navigation.navigate(\"Home\");\n  };\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      var existingLocation = userReducer.location;\n      if (existingLocation.address_city && existingLocation.address_state) {\n        setAddress({\n          region: existingLocation.address_state,\n          city: existingLocation.address_city,\n          street: existingLocation.address_street,\n          district: \"\",\n          country: existingLocation.address_country,\n          streetNumber: \"\",\n          subregion: \"\",\n          postalCode: \"\",\n          name: \"\",\n          isoCountryCode: \"\",\n          timezone: \"\"\n        });\n        setAddressState(existingLocation.address_state);\n        setCity(existingLocation.address_city);\n        setStreet(existingLocation.address_street || \"\");\n        return;\n      }\n      if (addressState && addressState !== \"\") return;\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status !== \"granted\") {\n          setError(\"Permission to access location is not granted\");\n          setHasError(true);\n          setLoading(false);\n        }\n        var location = yield Location.getCurrentPositionAsync({});\n        var coords = location.coords;\n        if (coords) {\n          var latitude = coords.latitude,\n            longitude = coords.longitude;\n          if (!mounted) {\n            return;\n          }\n          var addressResponse = yield Location.reverseGeocodeAsync({\n            latitude: latitude,\n            longitude: longitude\n          });\n          for (var item of addressResponse) {\n            setLoading(false);\n            setAddress(item);\n            var currentAddress = `${item.name},${item.street}, ${item.postalCode}, ${item.country}`;\n            setDisplayAddress(currentAddress);\n            setAddressState(item.region);\n            setCity(item.city);\n            setStreet(item.street);\n            return;\n          }\n          setLoading(false);\n        } else {\n          setError(\"Could't get location automatically\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setError(error.message);\n        if (error.message.toLowerCase().includes(\"location\")) {\n          setError(\"Permission to access location is not granted\");\n        }\n        setHasError(true);\n        setLoading(false);\n        return;\n      }\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!addressState || addressState === \"\") return;\n      if (!mounted) {\n        return;\n      }\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        var configurationObject = {\n          method: \"get\",\n          url: `${BASE_URL}cities?state=${addressState.toLowerCase()}`,\n          cancelToken: source.token\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (!mounted) {\n          return;\n        }\n        if (resBody[\"cities\"]) {\n          var allCities = resBody[\"cities\"].map(function (item) {\n            return {\n              title: item.title,\n              value: item.title\n            };\n          });\n          setCities(allCities);\n          var isExist = allCities.find(function (item) {\n            return item.title === city;\n          });\n          if (!isExist) {\n            var defaultCity = allCities[0].title;\n            setCity(defaultCity);\n          }\n          setLoading(false);\n          return;\n        } else {\n          setError(\"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        if (axios.isCancel(error)) {} else {\n          setError(error.message || \"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n          return;\n        }\n      }\n    })();\n    return function () {\n      source.cancel();\n      mounted = false;\n    };\n  }, [addressState]);\n  var states = [{\n    title: \"Abia\",\n    value: \"Abia\"\n  }, {\n    title: \"Adamawa\",\n    value: \"Adamawa\"\n  }, {\n    title: \"Akwa Ibom\",\n    value: \"Akwa Ibom\"\n  }, {\n    title: \"Anambra\",\n    value: \"Anambra\"\n  }, {\n    title: \"Bauchi\",\n    value: \"Bauchi\"\n  }, {\n    title: \"Bayelsa\",\n    value: \"Bayelsa\"\n  }, {\n    title: \"Benue\",\n    value: \"Benue\"\n  }, {\n    title: \"Borno\",\n    value: \"Borno\"\n  }, {\n    title: \"Cross River\",\n    value: \"Cross River\"\n  }, {\n    title: \"Delta\",\n    value: \"Delta\"\n  }, {\n    title: \"Ebonyi\",\n    value: \"Ebonyi\"\n  }, {\n    title: \"Edo\",\n    value: \"Edo\"\n  }, {\n    title: \"Ekiti\",\n    value: \"Ekiti\"\n  }, {\n    title: \"Enugu\",\n    value: \"Enugu\"\n  }, {\n    title: \"FCT - Abuja\",\n    value: \"FCT - Abuja\"\n  }, {\n    title: \"Gombe\",\n    value: \"Gombe\"\n  }, {\n    title: \"Imo\",\n    value: \"Imo\"\n  }, {\n    title: \"Jigawa\",\n    value: \"Jigawa\"\n  }, {\n    title: \"Kaduna\",\n    value: \"Kaduna\"\n  }, {\n    title: \"Kano\",\n    value: \"Kano\"\n  }, {\n    title: \"Katsina\",\n    value: \"Katsina\"\n  }, {\n    title: \"Kebbi\",\n    value: \"Kebbi\"\n  }, {\n    title: \"Kogi\",\n    value: \"Kogi\"\n  }, {\n    title: \"Kwara\",\n    value: \"Kwara\"\n  }, {\n    title: \"Lagos\",\n    value: \"Lagos\"\n  }, {\n    title: \"Nasarawa\",\n    value: \"Nasarawa\"\n  }, {\n    title: \"Niger\",\n    value: \"Niger\"\n  }, {\n    title: \"Ogun\",\n    value: \"Ogun\"\n  }, {\n    title: \"Ondo\",\n    value: \"Ondo\"\n  }, {\n    title: \"Osun\",\n    value: \"Osun\"\n  }, {\n    title: \"Oyo\",\n    value: \"Oyo\"\n  }, {\n    title: \"Plateau\",\n    value: \"Plateau\"\n  }, {\n    title: \"Rivers\",\n    value: \"Rivers\"\n  }, {\n    title: \"Sokoto\",\n    value: \"Sokoto\"\n  }, {\n    title: \"Taraba\",\n    value: \"Taraba\"\n  }, {\n    title: \"Yobe\",\n    value: \"Yobe\"\n  }, {\n    title: \"Zamfara\",\n    value: \"Zamfara\"\n  }];\n  var LocationSchema = yup.object().shape({\n    state: yup.string().required(\"State is required\"),\n    city: yup.string().required(\"City is required\"),\n    street: yup.string().required(\"Street is required\")\n  });\n  var handleSubmit = function () {\n    var _ref4 = _asyncToGenerator(function* (_ref3) {\n      var state = _ref3.state,\n        city = _ref3.city,\n        street = _ref3.street;\n      setLoading(true);\n      try {\n        var location = {\n          address_country: \"Nigeria\",\n          address_state: state,\n          address_city: city,\n          address_street: street,\n          address_lat: null,\n          address_long: null,\n          address_zipcode: null\n        };\n        var res = yield OnUpdateLocation(location);\n        if (res.error) {\n          setError(res.error);\n          setLoading(false);\n          setHasError(true);\n        }\n        if (res.success) {\n          setLoading(false);\n          setSuccessMessage(\"Location Saved\");\n          setIsSuccess(true);\n        }\n      } catch (e) {\n        setError(e);\n        setHasError(true);\n        setLoading(false);\n      }\n    });\n    return function handleSubmit(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(NativeBaseProvider, {\n    theme: theme,\n    children: [_jsx(SafeAreaView, {}), _jsx(ImageBackground, {\n      source: require(\"../../../../assets/auth-bg.png\"),\n      style: styles.container,\n      children: _jsx(KeyboardAwareScrollView, {\n        extraScrollHeight: keyboardVerticalOffset,\n        style: {\n          flex: 1,\n          width: \"100%\",\n          backgroundColor: \"white\"\n        },\n        children: _jsx(View, {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: _jsxs(View, {\n            style: _objectSpread(_objectSpread({}, styles.container), {}, {\n              backgroundColor: \"white\"\n            }),\n            children: [_jsxs(View, {\n              style: styles.container,\n              children: [_jsx(View, {\n                style: {\n                  flex: 2,\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                },\n                children: _jsx(Image, {\n                  source: require(\"../../../../assets/location.png\"),\n                  alt: \"Map image\",\n                  style: {\n                    resizeMode: \"contain\",\n                    marginBottom: 0\n                  },\n                  w: \"2/5\"\n                })\n              }), _jsxs(View, {\n                style: styles.formContainer,\n                children: [_jsx(Text, {\n                  style: _objectSpread({}, styles.headingText),\n                  children: \"Select Your Location\"\n                }), _jsx(Text, {\n                  style: _objectSpread({}, styles.subHeadingText),\n                  children: \"Add your location to receive agent and insurance services closer to you\"\n                }), _jsx(View, {\n                  style: styles.form,\n                  children: _jsx(Formik, {\n                    initialValues: {\n                      state: addressState,\n                      street: street,\n                      city: city\n                    },\n                    onSubmit: function onSubmit(values) {\n                      handleSubmit(values);\n                    },\n                    validationSchema: LocationSchema,\n                    children: function children(_ref5) {\n                      var errors = _ref5.errors,\n                        handleBlur = _ref5.handleBlur,\n                        touched = _ref5.touched,\n                        _handleChange = _ref5.handleChange,\n                        handleSubmit = _ref5.handleSubmit;\n                      return _jsxs(View, {\n                        style: {\n                          width: \"100%\"\n                        },\n                        children: [_jsx(SelectField, {\n                          hasIcon: false,\n                          label: \"State\",\n                          handleChange: function handleChange(val) {\n                            _handleChange(\"state\")(val);\n                            setAddressState(val);\n                          },\n                          options: states,\n                          value: addressState,\n                          isDisabled: loading\n                        }), errors.state && touched.state ? _jsx(Text, {\n                          style: styles.errorText,\n                          children: errors.state\n                        }) : null, _jsx(SelectField, {\n                          hasIcon: false,\n                          label: \"City\",\n                          handleChange: function handleChange(val) {\n                            _handleChange(\"city\")(val);\n                            setCity(val);\n                          },\n                          options: cities,\n                          value: city,\n                          isDisabled: loading ? true : city && city !== \"\" ? false : addressState && addressState !== \"\" ? false : true\n                        }), errors.city && touched.city ? _jsx(Text, {\n                          style: styles.errorText,\n                          children: errors.city\n                        }) : null, _jsx(TextField, {\n                          hasIcon: false,\n                          isNumber: false,\n                          isPhone: false,\n                          label: \"Street\",\n                          isSecure: false,\n                          isDisabled: loading ? true : street && street !== \"\" ? false : city && city !== \"\" ? false : true,\n                          handleChange: _handleChange(\"street\"),\n                          passBlur: handleBlur(\"street\"),\n                          value: street\n                        }), errors.street && touched.street ? _jsx(Text, {\n                          style: styles.errorText,\n                          children: errors.street\n                        }) : null, _jsx(ButtonWithTitle, {\n                          loading: loading,\n                          noBg: false,\n                          title: \"Save\",\n                          backgroundColor: COLORS.primary,\n                          color: COLORS.white,\n                          onTap: handleSubmit,\n                          width: \"100%\"\n                        })]\n                      });\n                    }\n                  })\n                })]\n              })]\n            }), _jsx(SuccessSheet, {\n              message: successMessage,\n              open: isSuccess,\n              closed: handleSuccess\n            }), _jsx(ErrorSheet, {\n              error: error,\n              open: hasError,\n              closed: clearError\n            })]\n          })\n        })\n      })\n    }), _jsx(SafeAreaView, {})]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  imageBg: {\n    resizeMode: \"cover\",\n    width: deviceWidth,\n    height: deviceHeight,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  formContainer: {\n    flex: 5,\n    width: \"100%\",\n    flexDirection: \"column\",\n    paddingHorizontal: 24,\n    justifyContent: \"flex-start\"\n  },\n  form: {\n    width: \"100%\",\n    flexDirection: \"column\"\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: \"center\"\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: \"center\"\n  }\n});\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    userReducer: state.UserReducer\n  };\n};\nvar SetLocationScreen = connect(mapToStateProps, {\n  OnUpdateLocation: OnUpdateLocation\n})(_SetLocationScreen);\nexport default SetLocationScreen;","map":{"version":3,"names":["React","useState","useEffect","KeyboardAwareScrollView","SelectField","TextField","ButtonWithTitle","ErrorSheet","SuccessSheet","COLORS","FONTS","SIZES","axios","BASE_URL","connect","OnUpdateLocation","Formik","yup","Location","useNavigation","NativeBaseProvider","extendTheme","Image","jsx","_jsx","jsxs","_jsxs","config","useSystemColorMode","initialColorMode","theme","colors","primary","deviceWidth","Dimensions","get","width","deviceHeight","height","_SetLocationScreen","props","userReducer","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","successMessage","setSuccessMessage","_useState7","_useState8","hasError","setHasError","_useState9","_useState10","isSuccess","setIsSuccess","keyboardVerticalOffset","Platform","OS","_useState11","_useState12","address","setAddress","_useState13","_useState14","addressState","setAddressState","_useState15","_useState16","city","setCity","_useState17","_useState18","cities","setCities","_useState19","_useState20","street","setStreet","_useState21","_useState22","displayAddress","setDisplayAddress","clearError","handleSuccess","navigate","mounted","_asyncToGenerator","existingLocation","location","address_city","address_state","region","address_street","district","country","address_country","streetNumber","subregion","postalCode","name","isoCountryCode","timezone","_yield$Location$reque","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","coords","latitude","longitude","addressResponse","reverseGeocodeAsync","item","currentAddress","message","toLowerCase","includes","source","CancelToken","configurationObject","method","url","cancelToken","token","response","resBody","data","allCities","map","title","value","isExist","find","defaultCity","isCancel","cancel","states","LocationSchema","object","shape","state","string","required","handleSubmit","_ref4","_ref3","address_lat","address_long","address_zipcode","res","success","e","_x","apply","arguments","children","SafeAreaView","ImageBackground","require","style","styles","container","extraScrollHeight","flex","backgroundColor","View","justifyContent","alignItems","_objectSpread","alt","resizeMode","marginBottom","w","formContainer","Text","headingText","subHeadingText","form","initialValues","onSubmit","values","validationSchema","_ref5","errors","handleBlur","touched","handleChange","hasIcon","label","val","options","isDisabled","errorText","isNumber","isPhone","isSecure","passBlur","noBg","color","white","onTap","open","closed","StyleSheet","create","flexDirection","imageBg","paddingHorizontal","fontFamily","semiBold","fontSize","heading","dark","font","textAlign","medium","negative","marginTop","gray","mapToStateProps","UserReducer","SetLocationScreen"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/screens/user/home/SetLocationScreen.tsx"],"sourcesContent":["import {\n  View,\n  Text,\n  Platform,\n  SafeAreaView,\n  ImageBackground,\n  StyleSheet,\n  Dimensions,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\n\nimport SelectField from \"../../../components/SelectField\";\nimport { TextField } from \"../../../components/TextField\";\nimport { ButtonWithTitle } from \"../../../components/ButtonWithTitle\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\n\nimport { COLORS, FONTS, SIZES } from \"../../../constants\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../utils\";\n\nimport { connect } from \"react-redux\";\nimport {\n  ApplicationState,\n  UserState,\n  OnUpdateLocation,\n  LocationModel,\n} from \"../../../redux\";\n\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport * as Location from \"expo-location\";\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { HomeScreenNavigationProp } from \"../../../navigation/user/types\";\n\nimport { NativeBaseProvider, extendTheme, Image } from \"native-base\";\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\",\n};\n\n// extend the theme\nexport const theme = extendTheme({\n  colors: {\n    primary: {\n      100: \"#52A56E\",\n      200: \"#C6C6C6\",\n    },\n  },\n  config,\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n  interface ICustomTheme extends MyThemeType {}\n}\ninterface SetLocationProps {\n  userReducer: UserState;\n  OnUpdateLocation: Function;\n}\nconst deviceWidth = Dimensions.get(\"screen\").width;\nconst deviceHeight = Dimensions.get(\"screen\").height;\nconst _SetLocationScreen: React.FC<SetLocationProps> = (props) => {\n  const { userReducer, OnUpdateLocation } = props;\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const keyboardVerticalOffset = Platform.OS === \"ios\" ? 40 : 0;\n\n  const [address, setAddress] = useState<Location.LocationGeocodedAddress>();\n  const [addressState, setAddressState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [cities, setCities] = useState([]);\n  const [street, setStreet] = useState(\"\");\n  const [displayAddress, setDisplayAddress] = useState(\n    \"Waiting for Current Location\"\n  );\n\n  const clearError = () => {\n    setHasError(false);\n  };\n  const handleSuccess = () => {\n    setIsSuccess(false);\n    navigation.navigate(\"Home\");\n  };\n\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      if (!mounted) {\n        return;\n      }\n      let existingLocation: LocationModel = userReducer.location;\n      if (existingLocation.address_city && existingLocation.address_state) {\n        setAddress({\n          region: existingLocation.address_state,\n          city: existingLocation.address_city,\n          street: existingLocation.address_street,\n          district: \"\",\n          country: existingLocation.address_country,\n          streetNumber: \"\",\n          subregion: \"\",\n          postalCode: \"\",\n          name: \"\",\n          isoCountryCode: \"\",\n          timezone: \"\",\n        });\n        setAddressState(existingLocation.address_state);\n        setCity(existingLocation.address_city);\n        setStreet(existingLocation.address_street || \"\");\n        return;\n      }\n      if (addressState && addressState !== \"\") return;\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        let { status } = await Location.requestForegroundPermissionsAsync();\n\n        if (status !== \"granted\") {\n          setError(\"Permission to access location is not granted\");\n          setHasError(true);\n          setLoading(false);\n        }\n\n        let location: any = await Location.getCurrentPositionAsync({});\n\n        const { coords } = location;\n\n        if (coords) {\n          const { latitude, longitude } = coords;\n          if (!mounted) {\n            return;\n          }\n          let addressResponse: any = await Location.reverseGeocodeAsync({\n            latitude,\n            longitude,\n          });\n          for (let item of addressResponse) {\n            setLoading(false);\n            setAddress(item);\n            // onUpdateLocation(item)\n            let currentAddress = `${item.name},${item.street}, ${item.postalCode}, ${item.country}`;\n            setDisplayAddress(currentAddress);\n            setAddressState(item.region);\n            setCity(item.city);\n            setStreet(item.street);\n            return;\n          }\n\n          setLoading(false);\n        } else {\n          //notify user something went wrong with location\n          setError(\"Could't get location automatically\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setError(error.message);\n        if (error.message.toLowerCase().includes(\"location\")) {\n          setError(\"Permission to access location is not granted\");\n        }\n        setHasError(true);\n        setLoading(false);\n        return;\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    let mounted = true;\n    (async () => {\n      if (!addressState || addressState === \"\") return;\n      if (!mounted) {\n        return;\n      }\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        const configurationObject = {\n          method: \"get\",\n          url: `${BASE_URL}cities?state=${addressState.toLowerCase()}`,\n          cancelToken: source.token,\n        };\n        const response = await axios(configurationObject);\n\n        let resBody = response.data;\n        if (!mounted) {\n          return;\n        }\n        if (resBody[\"cities\"]) {\n          let allCities = resBody[\"cities\"].map((item) => {\n            return { title: item.title, value: item.title };\n          });\n          setCities(allCities);\n          let isExist = allCities.find((item) => item.title === city);\n          if (!isExist) {\n            let defaultCity = allCities[0].title;\n            setCity(defaultCity);\n          }\n          setLoading(false);\n          return;\n        } else {\n          setError(\"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        if (axios.isCancel(error)) {\n        } else {\n          setError(error.message || \"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n          return;\n        }\n      }\n    })();\n    return () => {\n      source.cancel();\n      mounted = false;\n    };\n  }, [addressState]);\n\n  const states = [\n    { title: \"Abia\", value: \"Abia\" },\n    { title: \"Adamawa\", value: \"Adamawa\" },\n    { title: \"Akwa Ibom\", value: \"Akwa Ibom\" },\n    { title: \"Anambra\", value: \"Anambra\" },\n    { title: \"Bauchi\", value: \"Bauchi\" },\n    { title: \"Bayelsa\", value: \"Bayelsa\" },\n    { title: \"Benue\", value: \"Benue\" },\n    { title: \"Borno\", value: \"Borno\" },\n    { title: \"Cross River\", value: \"Cross River\" },\n    { title: \"Delta\", value: \"Delta\" },\n    { title: \"Ebonyi\", value: \"Ebonyi\" },\n    { title: \"Edo\", value: \"Edo\" },\n    { title: \"Ekiti\", value: \"Ekiti\" },\n    { title: \"Enugu\", value: \"Enugu\" },\n    { title: \"FCT - Abuja\", value: \"FCT - Abuja\" },\n    { title: \"Gombe\", value: \"Gombe\" },\n    { title: \"Imo\", value: \"Imo\" },\n    { title: \"Jigawa\", value: \"Jigawa\" },\n    { title: \"Kaduna\", value: \"Kaduna\" },\n    { title: \"Kano\", value: \"Kano\" },\n    { title: \"Katsina\", value: \"Katsina\" },\n    { title: \"Kebbi\", value: \"Kebbi\" },\n    { title: \"Kogi\", value: \"Kogi\" },\n    { title: \"Kwara\", value: \"Kwara\" },\n    { title: \"Lagos\", value: \"Lagos\" },\n    { title: \"Nasarawa\", value: \"Nasarawa\" },\n    { title: \"Niger\", value: \"Niger\" },\n    { title: \"Ogun\", value: \"Ogun\" },\n    { title: \"Ondo\", value: \"Ondo\" },\n    { title: \"Osun\", value: \"Osun\" },\n    { title: \"Oyo\", value: \"Oyo\" },\n    { title: \"Plateau\", value: \"Plateau\" },\n    { title: \"Rivers\", value: \"Rivers\" },\n    { title: \"Sokoto\", value: \"Sokoto\" },\n    { title: \"Taraba\", value: \"Taraba\" },\n    { title: \"Yobe\", value: \"Yobe\" },\n    { title: \"Zamfara\", value: \"Zamfara\" },\n  ];\n  const LocationSchema = yup.object().shape({\n    state: yup.string().required(\"State is required\"),\n    city: yup.string().required(\"City is required\"),\n    street: yup.string().required(\"Street is required\"),\n  });\n\n  const handleSubmit = async ({ state, city, street }) => {\n    setLoading(true);\n    try {\n      let location: LocationModel = {\n        address_country: \"Nigeria\",\n        address_state: state,\n        address_city: city,\n        address_street: street,\n        address_lat: null,\n        address_long: null,\n        address_zipcode: null,\n      };\n      let res = await OnUpdateLocation(location);\n      if (res.error) {\n        setError(res.error);\n        setLoading(false);\n        setHasError(true);\n      }\n      if (res.success) {\n        setLoading(false);\n        setSuccessMessage(\"Location Saved\");\n        setIsSuccess(true);\n      }\n    } catch (e) {\n      setError(e);\n      setHasError(true);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <NativeBaseProvider theme={theme}>\n      <SafeAreaView />\n      <ImageBackground\n        source={require(\"../../../../assets/auth-bg.png\")}\n        style={styles.container}\n      >\n        <KeyboardAwareScrollView\n          extraScrollHeight={keyboardVerticalOffset}\n          style={{ flex: 1, width: \"100%\", backgroundColor: \"white\" }}\n        >\n          <View\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              flex: 1,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <View style={{ ...styles.container, backgroundColor: \"white\" }}>\n              <View style={styles.container}>\n                <View\n                  style={{\n                    flex: 2,\n                    width: \"100%\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Image\n                    source={require(\"../../../../assets/location.png\")}\n                    alt={\"Map image\"}\n                    style={{ resizeMode: \"contain\", marginBottom: 0 }}\n                    w={\"2/5\"}\n                  />\n                </View>\n\n                <View style={styles.formContainer}>\n                  <Text style={{ ...styles.headingText }}>\n                    Select Your Location\n                  </Text>\n                  <Text style={{ ...styles.subHeadingText }}>\n                    Add your location to receive agent and insurance services\n                    closer to you\n                  </Text>\n                  <View style={styles.form}>\n                    <Formik\n                      initialValues={{\n                        state: addressState,\n                        street: street,\n                        city: city,\n                      }}\n                      onSubmit={(values) => {\n                        handleSubmit(values);\n                      }}\n                      validationSchema={LocationSchema}\n                    >\n                      {({\n                        errors,\n                        handleBlur,\n                        touched,\n                        handleChange,\n                        handleSubmit,\n                      }) => (\n                        <View style={{ width: \"100%\" }}>\n                          <SelectField\n                            hasIcon={false}\n                            label=\"State\"\n                            handleChange={(val) => {\n                              handleChange(\"state\")(val);\n                              setAddressState(val);\n                            }}\n                            options={states}\n                            value={addressState}\n                            isDisabled={loading}\n                          />\n                          {errors.state && touched.state ? (\n                            <Text style={styles.errorText}>{errors.state}</Text>\n                          ) : null}\n                          <SelectField\n                            hasIcon={false}\n                            label=\"City\"\n                            handleChange={(val) => {\n                              handleChange(\"city\")(val);\n                              setCity(val);\n                            }}\n                            options={cities}\n                            value={city}\n                            isDisabled={\n                              loading\n                                ? true\n                                : city && city !== \"\"\n                                ? false\n                                : addressState && addressState !== \"\"\n                                ? false\n                                : true\n                            }\n                          />\n                          {errors.city && touched.city ? (\n                            <Text style={styles.errorText}>{errors.city}</Text>\n                          ) : null}\n                          <TextField\n                            hasIcon={false}\n                            isNumber={false}\n                            isPhone={false}\n                            label=\"Street\"\n                            isSecure={false}\n                            isDisabled={\n                              loading\n                                ? true\n                                : street && street !== \"\"\n                                ? false\n                                : city && city !== \"\"\n                                ? false\n                                : true\n                            }\n                            handleChange={handleChange(\"street\")}\n                            passBlur={handleBlur(\"street\")}\n                            value={street}\n                          />\n                          {errors.street && touched.street ? (\n                            <Text style={styles.errorText}>\n                              {errors.street}\n                            </Text>\n                          ) : null}\n                          <ButtonWithTitle\n                            loading={loading}\n                            noBg={false}\n                            title={\"Save\"}\n                            backgroundColor={COLORS.primary}\n                            color={COLORS.white}\n                            onTap={handleSubmit}\n                            width={\"100%\"}\n                          />\n                        </View>\n                      )}\n                    </Formik>\n                  </View>\n                </View>\n              </View>\n              <SuccessSheet\n                message={successMessage}\n                open={isSuccess}\n                closed={handleSuccess}\n              />\n              <ErrorSheet error={error} open={hasError} closed={clearError} />\n            </View>\n          </View>\n        </KeyboardAwareScrollView>\n      </ImageBackground>\n      <SafeAreaView />\n    </NativeBaseProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  imageBg: {\n    resizeMode: \"cover\",\n    width: deviceWidth,\n    height: deviceHeight,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  formContainer: {\n    flex: 5,\n    width: \"100%\",\n    flexDirection: \"column\",\n    paddingHorizontal: 24,\n    justifyContent: \"flex-start\",\n  },\n  form: {\n    width: \"100%\",\n    flexDirection: \"column\",\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: \"center\",\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10,\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: \"center\",\n  },\n});\n\nconst mapToStateProps = (state: ApplicationState) => ({\n  userReducer: state.UserReducer,\n});\n\nconst SetLocationScreen = connect(mapToStateProps, { OnUpdateLocation })(\n  _SetLocationScreen\n);\nexport default SetLocationScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}