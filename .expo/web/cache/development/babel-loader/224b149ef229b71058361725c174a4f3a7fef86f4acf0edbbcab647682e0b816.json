{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from 'react';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { TextField } from \"../../../components/TextField\";\nimport { ButtonWithTitle } from \"../../../components/ButtonWithTitle\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\nimport { COLORS, FONTS, SIZES } from \"../../../constants\";\nimport { yupSequentialStringSchema } from \"../../../utils/yup-utils\";\nimport { connect } from 'react-redux';\nimport { OnUserUpdate } from \"../../../redux\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#52A56E',\n      200: '#C6C6C6'\n    }\n  },\n  config: config\n});\nvar resetFormError;\nvar keyboardVerticalOffset = Platform.OS === 'ios' ? 40 : 0;\nvar _EditProfileScreen = function _EditProfileScreen(props) {\n  var userReducer = props.userReducer,\n    OnUserUpdate = props.OnUserUpdate;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    hasError = _useState6[0],\n    setHasError = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    successMessage = _useState8[0],\n    setSuccessMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isSuccess = _useState10[0],\n    setIsSuccess = _useState10[1];\n  var _useState11 = useState({\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      phone: ''\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    formData = _useState12[0],\n    setFormData = _useState12[1];\n  var clearError = function clearError() {\n    setHasError(false);\n  };\n  var handleSuccess = function handleSuccess() {\n    setIsSuccess(false);\n    navigation.navigate('Home');\n  };\n  var AccountSchema = yup.object().shape({\n    firstName: yup.string().trim().min(2, 'Too Short!').max(50, 'Too Long!').matches(/[A-Za-z ]{1,32}/, 'Only alphabets are allowed').required('First Name is required'),\n    lastName: yup.string().trim().min(2, 'Too Short!').max(50, 'Too Long!').matches(/[A-Za-z ]{1,32}/, 'Only alphabets are allowed').required('First Name is required'),\n    phone: yupSequentialStringSchema([yup.string().required('Phone Number is required'), yup.string().matches(/^\\S*$/, 'Please provied phone mumber without spaces and dashes in format like +xxxxxxxxxxxx'), yup.string().phone('Please enter valid phone number')], resetFormError),\n    email: yupSequentialStringSchema([yup.string().required('Email is required'), yup.string().email('Invalid email format')], resetFormError)\n  });\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (_ref) {\n      var firstName = _ref.firstName,\n        lastName = _ref.lastName,\n        email = _ref.email,\n        phone = _ref.phone;\n      setLoading(true);\n      try {\n        var res = yield OnUserUpdate({\n          first_name: firstName,\n          last_name: lastName,\n          email: email,\n          phone: phone\n        });\n        if (res.error) {\n          setError(res.error);\n          setLoading(false);\n          setHasError(true);\n        }\n        if (res.success) {\n          setLoading(false);\n          setSuccessMessage(\"Profile updated\");\n          setIsSuccess(true);\n        }\n      } catch (e) {\n        setError(e.message);\n        setHasError(true);\n        setLoading(false);\n      }\n    });\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      try {\n        setLoading(true);\n        if (!mounted) {\n          return;\n        }\n        var existingDetails = userReducer.user;\n        setFormData({\n          firstName: existingDetails.firstName || '',\n          lastName: existingDetails.lastName || '',\n          email: existingDetails.email || '',\n          phone: existingDetails.phone || ''\n        });\n        setLoading(false);\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setError(error.message);\n        setHasError(true);\n        setLoading(false);\n        return;\n      }\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return _jsxs(NativeBaseProvider, {\n    theme: theme,\n    children: [_jsx(SafeAreaView, {\n      style: {\n        backgroundColor: 'white'\n      }\n    }), _jsx(KeyboardAwareScrollView, {\n      extraScrollHeight: keyboardVerticalOffset,\n      style: {\n        flex: 1,\n        width: '100%',\n        backgroundColor: 'white'\n      },\n      children: _jsx(View, {\n        style: {\n          width: '100%',\n          height: '100%',\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            style: styles.mainContainer,\n            children: _jsx(View, {\n              style: {\n                flex: 1,\n                width: '100%',\n                marginTop: 10,\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                flexDirection: 'column'\n              },\n              children: _jsx(View, {\n                style: {\n                  paddingTop: 20,\n                  width: '100%'\n                },\n                children: _jsx(View, {\n                  style: styles.form,\n                  children: _jsx(Formik, {\n                    initialValues: {\n                      firstName: formData.firstName,\n                      lastName: formData.lastName,\n                      email: formData.email,\n                      phone: formData.phone\n                    },\n                    onSubmit: function onSubmit(values) {\n                      return handleSubmit(values);\n                    },\n                    validationSchema: AccountSchema,\n                    children: function children(_ref4) {\n                      var errors = _ref4.errors,\n                        handleBlur = _ref4.handleBlur,\n                        touched = _ref4.touched,\n                        handleChange = _ref4.handleChange,\n                        handleSubmit = _ref4.handleSubmit;\n                      return _jsxs(View, {\n                        style: {\n                          width: '100%'\n                        },\n                        children: [_jsx(Text, {\n                          style: styles.label,\n                          children: \"First name\"\n                        }), _jsx(TextField, {\n                          hasIcon: false,\n                          label: \"First name\",\n                          isSecure: false,\n                          handleChange: handleChange('firstName'),\n                          passBlur: handleBlur('firstName'),\n                          value: formData.firstName\n                        }), errors.firstName && touched.firstName ? _jsx(Text, {\n                          style: styles.errorText,\n                          children: errors.firstName\n                        }) : null, _jsx(Text, {\n                          style: styles.label,\n                          children: \"Last name\"\n                        }), _jsx(TextField, {\n                          hasIcon: false,\n                          label: \"Last name\",\n                          isSecure: false,\n                          handleChange: handleChange('lastName'),\n                          passBlur: handleBlur('lastName'),\n                          value: formData.lastName\n                        }), errors.lastName && touched.lastName ? _jsx(Text, {\n                          style: styles.errorText,\n                          children: errors.lastName\n                        }) : null, _jsx(Text, {\n                          style: styles.label,\n                          children: \"Email\"\n                        }), _jsx(TextField, {\n                          hasIcon: false,\n                          label: \"Email\",\n                          isSecure: false,\n                          isEmail: true,\n                          handleChange: handleChange('email'),\n                          passBlur: handleBlur('email'),\n                          value: formData.email\n                        }), errors.email && touched.email ? _jsx(Text, {\n                          style: styles.errorText,\n                          children: errors.email\n                        }) : null, _jsx(Text, {\n                          style: styles.label,\n                          children: \"Phone number\"\n                        }), _jsx(TextField, {\n                          hasIcon: false,\n                          isNumber: true,\n                          isPhone: true,\n                          label: \"Phone Number\",\n                          isSecure: false,\n                          handleChange: handleChange('phone'),\n                          passBlur: handleBlur('phone'),\n                          value: formData.phone\n                        }), errors.phone && touched.phone ? _jsx(Text, {\n                          style: styles.errorText,\n                          children: errors.phone\n                        }) : null, _jsx(ButtonWithTitle, {\n                          loading: loading,\n                          noBg: false,\n                          title: 'Submit',\n                          backgroundColor: COLORS.primary,\n                          color: COLORS.white,\n                          onTap: handleSubmit,\n                          width: '100%'\n                        })]\n                      });\n                    }\n                  })\n                })\n              })\n            })\n          }), _jsx(SuccessSheet, {\n            message: successMessage,\n            open: isSuccess,\n            closed: handleSuccess\n          }), _jsx(ErrorSheet, {\n            error: error,\n            open: hasError,\n            closed: clearError\n          })]\n        })\n      })\n    }), _jsx(SafeAreaView, {\n      style: {\n        backgroundColor: '#fefefe'\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fefefe',\n    paddingHorizontal: 24\n  },\n  form: {\n    width: '100%',\n    flexDirection: 'column'\n  },\n  label: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.gray,\n    marginBottom: 10\n  },\n  mainContainer: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  section: {\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    paddingVertical: 10,\n    borderTopWidth: 1,\n    borderTopColor: '#d9d9d9'\n  },\n  imageBg: {\n    resizeMode: 'cover',\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: 'center'\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: 'center'\n  }\n});\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    userReducer: state.UserReducer\n  };\n};\nvar EditProfileScreen = connect(mapToStateProps, {\n  OnUserUpdate: OnUserUpdate\n})(_EditProfileScreen);\nexport default EditProfileScreen;","map":{"version":3,"names":["React","useState","useEffect","KeyboardAwareScrollView","TextField","ButtonWithTitle","ErrorSheet","SuccessSheet","COLORS","FONTS","SIZES","yupSequentialStringSchema","connect","OnUserUpdate","Formik","yup","useNavigation","NativeBaseProvider","extendTheme","jsx","_jsx","jsxs","_jsxs","config","useSystemColorMode","initialColorMode","theme","colors","primary","resetFormError","keyboardVerticalOffset","Platform","OS","_EditProfileScreen","props","userReducer","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","hasError","setHasError","_useState7","_useState8","successMessage","setSuccessMessage","_useState9","_useState10","isSuccess","setIsSuccess","_useState11","email","firstName","lastName","phone","_useState12","formData","setFormData","clearError","handleSuccess","navigate","AccountSchema","object","shape","string","trim","min","max","matches","required","handleSubmit","_ref2","_asyncToGenerator","_ref","res","first_name","last_name","success","e","message","_x","apply","arguments","mounted","existingDetails","user","children","SafeAreaView","style","backgroundColor","extraScrollHeight","flex","width","View","height","justifyContent","alignItems","styles","container","mainContainer","marginTop","flexDirection","paddingTop","form","initialValues","onSubmit","values","validationSchema","_ref4","errors","handleBlur","touched","handleChange","Text","label","hasIcon","isSecure","passBlur","value","errorText","isEmail","isNumber","isPhone","noBg","title","color","white","onTap","open","closed","StyleSheet","create","paddingHorizontal","fontSize","medium","fontFamily","semiBold","gray","marginBottom","section","paddingVertical","borderTopWidth","borderTopColor","imageBg","resizeMode","headingText","heading","dark","font","textAlign","negative","subHeadingText","mapToStateProps","state","UserReducer","EditProfileScreen"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/screens/user/home/EditProfileScreen.tsx"],"sourcesContent":["import { View, Text, Platform, SafeAreaView, StyleSheet } from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport SelectField from \"../../../components/SelectField\";\nimport { TextField } from \"../../../components/TextField\";\nimport { ButtonWithTitle } from \"../../../components/ButtonWithTitle\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\n\nimport { COLORS, FONTS, SIZES } from '../../../constants';\nimport { yupSequentialStringSchema } from \"../../../utils/yup-utils\";\n\nimport { connect } from 'react-redux';\nimport { ApplicationState, UserState, OnUserUpdate } from '../../../redux';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone';\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { HomeScreenNavigationProp } from \"../../../navigation/user/types\";\n\nimport {\n  NativeBaseProvider,\n  extendTheme,\n} from \"native-base\";\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\",\n};\n\n// extend the theme\nexport const theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#52A56E',\n      200: '#C6C6C6'\n    }\n  },\n  config\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n  interface ICustomTheme extends MyThemeType { }\n}\n\ninterface EditProfileScreenProps {\n  userReducer: UserState;\n  OnUserUpdate: Function;\n}\nlet resetFormError: () => void;\nconst keyboardVerticalOffset = Platform.OS === 'ios' ? 40 : 0;\nconst _EditProfileScreen: React.FC<EditProfileScreenProps> = (props) => {\n  const { userReducer, OnUserUpdate } = props;\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phone: '',\n  });\n\n  const clearError = () => {\n    setHasError(false);\n  };\n  const handleSuccess = () => {\n    setIsSuccess(false);\n    navigation.navigate('Home');\n  };\n\n  const AccountSchema = yup.object().shape({\n    firstName: yup.string()\n      .trim()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .matches(/[A-Za-z ]{1,32}/, 'Only alphabets are allowed')\n      .required('First Name is required'),\n    lastName: yup.string()\n      .trim()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .matches(/[A-Za-z ]{1,32}/, 'Only alphabets are allowed')\n      .required('First Name is required'),\n    phone: yupSequentialStringSchema(\n      [\n        yup.string().required('Phone Number is required'),\n        yup.string().matches(/^\\S*$/, 'Please provied phone mumber without spaces and dashes in format like +xxxxxxxxxxxx'),\n        yup.string().phone('Please enter valid phone number')\n      ],\n      resetFormError\n    ),\n    email: yupSequentialStringSchema(\n      [\n        yup.string().required('Email is required'),\n        yup.string().email('Invalid email format')\n      ],\n      resetFormError\n    ),\n  });\n\n  const handleSubmit = async ({ firstName, lastName, email, phone }) => {\n    setLoading(true);\n    try {\n      let res = await OnUserUpdate({ first_name: firstName, last_name: lastName, email: email, phone: phone });\n      if (res.error) {\n        setError(res.error);\n        setLoading(false);\n        setHasError(true);\n      }\n      if (res.success) {\n        setLoading(false);\n        setSuccessMessage(\"Profile updated\");\n        setIsSuccess(true);\n      }\n\n    } catch (e) {\n      setError(e.message);\n      setHasError(true);\n      setLoading(false);\n    }\n\n  };\n\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      if (!mounted) {\n        return;\n      }\n      try {\n        setLoading(true);\n        if (!mounted) {\n          return;\n        }\n        let existingDetails = userReducer.user;\n        setFormData({\n          firstName: existingDetails.firstName || '',\n          lastName: existingDetails.lastName || '',\n          email: existingDetails.email || '',\n          phone: existingDetails.phone || '',\n        });\n        setLoading(false);\n\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setError(error.message);\n        setHasError(true);\n        setLoading(false);\n        return;\n      }\n\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <NativeBaseProvider theme={theme}>\n      <SafeAreaView style={{ backgroundColor: 'white' }} />\n      <KeyboardAwareScrollView extraScrollHeight={keyboardVerticalOffset} style={{ flex: 1, width: '100%', backgroundColor: 'white' }}>\n        <View style={{ width: '100%', height: '100%', flex: 1, justifyContent: 'center', alignItems: 'center' }} >\n          <View style={styles.container}>\n            <View style={styles.mainContainer}>\n              <View style={{ flex: 1, width: '100%', marginTop: 10, justifyContent: 'flex-start', alignItems: 'center', flexDirection: 'column' }}>\n                <View style={{ paddingTop: 20, width: '100%' }}>\n                  <View style={styles.form}>\n                    <Formik\n                      initialValues={{\n                        firstName: formData.firstName,\n                        lastName: formData.lastName,\n                        email: formData.email,\n                        phone: formData.phone,\n                      }}\n                      onSubmit={values => handleSubmit(values)}\n                      validationSchema={AccountSchema}\n                    >\n                      {({ errors, handleBlur, touched, handleChange, handleSubmit }) => (\n                        <View style={{ width: '100%' }}>\n                          <Text style={styles.label}>First name</Text>\n                          <TextField\n                            hasIcon={false}\n                            label='First name'\n                            isSecure={false}\n                            handleChange={handleChange('firstName')}\n                            passBlur={handleBlur('firstName')}\n                            value={formData.firstName}\n                          />\n                          {errors.firstName && touched.firstName ? <Text style={styles.errorText}>{errors.firstName}</Text> : null}\n                          <Text style={styles.label}>Last name</Text>\n                          <TextField\n                            hasIcon={false}\n                            label='Last name'\n                            isSecure={false}\n                            handleChange={handleChange('lastName')}\n                            passBlur={handleBlur('lastName')}\n                            value={formData.lastName}\n                          />\n                          {errors.lastName && touched.lastName ? <Text style={styles.errorText}>{errors.lastName}</Text> : null}\n                          <Text style={styles.label}>Email</Text>\n                          <TextField\n                            hasIcon={false}\n                            label='Email'\n                            isSecure={false}\n                            isEmail={true}\n                            handleChange={handleChange('email')}\n                            passBlur={handleBlur('email')}\n                            value={formData.email}\n                          />\n                          {errors.email && touched.email ? <Text style={styles.errorText}>{errors.email}</Text> : null}\n                          <Text style={styles.label}>Phone number</Text>\n                          <TextField\n                            hasIcon={false}\n                            isNumber={true}\n                            isPhone={true}\n                            label='Phone Number'\n                            isSecure={false}\n                            handleChange={handleChange('phone')}\n                            passBlur={handleBlur('phone')}\n                            value={formData.phone}\n                          />\n                          {errors.phone && touched.phone ? <Text style={styles.errorText}>{errors.phone}</Text> : null}\n                          <ButtonWithTitle loading={loading} noBg={false} title={'Submit'} backgroundColor={COLORS.primary} color={COLORS.white} onTap={handleSubmit} width={'100%'} />\n                        </View>\n                      )}\n                    </Formik>\n                  </View>\n                </View>\n              </View>\n            </View>\n            <SuccessSheet message={successMessage} open={isSuccess} closed={handleSuccess} />\n            <ErrorSheet error={error} open={hasError} closed={clearError} />\n          </View>\n        </View>\n      </KeyboardAwareScrollView>\n      <SafeAreaView style={{ backgroundColor: '#fefefe' }} />\n    </NativeBaseProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fefefe',\n    paddingHorizontal: 24\n  },\n  form: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  label: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.gray,\n    marginBottom: 10\n  },\n  mainContainer: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  section: {\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    paddingVertical: 10,\n    borderTopWidth: 1,\n    borderTopColor: '#d9d9d9'\n  },\n  imageBg: {\n    resizeMode: 'cover',\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: 'center'\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10,\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n});\n\nconst mapToStateProps = (state: ApplicationState) => ({\n  userReducer: state.UserReducer\n});\n\nconst EditProfileScreen = connect(mapToStateProps, { OnUserUpdate })(_EditProfileScreen);\nexport default EditProfileScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}