{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useEffect, useState } from 'react';\nimport { COLORS, SIZES, FONTS } from \"../../../constants\";\nimport { ButtonWithTitle } from \"../../../components/ButtonWithTitle\";\nimport { Convertible } from \"../../../components/Convertible\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport NoticeSheet from \"../../../components/NoticeSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport FontAwesome from '@expo/vector-icons/FontAwesome5';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { formatCurrency } from \"react-native-format-currency\";\nimport { connect } from 'react-redux';\nimport { OnConvertItem, OnLoadWallet, OnConvertAllItems } from \"../../../redux\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#52A56E',\n      200: '#C6C6C6'\n    }\n  },\n  config: config\n});\nvar _ConversionScreen = function _ConversionScreen(props) {\n  var userReducer = props.userReducer,\n    walletReducer = props.walletReducer,\n    OnConvertItem = props.OnConvertItem,\n    OnConvertAllItems = props.OnConvertAllItems,\n    OnLoadWallet = props.OnLoadWallet;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeItem = _useState6[0],\n    setActiveItem = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    noticeMessage = _useState8[0],\n    setNoticeMessage = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    noticeAllMessage = _useState10[0],\n    setNoticeAllMessage = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    successMessage = _useState12[0],\n    setSuccessMessage = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    hasError = _useState14[0],\n    setHasError = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isSuccess = _useState16[0],\n    setIsSuccess = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    hasNotice = _useState18[0],\n    setHasNotice = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    hasAllNotice = _useState20[0],\n    setHasAllNotice = _useState20[1];\n  var _useState21 = useState(0),\n    _useState22 = _slicedToArray(_useState21, 2),\n    totalWeight = _useState22[0],\n    setTotalWeight = _useState22[1];\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    wasteLogs = _useState24[0],\n    setWasteLogs = _useState24[1];\n  var _useState25 = useState([]),\n    _useState26 = _slicedToArray(_useState25, 2),\n    convertibles = _useState26[0],\n    setConvertibles = _useState26[1];\n  var _useState27 = useState(0),\n    _useState28 = _slicedToArray(_useState27, 2),\n    total = _useState28[0],\n    setTotal = _useState28[1];\n  var clearError = function clearError() {\n    setHasError(false);\n    setLoading(false);\n  };\n  var handleNotice = function handleNotice() {\n    setHasNotice(false);\n    setLoading(false);\n    navigation.navigate('SetLocation');\n  };\n  var handleSuccess = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setIsSuccess(false);\n      yield OnLoadWallet('user', userReducer.user.authToken);\n      yield load();\n      setLoading(false);\n    });\n    return function handleSuccess() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var load = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var existingUser = userReducer.user;\n        var wallet = walletReducer.wallet;\n        var wastelogs = walletReducer.wastelogs;\n        setWasteLogs(wastelogs || []);\n        var converts = [];\n        var preTotal = 0;\n        var _totalWeight = 0;\n        for (var i = 0; i < wastelogs.length; i++) {\n          var currentLog = wastelogs[i];\n          if (currentLog.available_weight > 1000) {\n            converts.push(currentLog);\n            _totalWeight += currentLog.available_weight;\n            var price = 0;\n            var title = currentLog.name;\n            if (title === 'Batteries') {\n              price = 2700;\n            } else if (title === 'HDPE') {\n              price = 3000;\n            } else if (title === 'Carton') {\n              price = 1800;\n            } else if (title === 'Copper') {\n              price = 4000;\n            } else if (title === 'Tin') {\n              price = 5000;\n            } else if (title === 'PET') {\n              price = 1500;\n            } else if (title === 'Aluminium') {\n              price = 5500;\n            } else if (title === 'Steel') {\n              price = 6000;\n            } else if (title === 'Paper') {\n              price = 1500;\n            } else if (title === 'SachetWater') {\n              price = 1000;\n            } else if (title === 'White Nylon') {\n              price = 2500;\n            } else if (title === 'Metal') {\n              price = 3000;\n            }\n            var subTotal = price / 100 * (currentLog.available_weight / 1000);\n            preTotal += subTotal;\n          }\n        }\n        setConvertibles(converts);\n        var _formatCurrency = formatCurrency({\n            amount: preTotal * 100 / 100,\n            code: \"USD\"\n          }),\n          _formatCurrency2 = _slicedToArray(_formatCurrency, 3),\n          valueFormattedWithSymbol = _formatCurrency2[0],\n          valueFormattedWithoutSymbol = _formatCurrency2[1],\n          symbol = _formatCurrency2[2];\n        setTotal(valueFormattedWithoutSymbol);\n        setTotalWeight(_totalWeight / 1000);\n      } catch (error) {\n        return;\n      }\n    });\n    return function load() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      yield load();\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  var preConvertItem = function () {\n    var _ref4 = _asyncToGenerator(function* (id, amount) {\n      try {\n        setLoading(true);\n        var currentItem = convertibles.find(function (item) {\n          return item._id === id;\n        });\n        setActiveItem(id);\n        if (currentItem) {\n          setNoticeMessage(`Convert your stored ${currentItem.name} of ${currentItem.available_weight / 1000} for ₦${amount}`);\n          setHasNotice(true);\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(\"Error kindly retry\");\n        setHasError(true);\n      }\n    });\n    return function preConvertItem(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var preConvertAll = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        setNoticeAllMessage(`Convert your all Items of ${totalWeight} for ₦${total}`);\n        setHasAllNotice(true);\n      } catch (error) {\n        setLoading(false);\n        setError(\"Error kindly retry\");\n        setHasError(true);\n      }\n    });\n    return function preConvertAll() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var readyConvertAll = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      setHasAllNotice(false);\n      try {\n        setLoading(true);\n        var res = yield OnConvertAllItems('user');\n        if (res.success === 'success') {\n          setSuccessMessage('All Recyclables converted');\n          setIsSuccess(true);\n        } else if (res.error) {\n          setError(res.error);\n          setHasError(true);\n        } else {\n          setError(\"Error kindly retry\");\n          setHasError(true);\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(\"Error kindly retry\");\n        setHasError(true);\n      }\n    });\n    return function readyConvertAll() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var readyConvertItem = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      setHasNotice(false);\n      var actItem = convertibles.find(function (item) {\n        return item._id === activeItem;\n      });\n      if (actItem) {\n        var id = actItem.recyclable;\n        try {\n          setLoading(true);\n          var res = yield OnConvertItem(id, 'user');\n          if (res.success === 'success') {\n            setSuccessMessage('Weight Converted to Cash');\n            setIsSuccess(true);\n          } else if (res.error) {\n            setError(res.error);\n            setHasError(true);\n          } else {\n            setError(\"Error kindly retry\");\n            setHasError(true);\n          }\n        } catch (error) {\n          setLoading(false);\n          setError(\"Error kindly retry\");\n          setHasError(true);\n        }\n      }\n    });\n    return function readyConvertItem() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  return _jsxs(NativeBaseProvider, {\n    theme: theme,\n    children: [_jsx(SafeAreaView, {\n      style: {\n        backgroundColor: '#fefefe'\n      }\n    }), _jsx(ScrollView, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white'\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: {\n            width: '100%',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginBottom: 60\n          },\n          children: [_jsx(MaterialIcons, {\n            name: \"recycle\",\n            style: {\n              fontSize: 80\n            },\n            color: COLORS.dark\n          }), _jsx(MaterialIcons, {\n            name: \"forward\",\n            style: {\n              fontSize: 45,\n              marginHorizontal: 20\n            },\n            color: COLORS.gray\n          }), _jsx(FontAwesome, {\n            name: \"money-bill-wave\",\n            style: {\n              fontSize: 70\n            },\n            color: COLORS.primary\n          })]\n        }), _jsx(WasteBalance, {\n          logs: convertibles,\n          convertItem: preConvertItem,\n          totalWeight: totalWeight\n        }), _jsx(View, {\n          style: {\n            width: '100%',\n            flexDirection: 'row',\n            marginBottom: 100,\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: convertibles.length > 0 ? _jsx(ButtonWithTitle, {\n            title: 'Convert All for ₦' + total,\n            backgroundColor: COLORS.primary,\n            noBg: false,\n            color: COLORS.white,\n            loading: loading,\n            onTap: function onTap() {\n              return preConvertAll();\n            },\n            width: '100%',\n            bordered: true\n          }) : null\n        }), _jsx(SuccessSheet, {\n          message: successMessage,\n          open: isSuccess,\n          closed: handleSuccess\n        }), _jsx(ErrorSheet, {\n          error: error,\n          open: hasError,\n          closed: clearError\n        }), _jsx(NoticeSheet, {\n          message: noticeMessage,\n          open: hasNotice,\n          closed: readyConvertItem\n        }), _jsx(NoticeSheet, {\n          message: noticeAllMessage,\n          open: hasAllNotice,\n          closed: readyConvertAll\n        })]\n      })\n    }), _jsx(SafeAreaView, {\n      style: {\n        backgroundColor: '#fefefe'\n      }\n    })]\n  });\n};\nvar WasteBalance = function WasteBalance(_ref8) {\n  var totalWeight = _ref8.totalWeight,\n    logs = _ref8.logs,\n    convertItem = _ref8.convertItem;\n  return _jsxs(View, {\n    style: _objectSpread(_objectSpread({}, styles.insuranceContainer), {}, {\n      borderWidth: 1,\n      borderColor: COLORS.fade,\n      backgroundColor: COLORS.pallete_white\n    }),\n    children: [_jsx(Text, {\n      style: _objectSpread(_objectSpread({}, styles.insuranceHeading), {}, {\n        color: COLORS.pallete_deep,\n        textAlign: 'center'\n      }),\n      children: \"Convertible Items\"\n    }), _jsxs(View, {\n      style: {\n        width: '100%',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      children: [_jsx(View, {\n        style: {\n          width: '100%',\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsxs(Text, {\n          style: _objectSpread(_objectSpread({}, styles.insurancePlan), {}, {\n            fontSize: SIZES.extraLarge + 10,\n            color: COLORS.dark,\n            marginBottom: 0\n          }),\n          children: [totalWeight, \" Kg\"]\n        })\n      }), logs.length > 0 ? _jsx(View, {\n        style: {\n          width: '100%',\n          marginTop: 20\n        },\n        children: logs.map(function (item) {\n          return _jsx(Convertible, {\n            onTap: function onTap(id, amount) {\n              return convertItem(id, amount);\n            },\n            title: item.name,\n            balance: item.available_weight / 1000 || 0,\n            backgroundColor: COLORS.white,\n            tint: COLORS.fade,\n            color: COLORS.pallete_deep,\n            loading: false,\n            id: item._id\n          }, item._id);\n        })\n      }) : _jsx(View, {\n        style: {\n          width: '100%',\n          marginVertical: 20,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: SIZES.medium,\n            fontFamily: FONTS.medium,\n            color: COLORS.pallete_deep,\n            textAlign: 'center'\n          },\n          children: \"No convertible items available. Take your wastes to the nearest SOSOCARE Agent to increase your balance.\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  insuranceContainer: {\n    width: '100%',\n    backgroundColor: COLORS.primary,\n    borderRadius: 15,\n    paddingTop: 30,\n    paddingBottom: 10,\n    marginBottom: 20,\n    paddingHorizontal: 18,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    borderTopEndRadius: 15,\n    elevation: 5,\n    shadowColor: 'rgb(230, 235, 243)',\n    shadowOffset: {\n      width: 4,\n      height: 12\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10\n  },\n  insuranceHeading: {\n    fontSize: SIZES.extraLarge,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18,\n    textAlign: 'center',\n    width: '100%'\n  },\n  insurancePlan: {\n    fontSize: SIZES.extraLarge,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 6\n  },\n  container: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fefefe',\n    paddingHorizontal: 24,\n    paddingTop: 20\n  },\n  imageBg: {\n    resizeMode: 'cover',\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: 'center'\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: 'center'\n  }\n});\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    userReducer: state.UserReducer,\n    walletReducer: state.WalletReducer\n  };\n};\nvar ConversionScreen = connect(mapToStateProps, {\n  OnConvertItem: OnConvertItem,\n  OnLoadWallet: OnLoadWallet,\n  OnConvertAllItems: OnConvertAllItems\n})(_ConversionScreen);\nexport default ConversionScreen;","map":{"version":3,"names":["React","useEffect","useState","COLORS","SIZES","FONTS","ButtonWithTitle","Convertible","ErrorSheet","NoticeSheet","SuccessSheet","MaterialIcons","FontAwesome","useNavigation","formatCurrency","connect","OnConvertItem","OnLoadWallet","OnConvertAllItems","NativeBaseProvider","extendTheme","jsx","_jsx","jsxs","_jsxs","config","useSystemColorMode","initialColorMode","theme","colors","primary","_ConversionScreen","props","userReducer","walletReducer","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","activeItem","setActiveItem","_useState7","_useState8","noticeMessage","setNoticeMessage","_useState9","_useState10","noticeAllMessage","setNoticeAllMessage","_useState11","_useState12","successMessage","setSuccessMessage","_useState13","_useState14","hasError","setHasError","_useState15","_useState16","isSuccess","setIsSuccess","_useState17","_useState18","hasNotice","setHasNotice","_useState19","_useState20","hasAllNotice","setHasAllNotice","_useState21","_useState22","totalWeight","setTotalWeight","_useState23","_useState24","wasteLogs","setWasteLogs","_useState25","_useState26","convertibles","setConvertibles","_useState27","_useState28","total","setTotal","clearError","handleNotice","navigate","handleSuccess","_ref","_asyncToGenerator","user","authToken","load","apply","arguments","_ref2","existingUser","wallet","wastelogs","converts","preTotal","i","length","currentLog","available_weight","push","price","title","name","subTotal","_formatCurrency","amount","code","_formatCurrency2","valueFormattedWithSymbol","valueFormattedWithoutSymbol","symbol","mounted","preConvertItem","_ref4","id","currentItem","find","item","_id","_x","_x2","preConvertAll","_ref5","readyConvertAll","_ref6","res","success","readyConvertItem","_ref7","actItem","recyclable","children","SafeAreaView","style","backgroundColor","ScrollView","flex","View","styles","container","width","flexDirection","alignItems","justifyContent","marginBottom","fontSize","color","dark","marginHorizontal","gray","WasteBalance","logs","convertItem","noBg","white","onTap","bordered","message","open","closed","_ref8","_objectSpread","insuranceContainer","borderWidth","borderColor","fade","pallete_white","Text","insuranceHeading","pallete_deep","textAlign","insurancePlan","extraLarge","marginTop","map","balance","tint","marginVertical","medium","fontFamily","StyleSheet","create","borderRadius","paddingTop","paddingBottom","paddingHorizontal","borderTopEndRadius","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","semiBold","imageBg","resizeMode","headingText","heading","font","errorText","negative","subHeadingText","mapToStateProps","state","UserReducer","WalletReducer","ConversionScreen"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/screens/user/wallet/ConversionScreen.tsx"],"sourcesContent":["import { View, Text, Dimensions, ScrollView, SafeAreaView, StyleSheet } from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\n\nimport { COLORS, SIZES, FONTS } from '../../../constants';\nimport { ButtonWithTitle } from \"../../../components/ButtonWithTitle\";\nimport { Convertible } from \"../../../components/Convertible\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport NoticeSheet from \"../../../components/NoticeSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport FontAwesome from '@expo/vector-icons/FontAwesome5';\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { HomeScreenNavigationProp } from \"../../../navigation/user/types\";\nimport { formatCurrency } from \"react-native-format-currency\";\n\nimport { connect } from 'react-redux';\nimport { ApplicationState, UserState, WalletState, OnConvertItem, WasteLogModel, OnLoadWallet, OnConvertAllItems } from '../../../redux';\n\nimport {\n  NativeBaseProvider,\n  extendTheme,\n} from \"native-base\";\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\",\n};\n\n// extend the theme\nexport const theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#52A56E',\n      200: '#C6C6C6'\n    }\n  },\n  config\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n  interface ICustomTheme extends MyThemeType { }\n}\n\ninterface ConversionScreenProps {\n  userReducer: UserState;\n  walletReducer: WalletState;\n  OnConvertItem: Function;\n  OnConvertAllItems: Function;\n  OnLoadWallet: Function;\n}\n\nconst _ConversionScreen: React.FC<ConversionScreenProps> = (props) => {\n  const { userReducer, walletReducer, OnConvertItem, OnConvertAllItems, OnLoadWallet } = props;\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [activeItem, setActiveItem] = useState('');\n  const [noticeMessage, setNoticeMessage] = useState('');\n  const [noticeAllMessage, setNoticeAllMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [hasNotice, setHasNotice] = useState(false);\n  const [hasAllNotice, setHasAllNotice] = useState(false);\n  const [totalWeight, setTotalWeight] = useState(0);\n  const [wasteLogs, setWasteLogs] = useState<Array<WasteLogModel>>([]);\n  const [convertibles, setConvertibles] = useState<Array<WasteLogModel>>([]);\n  const [total, setTotal] = useState(0);\n\n  const clearError = () => {\n    setHasError(false);\n    setLoading(false);\n  };\n  const handleNotice = () => {\n    setHasNotice(false);\n    setLoading(false);\n    navigation.navigate('SetLocation');\n  };\n  const handleSuccess = async () => {\n    setIsSuccess(false);\n    await OnLoadWallet('user', userReducer.user.authToken)\n    await load();\n    setLoading(false);\n    // navigation.navigate('Login');\n  };\n\n  const load = async () => {\n    try {\n      let existingUser = userReducer.user;\n      let wallet = walletReducer.wallet;\n      let wastelogs = walletReducer.wastelogs;\n      setWasteLogs(wastelogs || []);\n\n      let converts: Array<WasteLogModel> = [];\n      let preTotal = 0;\n      let totalWeight = 0;\n      for (let i = 0; i < wastelogs.length; i++) {\n        let currentLog = wastelogs[i];\n        if (currentLog.available_weight > 1000) {\n          converts.push(currentLog);\n          totalWeight += currentLog.available_weight;\n          let price = 0;\n          let title = currentLog.name;\n          if (title === 'Batteries') {\n            price = 2700;\n          } else if (title === 'HDPE') {\n            price = 3000;\n          } else if (title === 'Carton') {\n            price = 1800;\n          } else if (title === 'Copper') {\n            price = 4000;\n          } else if (title === 'Tin') {\n            price = 5000;\n          } else if (title === 'PET') {\n            price = 1500;\n          } else if (title === 'Aluminium') {\n            price = 5500;\n          } else if (title === 'Steel') {\n            price = 6000;\n          } else if (title === 'Paper') {\n            price = 1500;\n          } else if (title === 'SachetWater') {\n            price = 1000;\n          } else if (title === 'White Nylon') {\n            price = 2500;\n          } else if (title === 'Metal') {\n            price = 3000;\n          }\n          let subTotal = price / 100 * (currentLog.available_weight / 1000);\n          preTotal += subTotal;\n        }\n      }\n      setConvertibles(converts);\n      const [valueFormattedWithSymbol, valueFormattedWithoutSymbol, symbol] = formatCurrency({ amount: (preTotal * 100)/100, code: \"USD\" });\n      setTotal(valueFormattedWithoutSymbol);\n      setTotalWeight(totalWeight / 1000);\n    } catch (error) {\n      return;\n    }\n  };\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      if (!mounted) {\n        return;\n      }\n      await load();\n\n    })();\n    return () => {\n      mounted = false;\n    };\n\n  }, []);\n\n  const preConvertItem = async (id, amount) => {\n    try {\n      setLoading(true);\n      let currentItem = convertibles.find((item) => item._id === id);\n      setActiveItem(id);\n      if (currentItem) {\n        setNoticeMessage(`Convert your stored ${currentItem.name} of ${currentItem.available_weight / 1000} for ₦${amount}`);\n        setHasNotice(true);\n      }\n    } catch (error) {\n      setLoading(false);\n      setError(\"Error kindly retry\");\n      setHasError(true);\n    }\n  };\n  const preConvertAll = async () => {\n    try {\n      setLoading(true);\n      setNoticeAllMessage(`Convert your all Items of ${totalWeight} for ₦${total}`);\n      setHasAllNotice(true);\n    } catch (error) {\n      setLoading(false);\n      setError(\"Error kindly retry\");\n      setHasError(true);\n    }\n  };\n  const readyConvertAll = async () => {\n    setHasAllNotice(false);\n    try {\n      setLoading(true);\n      let res = await OnConvertAllItems('user');\n      if (res.success === 'success') {\n        setSuccessMessage('All Recyclables converted');\n        setIsSuccess(true);\n      } else if (res.error) {\n        setError(res.error);\n        setHasError(true);\n      } else {\n        setError(\"Error kindly retry\");\n        setHasError(true);\n      }\n\n    } catch (error) {\n      setLoading(false);\n      setError(\"Error kindly retry\");\n      setHasError(true);\n    }\n  };\n  const readyConvertItem = async () => {\n    setHasNotice(false);\n    let actItem = convertibles.find((item) => item._id === activeItem);\n    if (actItem) {\n      let id = actItem.recyclable;\n      try {\n        setLoading(true);\n\n        let res = await OnConvertItem(id, 'user');\n        if (res.success === 'success') {\n          setSuccessMessage('Weight Converted to Cash');\n          setIsSuccess(true);\n        } else if (res.error) {\n          setError(res.error);\n          setHasError(true);\n        } else {\n          setError(\"Error kindly retry\");\n          setHasError(true);\n        }\n\n\n      } catch (error) {\n        setLoading(false);\n        setError(\"Error kindly retry\");\n        setHasError(true);\n      }\n    }\n  };\n\n  return (\n    <NativeBaseProvider theme={theme}>\n      <SafeAreaView style={{ backgroundColor: '#fefefe' }} />\n      <ScrollView style={{ flex: 1, backgroundColor: 'white' }}>\n        <View style={styles.container}>\n          <View style={{ width: '100%', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', marginBottom: 60 }}>\n            <MaterialIcons name='recycle' style={{ fontSize: 80 }} color={COLORS.dark} />\n            <MaterialIcons name='forward' style={{ fontSize: 45, marginHorizontal: 20 }} color={COLORS.gray} />\n            <FontAwesome name='money-bill-wave' style={{ fontSize: 70 }} color={COLORS.primary} />\n          </View>\n          <WasteBalance logs={convertibles} convertItem={preConvertItem} totalWeight={totalWeight} />\n\n          <View style={{ width: '100%', flexDirection: 'row', marginBottom: 100, justifyContent: 'space-between', alignItems: 'center' }}>\n            {convertibles.length > 0 ?\n              <ButtonWithTitle\n                title={'Convert All for ₦' + total}\n                backgroundColor={COLORS.primary}\n                noBg={false}\n                color={COLORS.white}\n                loading={loading}\n                onTap={() => preConvertAll()}\n                width={'100%'}\n                bordered\n              /> : null}\n          </View>\n          <SuccessSheet message={successMessage} open={isSuccess} closed={handleSuccess} />\n          <ErrorSheet error={error} open={hasError} closed={clearError} />\n          <NoticeSheet message={noticeMessage} open={hasNotice} closed={readyConvertItem} />\n          <NoticeSheet message={noticeAllMessage} open={hasAllNotice} closed={readyConvertAll} />\n        </View>\n\n      </ScrollView>\n      <SafeAreaView style={{ backgroundColor: '#fefefe' }} />\n    </NativeBaseProvider>\n  );\n};\n\nconst WasteBalance = ({ totalWeight, logs, convertItem }) => {\n  return (\n    <View style={{ ...styles.insuranceContainer,  borderWidth: 1, borderColor: COLORS.fade, backgroundColor: COLORS.pallete_white }}>\n      <Text style={{ ...styles.insuranceHeading, color: COLORS.pallete_deep, textAlign: 'center' }}>Convertible Items</Text>\n      <View style={{ width: '100%', flexDirection: 'column', justifyContent: 'center' }}>\n        <View style={{ width: '100%', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n          <Text style={{ ...styles.insurancePlan, fontSize: SIZES.extraLarge + 10, color: COLORS.dark, marginBottom: 0 }}>{totalWeight} Kg</Text>\n        </View>\n        {logs.length > 0\n          ? <View style={{ width: '100%', marginTop: 20 }}>\n            {\n              logs.map((item: WasteLogModel) => (\n                <Convertible\n                  onTap={(id, amount) => convertItem(id, amount)}\n                  title={item.name}\n                  balance={item.available_weight / 1000 || 0}\n                  backgroundColor={COLORS.white}\n                  tint={COLORS.fade}\n                  color={COLORS.pallete_deep}\n                  loading={false}\n                  id={item._id}\n                  key={item._id}\n                />\n              ))\n            }\n\n\n          </View>\n          : <View style={{ width: '100%', marginVertical: 20, justifyContent: 'center', alignItems: 'center' }}>\n            <Text style={{ fontSize: SIZES.medium, fontFamily: FONTS.medium, color: COLORS.pallete_deep, textAlign: 'center' }}>\n              No convertible items available. Take your wastes to the nearest SOSOCARE Agent to increase your balance.\n            </Text>\n\n          </View>\n        }\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  insuranceContainer: {\n    width: '100%',\n    backgroundColor: COLORS.primary,\n    borderRadius: 15,\n    paddingTop: 30,\n    paddingBottom: 10,\n    marginBottom: 20,\n    paddingHorizontal: 18,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    borderTopEndRadius: 15,\n    elevation: 5,\n    shadowColor: 'rgb(230, 235, 243)',\n    shadowOffset: { width: 4, height: 12 },\n    shadowOpacity: 0.5,\n    shadowRadius: 10\n  },\n  insuranceHeading: {\n    fontSize: SIZES.extraLarge,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18,\n    textAlign: 'center',\n    width: '100%'\n  },\n  insurancePlan: {\n    fontSize: SIZES.extraLarge,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 6\n  },\n  container: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fefefe',\n    paddingHorizontal: 24,\n    paddingTop: 20\n  },\n  imageBg: {\n    resizeMode: 'cover',\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: 'center'\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10,\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n});\n\nconst mapToStateProps = (state: ApplicationState) => ({\n  userReducer: state.UserReducer,\n  walletReducer: state.WalletReducer\n});\n\nconst ConversionScreen = connect(mapToStateProps, { OnConvertItem, OnLoadWallet, OnConvertAllItems })(_ConversionScreen);\nexport default ConversionScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}