{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport * as Location from \"expo-location\";\nimport { formatCurrency } from \"react-native-format-currency\";\nimport { Paystack } from \"react-native-paystack-webview\";\nimport Wizard from \"react-native-wizard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TextField } from \"../../components/TextField\";\nimport { ButtonWithTitle } from \"../../components/ButtonWithTitle\";\nimport SelectField from \"../../components/SelectField\";\nimport ErrorSheet from \"../../components/ErrorSheet\";\nimport SuccessSheet from \"../../components/SuccessSheet\";\nimport NoticeSheet from \"../../components/NoticeSheet\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"yup-phone\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: \"#52A56E\",\n      200: \"#C6C6C6\"\n    }\n  },\n  config: config\n});\nimport { connect } from \"react-redux\";\nimport { OnLoadPlans, OnBuyInsuranceOnboarding, OnGetPayStackKey } from \"../../redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { yupSequentialStringSchema } from \"../../utils/yup-utils\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\nimport { BASE_URL } from \"../../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar keyboardVerticalOffset = Platform.OS === \"ios\" ? 20 : 0;\nvar resetFormError;\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\nvar _OnboardingScreen = function _OnboardingScreen(props) {\n  var OnLoadPlans = props.OnLoadPlans,\n    insuranceReducer = props.insuranceReducer,\n    OnGetPayStackKey = props.OnGetPayStackKey,\n    OnBuyInsuranceOnboarding = props.OnBuyInsuranceOnboarding;\n  var navigation = useNavigation();\n  var checkEmail = function () {\n    var _ref = _asyncToGenerator(function* (email) {\n      try {\n        var configurationObject = {\n          method: \"post\",\n          url: `${BASE_URL}user/check-email`,\n          data: {\n            email: email\n          }\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (resBody[\"status\"] === \"error\") {\n          return {\n            error: resBody[\"message\"]\n          };\n        } else {\n          return {\n            success: resBody[\"status\"]\n          };\n        }\n      } catch (error) {\n        return {\n          error: error\n        };\n      }\n    });\n    return function checkEmail(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var checkPhone = function () {\n    var _ref2 = _asyncToGenerator(function* (phone) {\n      try {\n        var configurationObject = {\n          method: \"post\",\n          url: `${BASE_URL}user/check-phone`,\n          data: {\n            phone: phone\n          }\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (resBody[\"status\"] === \"error\") {\n          return {\n            error: resBody[\"message\"]\n          };\n        } else {\n          return {\n            success: resBody[\"status\"]\n          };\n        }\n      } catch (error) {\n        return {\n          error: error\n        };\n      }\n    });\n    return function checkPhone(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    plans = _useState2[0],\n    setPlans = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activePlan = _useState4[0],\n    setActivePlan = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    firstLoading = _useState8[0],\n    setFirstLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    reload = _useState10[0],\n    setReload = _useState10[1];\n  var _useState11 = useState({\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      phone: \"\",\n      token: \"\",\n      password: \"\"\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    formData = _useState12[0],\n    setFormData = _useState12[1];\n  var wizard = useRef(null);\n  var _useState13 = useState(true),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isFirstStep = _useState14[0],\n    setIsFirstStep = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isLastStep = _useState16[0],\n    setIsLastStep = _useState16[1];\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    currentStep = _useState18[0],\n    setCurrentStep = _useState18[1];\n  var _useState19 = useState(\"Select a Plan\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    stepTitle = _useState20[0],\n    setStepTitle = _useState20[1];\n  var selectPlan = function selectPlan(id) {\n    var selectedPlan = plans.find(function (item) {\n      return item._id === id;\n    });\n    setStepTitle(\"Fill in your details\");\n    wizard.current.next();\n    setActivePlan(selectedPlan);\n  };\n  var handleSubmit1 = function () {\n    var _ref4 = _asyncToGenerator(function* (_ref3) {\n      var firstName = _ref3.firstName,\n        lastName = _ref3.lastName,\n        email = _ref3.email,\n        phone = _ref3.phone,\n        password = _ref3.password;\n      setLoading(true);\n      try {\n        setFormData(function (prev) {\n          return Object.assign(prev, {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            phone: phone,\n            password: password\n          });\n        });\n        var res = yield checkEmail(email);\n        if (res.success === \"success\") {\n          var res2 = yield checkPhone(phone);\n          if (res2.success === \"success\") {\n            setLoading(false);\n            setStepTitle(\"Make payment\");\n            wizard.current.next();\n          } else if (res2.error) {\n            setLoading(false);\n            setError(res2.error);\n            setHasError(true);\n          } else {\n            setLoading(false);\n            setError(\"Error kindly retry\");\n            setHasError(true);\n          }\n        } else if (res.error) {\n          setLoading(false);\n          setError(res.error);\n          setHasError(true);\n        } else {\n          setLoading(false);\n          setError(\"Error kindly retry\");\n          setHasError(true);\n        }\n      } catch (err) {\n        console.log(\"step 2: \", err);\n      }\n    });\n    return function handleSubmit1(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var onPaymentSuccess = function onPaymentSuccess() {\n    setSuccessMessage(\"Congratulations. Your account has been created and your subscription activated. Login to access your account.\");\n    setIsSuccess(true);\n  };\n  var stepList = [{\n    content: _jsx(FirstStep, {\n      plans: plans,\n      selectPlan: selectPlan\n    })\n  }, {\n    content: _jsx(SecondStep, {\n      loading: loading,\n      formData: formData,\n      handleSubmit1: handleSubmit1\n    })\n  }, {\n    content: _jsx(ThirdStep, {\n      externalLoading: loading,\n      formData: formData,\n      OnBuyInsuranceOnboarding: OnBuyInsuranceOnboarding,\n      OnGetPayStackKey: OnGetPayStackKey,\n      plan: activePlan,\n      onPaymentSuccess: onPaymentSuccess\n    })\n  }];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    hasError = _useState22[0],\n    setHasError = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    isSuccess = _useState24[0],\n    setIsSuccess = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    error = _useState26[0],\n    setError = _useState26[1];\n  var _useState27 = useState(\"\"),\n    _useState28 = _slicedToArray(_useState27, 2),\n    successMessage = _useState28[0],\n    setSuccessMessage = _useState28[1];\n  var clearError = function clearError() {\n    setHasError(false);\n  };\n  var handleSuccess = function handleSuccess() {\n    setIsSuccess(false);\n    navigation.navigate(\"Login\");\n  };\n  var _useState29 = useState(\"email\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    signUpMethod = _useState30[0],\n    setSignUpMethod = _useState30[1];\n  useEffect(function () {\n    var mounted = true;\n    var source = axios.CancelToken.source();\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      try {\n        setFirstLoading(true);\n        yield OnLoadPlans();\n        var _plans = insuranceReducer.plans;\n        if (!mounted) {\n          return;\n        }\n        setPlans(_plans);\n        setFirstLoading(false);\n      } catch (error) {\n        setFirstLoading(false);\n        setError(\"Unable to load Insurance Plans\");\n        setHasError(true);\n        return;\n      }\n    })();\n    return function () {\n      source.cancel();\n      mounted = false;\n    };\n  }, [reload]);\n  return _jsx(NativeBaseProvider, {\n    theme: theme,\n    children: _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsx(ImageBackground, {\n        source: require(\"../../../assets/auth-bg.png\"),\n        style: styles.container,\n        children: _jsx(KeyboardAwareScrollView, {\n          extraScrollHeight: keyboardVerticalOffset,\n          style: {\n            flex: 1,\n            width: \"100%\"\n          },\n          children: _jsxs(View, {\n            style: {\n              width: \"100%\",\n              height: \"100%\",\n              flex: 1,\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: [_jsx(View, {\n              style: styles.imageContainer,\n              children: _jsx(Image, {\n                source: require(\"../../../assets/sosocare_logo.png\"),\n                style: styles.headerImage\n              })\n            }), _jsxs(View, {\n              style: styles.formContainer,\n              children: [_jsx(Text, {\n                style: _objectSpread({}, styles.headingText),\n                children: stepTitle\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-start\",\n                  alignItems: \"center\",\n                  width: \"100%\"\n                },\n                children: [currentStep > 0 ? _jsxs(Pressable, {\n                  style: {\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\"\n                  },\n                  onPress: function onPress() {\n                    return wizard.current.prev();\n                  },\n                  children: [_jsx(Ionicons, {\n                    name: \"ios-chevron-back\",\n                    style: _objectSpread(_objectSpread({}, styles.subHeadingText), {}, {\n                      fontSize: 20,\n                      marginLeft: 0,\n                      color: COLORS.primary\n                    }),\n                    color: COLORS.primary\n                  }), _jsx(Text, {\n                    style: _objectSpread(_objectSpread({}, styles.subHeadingText), {}, {\n                      color: COLORS.primary,\n                      marginLeft: 0\n                    }),\n                    children: \"Back\"\n                  })]\n                }) : null, _jsxs(Text, {\n                  style: _objectSpread(_objectSpread({}, styles.subHeadingText), {}, {\n                    marginLeft: currentStep > 0 ? 33 : 0\n                  }),\n                  children: [\"Step \", currentStep + 1, \" of 3\"]\n                })]\n              }), _jsx(View, {\n                style: styles.form,\n                children: firstLoading ? _jsx(View, {\n                  style: {\n                    flex: 1,\n                    height: 500,\n                    maxHeight: \"100%\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                  },\n                  children: _jsx(ActivityIndicator, {\n                    size: \"large\"\n                  })\n                }) : _jsx(View, {\n                  children: _jsx(Wizard, {\n                    ref: wizard,\n                    steps: stepList,\n                    isFirstStep: function isFirstStep(val) {\n                      return setIsFirstStep(val);\n                    },\n                    isLastStep: function isLastStep(val) {\n                      return setIsLastStep(val);\n                    },\n                    currentStep: function currentStep(_ref6) {\n                      var currentStep = _ref6.currentStep,\n                        isLastStep = _ref6.isLastStep,\n                        isFirstStep = _ref6.isFirstStep;\n                      setCurrentStep(currentStep);\n                    }\n                  })\n                })\n              })]\n            }), _jsxs(View, {\n              style: {\n                width: \"100%\",\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginVertical: 25\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontSize: 14,\n                  fontFamily: FONTS.semiBold,\n                  color: COLORS.dark\n                },\n                children: \"Already registered?\"\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"Login\");\n                },\n                style: {\n                  marginLeft: 4\n                },\n                children: _jsx(Text, {\n                  style: {\n                    color: COLORS.primary,\n                    fontSize: 14,\n                    fontFamily: FONTS.semiBold\n                  },\n                  children: \"Log in\"\n                })\n              })]\n            }), _jsx(SuccessSheet, {\n              message: successMessage,\n              open: isSuccess,\n              closed: handleSuccess\n            }), _jsx(ErrorSheet, {\n              error: error,\n              open: hasError,\n              closed: clearError\n            })]\n          })\n        })\n      })\n    })\n  });\n};\nvar Step0 = function Step0(_ref7) {\n  _objectDestructuringEmpty(_ref7);\n  return _jsxs(View, {\n    style: {\n      width: \"100%\",\n      marginTop: \"20%\",\n      marginBottom: \"10%\"\n    },\n    children: [_jsx(View, {\n      style: {\n        width: \"100%\",\n        marginBottom: 10\n      },\n      children: _jsx(ButtonWithTitle, {\n        loading: false,\n        noBg: false,\n        title: \"Sign up with Phone\",\n        backgroundColor: COLORS.primary,\n        color: COLORS.white,\n        onTap: function onTap() {},\n        width: \"100%\"\n      })\n    }), _jsx(ButtonWithTitle, {\n      loading: false,\n      noBg: false,\n      title: \"Sign up with Email\",\n      backgroundColor: COLORS.pallete_white,\n      color: COLORS.dark,\n      onTap: function onTap() {},\n      width: \"100%\"\n    })]\n  });\n};\nvar FirstStep = function FirstStep(_ref8) {\n  var plans = _ref8.plans,\n    selectPlan = _ref8.selectPlan;\n  return _jsx(View, {\n    style: {\n      width: \"100%\"\n    },\n    children: _jsx(View, {\n      style: {\n        marginVertical: 10,\n        width: \"100%\",\n        alignItems: \"center\"\n      }\n    })\n  });\n};\nvar SecondStep = function SecondStep(_ref9) {\n  var handleSubmit1 = _ref9.handleSubmit1,\n    loading = _ref9.loading,\n    formData = _ref9.formData;\n  var Step1Schema = yup.object().shape({\n    firstName: yup.string().trim().min(2, \"Too Short!\").max(50, \"Too Long!\").matches(/[A-Za-z ]{1,32}/, \"Only alphabets are allowed\").required(\"First Name is required\"),\n    lastName: yup.string().trim().min(2, \"Too Short!\").max(50, \"Too Long!\").matches(/[A-Za-z ]{1,32}/, \"Only alphabets are allowed\").required(\"Last Name is required\"),\n    email: yupSequentialStringSchema([yup.string().required(\"Email is required\"), yup.string().email(\"Invalid email format\")], resetFormError),\n    phone: yupSequentialStringSchema([yup.string().required(\"Phone Number is required\"), yup.string().matches(/^\\S*$/, \"Please provied phone mumber without spaces and dashes in format like 08012345678\"), yup.string().phone(\"Please enter valid phone number\")], resetFormError),\n    password: yup.string().required(\"Pin is required\").min(4, \"Password must be at least 4 characters\").max(4, \"Password must not be more than 4 characters\"),\n    confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Pins must match\").required(\"Pin is Required\")\n  });\n  return _jsx(Formik, {\n    initialValues: {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      phone: formData.phone,\n      password: formData.password,\n      confirmPassword: formData.password\n    },\n    onSubmit: function onSubmit(values) {\n      return handleSubmit1(values);\n    },\n    validationSchema: Step1Schema,\n    children: function children(_ref10) {\n      var errors = _ref10.errors,\n        handleBlur = _ref10.handleBlur,\n        touched = _ref10.touched,\n        handleChange = _ref10.handleChange,\n        handleSubmit = _ref10.handleSubmit;\n      return _jsxs(View, {\n        style: {\n          width: \"100%\"\n        },\n        children: [_jsx(TextField, {\n          hasIcon: false,\n          label: \"First name\",\n          isSecure: false,\n          handleChange: handleChange(\"firstName\"),\n          passBlur: handleBlur(\"firstName\"),\n          value: formData.firstName\n        }), errors.firstName && touched.firstName ? _jsx(Text, {\n          style: styles.errorText,\n          children: errors.firstName.toString()\n        }) : null, _jsx(TextField, {\n          hasIcon: false,\n          label: \"Last name\",\n          isSecure: false,\n          handleChange: handleChange(\"lastName\"),\n          passBlur: handleBlur(\"lastName\"),\n          value: formData.lastName\n        }), errors.lastName && touched.lastName ? _jsx(Text, {\n          style: styles.errorText,\n          children: errors.lastName.toString()\n        }) : null, _jsx(TextField, {\n          hasIcon: false,\n          label: \"Email\",\n          isSecure: false,\n          isEmail: true,\n          handleChange: handleChange(\"email\"),\n          passBlur: handleBlur(\"email\"),\n          value: formData.email\n        }), errors.email && touched.email ? _jsx(Text, {\n          style: styles.errorText,\n          children: errors.email.toString()\n        }) : null, _jsx(TextField, {\n          hasIcon: false,\n          isNumber: true,\n          isPhone: true,\n          label: \"Phone Number\",\n          isSecure: false,\n          handleChange: handleChange(\"phone\"),\n          passBlur: handleBlur(\"phone\"),\n          value: formData.phone\n        }), errors.phone && touched.phone ? _jsx(Text, {\n          style: styles.errorText,\n          children: errors.phone.toString()\n        }) : null, _jsx(TextField, {\n          hasIcon: true,\n          label: \"Pin\",\n          icon: \"lock-open-outline\",\n          isSecure: true,\n          handleChange: handleChange(\"password\"),\n          passBlur: handleBlur(\"password\"),\n          value: formData.password\n        }), errors.password && touched.password ? _jsx(Text, {\n          style: styles.errorText,\n          children: errors.password.toString()\n        }) : null, _jsx(TextField, {\n          hasIcon: true,\n          icon: \"lock-open-outline\",\n          label: \"Confirm Pin\",\n          isSecure: true,\n          handleChange: handleChange(\"confirmPassword\"),\n          passBlur: handleBlur(\"confirmPassword\"),\n          value: formData.password\n        }), errors.confirmPassword && touched.confirmPassword ? _jsx(Text, {\n          style: styles.errorText,\n          children: errors.confirmPassword.toString()\n        }) : null, _jsx(ButtonWithTitle, {\n          loading: loading,\n          noBg: false,\n          title: \"Continue\",\n          backgroundColor: COLORS.primary,\n          color: COLORS.white,\n          onTap: handleSubmit,\n          width: \"100%\"\n        })]\n      });\n    }\n  });\n};\nvar ThirdStep = function ThirdStep(_ref11) {\n  var onPaymentSuccess = _ref11.onPaymentSuccess,\n    plan = _ref11.plan,\n    externalLoading = _ref11.externalLoading,\n    OnGetPayStackKey = _ref11.OnGetPayStackKey,\n    formData = _ref11.formData,\n    OnBuyInsuranceOnboarding = _ref11.OnBuyInsuranceOnboarding;\n  var _useState31 = useState(),\n    _useState32 = _slicedToArray(_useState31, 2),\n    address = _useState32[0],\n    setAddress = _useState32[1];\n  var _useState33 = useState(\"\"),\n    _useState34 = _slicedToArray(_useState33, 2),\n    addressState = _useState34[0],\n    setAddressState = _useState34[1];\n  var _useState35 = useState(\"\"),\n    _useState36 = _slicedToArray(_useState35, 2),\n    city = _useState36[0],\n    setCity = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    cities = _useState38[0],\n    setCities = _useState38[1];\n  var _useState39 = useState(\"Waiting for Current Location\"),\n    _useState40 = _slicedToArray(_useState39, 2),\n    displayAddress = _useState40[0],\n    setDisplayAddress = _useState40[1];\n  var _useState41 = useState(false),\n    _useState42 = _slicedToArray(_useState41, 2),\n    loading = _useState42[0],\n    setLoading = _useState42[1];\n  var _useState43 = useState(false),\n    _useState44 = _slicedToArray(_useState43, 2),\n    hasError = _useState44[0],\n    setHasError = _useState44[1];\n  var _useState45 = useState(false),\n    _useState46 = _slicedToArray(_useState45, 2),\n    isSuccess = _useState46[0],\n    setIsSuccess = _useState46[1];\n  var _useState47 = useState(false),\n    _useState48 = _slicedToArray(_useState47, 2),\n    hasNotice = _useState48[0],\n    setHasNotice = _useState48[1];\n  var _useState49 = useState(\"\"),\n    _useState50 = _slicedToArray(_useState49, 2),\n    noticeMessage = _useState50[0],\n    setNoticeMessage = _useState50[1];\n  var _useState51 = useState(\"\"),\n    _useState52 = _slicedToArray(_useState51, 2),\n    error = _useState52[0],\n    setError = _useState52[1];\n  var _useState53 = useState(\"\"),\n    _useState54 = _slicedToArray(_useState53, 2),\n    successMessage = _useState54[0],\n    setSuccessMessage = _useState54[1];\n  var clearError = function clearError() {\n    setHasError(false);\n  };\n  var handleSuccess = function handleSuccess() {\n    setIsSuccess(false);\n    onPaymentSuccess();\n  };\n  var handleNotice = function handleNotice() {\n    setHasNotice(false);\n    setLoading(false);\n  };\n  var _useState55 = useState(0),\n    _useState56 = _slicedToArray(_useState55, 2),\n    totalAmount = _useState56[0],\n    setTotalAmount = _useState56[1];\n  var _useState57 = useState(0),\n    _useState58 = _slicedToArray(_useState57, 2),\n    paymentAmount = _useState58[0],\n    setPaymentAmount = _useState58[1];\n  var _useState59 = useState(\"1 month\"),\n    _useState60 = _slicedToArray(_useState59, 2),\n    duration = _useState60[0],\n    setDuration = _useState60[1];\n  var _useState61 = useState(false),\n    _useState62 = _slicedToArray(_useState61, 2),\n    payingWithPayStack = _useState62[0],\n    setPayingWithPayStack = _useState62[1];\n  var _useState63 = useState(\"\"),\n    _useState64 = _slicedToArray(_useState63, 2),\n    paystackKey = _useState64[0],\n    setPaystackKey = _useState64[1];\n  var _useState65 = useState(false),\n    _useState66 = _slicedToArray(_useState65, 2),\n    verifying = _useState66[0],\n    setVerifying = _useState66[1];\n  var durations = [{\n    title: \"1 month\",\n    value: \"1 month\"\n  }, {\n    title: \"3 months\",\n    value: \"3 months\"\n  }, {\n    title: \"6 months\",\n    value: \"6 months\"\n  }, {\n    title: \"1 year\",\n    value: \"12 months\"\n  }];\n  var _useState67 = useState([]),\n    _useState68 = _slicedToArray(_useState67, 2),\n    hospitals = _useState68[0],\n    setHospitals = _useState68[1];\n  var _useState69 = useState([]),\n    _useState70 = _slicedToArray(_useState69, 2),\n    optionsHospitals = _useState70[0],\n    setOptionsHospitals = _useState70[1];\n  var _useState71 = useState([]),\n    _useState72 = _slicedToArray(_useState71, 2),\n    pharmas = _useState72[0],\n    setPharmas = _useState72[1];\n  var _useState73 = useState([]),\n    _useState74 = _slicedToArray(_useState73, 2),\n    optionsPharmas = _useState74[0],\n    setOptionsPharmas = _useState74[1];\n  var _useState75 = useState(),\n    _useState76 = _slicedToArray(_useState75, 2),\n    activePharma = _useState76[0],\n    setActivePharma = _useState76[1];\n  var _useState77 = useState(),\n    _useState78 = _slicedToArray(_useState77, 2),\n    activeHospital = _useState78[0],\n    setActiveHospital = _useState78[1];\n  var methods = [{\n    title: \"Wallet\",\n    value: \"Wallet\"\n  }, {\n    title: \"Paystack\",\n    value: \"Paystack\"\n  }];\n  var findHospitals = function () {\n    var _ref12 = _asyncToGenerator(function* (state, lga) {\n      try {\n        setLoading(true);\n        var configurationObject = {\n          method: \"post\",\n          url: `${BASE_URL}hospitals`,\n          data: {\n            state: state ? state : addressState,\n            lga: lga ? lga : city\n          }\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (resBody[\"status\"] === \"error\") {\n          setLoading(false);\n          setError(\"Error loading hospitals\");\n          setHasError(true);\n          return;\n        } else {\n          setHospitals(resBody.hospitals);\n          var thisHosps = [];\n          for (var i = 0; i < resBody.hospitals.length; i++) {\n            var hops = resBody.hospitals[i];\n            thisHosps.push({\n              title: `${hops.name}`,\n              value: hops.name\n            });\n          }\n          setOptionsHospitals(thisHosps);\n          setLoading(false);\n          return;\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        setHasError(true);\n        return;\n      }\n    });\n    return function findHospitals(_x4, _x5) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  var findPharmas = function () {\n    var _ref13 = _asyncToGenerator(function* (state, lga) {\n      try {\n        setLoading(true);\n        var configurationObject = {\n          method: \"post\",\n          url: `${BASE_URL}pharmacies`,\n          data: {\n            state: state ? state : addressState,\n            lga: lga ? lga : city\n          }\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (resBody[\"status\"] === \"error\") {\n          setLoading(false);\n          setError(\"Error loading pharmacies\");\n          setHasError(true);\n          return;\n        } else {\n          setPharmas(resBody.pharmacies);\n          var thisPhams = [];\n          for (var i = 0; i < resBody.pharmacies.length; i++) {\n            var pharm = resBody.pharmacies[i];\n            thisPhams.push({\n              title: pharm.name,\n              value: pharm.name\n            });\n          }\n          setOptionsPharmas(thisPhams);\n          setLoading(false);\n          return;\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        setHasError(true);\n        return;\n      }\n    });\n    return function findPharmas(_x6, _x7) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      if (addressState && addressState !== \"\") return;\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status !== \"granted\") {\n          setError(\"Permission to access location is not granted\");\n          setHasError(true);\n          setLoading(false);\n        }\n        var location = yield Location.getCurrentPositionAsync({});\n        var coords = location.coords;\n        if (coords) {\n          var latitude = coords.latitude,\n            longitude = coords.longitude;\n          if (!mounted) {\n            return;\n          }\n          var addressResponse = yield Location.reverseGeocodeAsync({\n            latitude: latitude,\n            longitude: longitude\n          });\n          var region = \"\";\n          var lga = \"\";\n          for (var item of addressResponse) {\n            setLoading(false);\n            region = item.region;\n            lga = item.city;\n            setAddress(item);\n            var currentAddress = `${item.name},${item.street}, ${item.postalCode}, ${item.country}`;\n            setDisplayAddress(currentAddress);\n            setAddressState(item.region);\n            setCity(item.city);\n            return;\n          }\n          if (plan.name === \"Sosocare Basic Plan\") {\n            yield findPharmas(region, lga);\n          } else if (plan.name === \"Sosocare Silver Plan\") {\n            yield findHospitals(region, lga);\n          } else {\n            yield findPharmas(region, lga);\n            yield findHospitals(region, lga);\n          }\n          setLoading(false);\n        } else {\n          setError(\"Could't get location automatically\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setError(error.message);\n        if (error.message.toLowerCase().includes(\"location\")) {\n          setError(\"Permission to access location is not granted\");\n        }\n        setHasError(true);\n        setLoading(false);\n        return;\n      }\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!addressState || addressState === \"\") return;\n      if (!mounted) {\n        return;\n      }\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        var configurationObject = {\n          method: \"get\",\n          url: `${BASE_URL}cities?state=${addressState.toLowerCase()}`,\n          cancelToken: source.token\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (!mounted) {\n          return;\n        }\n        if (resBody[\"cities\"]) {\n          var allCities = resBody[\"cities\"].map(function (item) {\n            return {\n              title: item.title,\n              value: item.title\n            };\n          });\n          setCities(allCities);\n          var isExist = allCities.find(function (item) {\n            return item.title === city;\n          });\n          if (!isExist) {\n            var defaultCity = allCities[0].title;\n            setCity(defaultCity);\n          }\n          setLoading(false);\n          return;\n        } else {\n          setError(\"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        if (axios.isCancel(error)) {} else {\n          setError(error.message || \"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n          return;\n        }\n      }\n    })();\n    return function () {\n      source.cancel();\n      mounted = false;\n    };\n  }, [addressState]);\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!city || city === \"\") return;\n      if (!mounted) {\n        return;\n      }\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        if (plan.name === \"Sosocare Basic Plan\") {\n          yield findPharmas(addressState, city);\n        } else if (plan.name === \"Sosocare Silver Plan\") {\n          yield findHospitals(addressState, city);\n        } else {\n          yield findPharmas(addressState, city);\n          yield findHospitals(addressState, city);\n        }\n        setLoading(false);\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setLoading(false);\n      }\n    })();\n    return function () {\n      source.cancel();\n      mounted = false;\n    };\n  }, [city]);\n  var states = [{\n    title: \"Abia\",\n    value: \"Abia\"\n  }, {\n    title: \"Adamawa\",\n    value: \"Adamawa\"\n  }, {\n    title: \"Akwa Ibom\",\n    value: \"Akwa Ibom\"\n  }, {\n    title: \"Anambra\",\n    value: \"Anambra\"\n  }, {\n    title: \"Bauchi\",\n    value: \"Bauchi\"\n  }, {\n    title: \"Bayelsa\",\n    value: \"Bayelsa\"\n  }, {\n    title: \"Benue\",\n    value: \"Benue\"\n  }, {\n    title: \"Borno\",\n    value: \"Borno\"\n  }, {\n    title: \"Cross River\",\n    value: \"Cross River\"\n  }, {\n    title: \"Delta\",\n    value: \"Delta\"\n  }, {\n    title: \"Ebonyi\",\n    value: \"Ebonyi\"\n  }, {\n    title: \"Edo\",\n    value: \"Edo\"\n  }, {\n    title: \"Ekiti\",\n    value: \"Ekiti\"\n  }, {\n    title: \"Enugu\",\n    value: \"Enugu\"\n  }, {\n    title: \"FCT - Abuja\",\n    value: \"FCT - Abuja\"\n  }, {\n    title: \"Gombe\",\n    value: \"Gombe\"\n  }, {\n    title: \"Imo\",\n    value: \"Imo\"\n  }, {\n    title: \"Jigawa\",\n    value: \"Jigawa\"\n  }, {\n    title: \"Kaduna\",\n    value: \"Kaduna\"\n  }, {\n    title: \"Kano\",\n    value: \"Kano\"\n  }, {\n    title: \"Katsina\",\n    value: \"Katsina\"\n  }, {\n    title: \"Kebbi\",\n    value: \"Kebbi\"\n  }, {\n    title: \"Kogi\",\n    value: \"Kogi\"\n  }, {\n    title: \"Kwara\",\n    value: \"Kwara\"\n  }, {\n    title: \"Lagos\",\n    value: \"Lagos\"\n  }, {\n    title: \"Nasarawa\",\n    value: \"Nasarawa\"\n  }, {\n    title: \"Niger\",\n    value: \"Niger\"\n  }, {\n    title: \"Ogun\",\n    value: \"Ogun\"\n  }, {\n    title: \"Ondo\",\n    value: \"Ondo\"\n  }, {\n    title: \"Osun\",\n    value: \"Osun\"\n  }, {\n    title: \"Oyo\",\n    value: \"Oyo\"\n  }, {\n    title: \"Plateau\",\n    value: \"Plateau\"\n  }, {\n    title: \"Rivers\",\n    value: \"Rivers\"\n  }, {\n    title: \"Sokoto\",\n    value: \"Sokoto\"\n  }, {\n    title: \"Taraba\",\n    value: \"Taraba\"\n  }, {\n    title: \"Yobe\",\n    value: \"Yobe\"\n  }, {\n    title: \"Zamfara\",\n    value: \"Zamfara\"\n  }];\n  var PurchaseSchema = yup.object().shape({\n    duration: yup.string().required(\"Duration is required\"),\n    payment_method: yup.string().required(\"Payment Method is required\"),\n    amount: yup.string().required(),\n    state: yup.string().required(\"State is required\"),\n    city: yup.string().required(\"City is required\"),\n    centre: yup.string().required(`Preferred ${plan.name === \"Sosocare Basic Plan\" ? \"Pharmacy\" : \"Hospital\"} is required`)\n  });\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      var multiplier = parseInt(duration.charAt(0));\n      var totalPrice = plan.price * multiplier;\n      setPaymentAmount(totalPrice / 100 * 100 / 100);\n      var _formatCurrency = formatCurrency({\n          amount: totalPrice / 100,\n          code: \"USD\"\n        }),\n        _formatCurrency2 = _slicedToArray(_formatCurrency, 3),\n        incomeValueFormattedWithSymbol = _formatCurrency2[0],\n        incomeValueFormattedWithoutSymbol = _formatCurrency2[1],\n        incomeSymbol = _formatCurrency2[2];\n      setTotalAmount(incomeValueFormattedWithoutSymbol);\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, [duration]);\n  var handlePayError = function handlePayError() {\n    setLoading(false);\n    setPayingWithPayStack(false);\n    setError(\"Payment Error\");\n    setHasError(true);\n  };\n  var handlePayDone = function () {\n    var _ref18 = _asyncToGenerator(function* (reference) {\n      try {\n        setVerifying(true);\n        setLoading(false);\n        var res = yield OnBuyInsuranceOnboarding(plan._id, duration, \"paystack\", reference, formData, addressState, city, activePharma, activeHospital);\n        if (res.pending) {\n          setVerifying(false);\n          setLoading(false);\n          setPayingWithPayStack(false);\n          setHasNotice(true);\n          setNoticeMessage(\"Confirmation pending. Your Insurance will be activated once we confirm your payment\");\n          return;\n        }\n        if (res.error) {\n          setVerifying(false);\n          setLoading(false);\n          setPayingWithPayStack(false);\n          setError(res.error);\n          setHasError(true);\n          return;\n        }\n        if (res.success) {\n          setVerifying(false);\n          setLoading(false);\n          setPayingWithPayStack(false);\n          setSuccessMessage(\"Congratulations, you now have Insurance cover at all of our partner facilities.\");\n          setIsSuccess(true);\n          return;\n        }\n      } catch (error) {\n        setVerifying(false);\n        setLoading(false);\n        setPayingWithPayStack(false);\n        setError(error.message);\n        setHasError(true);\n        return;\n      }\n    });\n    return function handlePayDone(_x8) {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n  var handleSubmit = function () {\n    var _ref20 = _asyncToGenerator(function* (_ref19) {\n      var duration = _ref19.duration,\n        centre = _ref19.centre;\n      try {\n        setLoading(true);\n        setActiveHospital(centre);\n        setActivePharma(centre);\n        var res = yield OnGetPayStackKey();\n        if (res.success) {\n          setPaystackKey(res.paystack_public);\n          setLoading(false);\n          setPayingWithPayStack(true);\n          return;\n        } else {\n          setLoading(false);\n          setError(\"Unable to connect to Paystack, check your network and kindly try again\");\n          setHasError(true);\n          return;\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(\"Unable to connect to Paystack, check your network and kindly try again\");\n        setHasError(true);\n        return;\n      }\n    });\n    return function handleSubmit(_x9) {\n      return _ref20.apply(this, arguments);\n    };\n  }();\n  if (verifying) {\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"white\",\n        height: 500\n      },\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 10,\n          textAlign: \"center\",\n          fontSize: SIZES.large,\n          fontFamily: FONTS.semiBold,\n          color: COLORS.pallete_deep\n        },\n        children: \"Verifying transaction\"\n      })]\n    });\n  } else if (payingWithPayStack) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"white\"\n      },\n      children: _jsx(Paystack, {\n        paystackKey: paystackKey,\n        amount: paymentAmount,\n        billingEmail: formData.email,\n        onCancel: function onCancel(e) {\n          handlePayError();\n        },\n        onSuccess: function onSuccess(res) {\n          var _res$transactionRef;\n          handlePayDone(res == null ? void 0 : (_res$transactionRef = res.transactionRef) == null ? void 0 : _res$transactionRef.reference);\n        },\n        autoStart: true\n      })\n    });\n  } else {\n    return _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Formik, {\n        initialValues: {\n          duration: \"1 month\",\n          payment_method: \"Wallet\",\n          amount: totalAmount,\n          centre: \"\",\n          state: addressState,\n          city: city\n        },\n        onSubmit: function onSubmit(values) {\n          handleSubmit(values);\n        },\n        validationSchema: PurchaseSchema,\n        children: function children(_ref21) {\n          var errors = _ref21.errors,\n            touched = _ref21.touched,\n            _handleChange = _ref21.handleChange,\n            handleSubmit = _ref21.handleSubmit,\n            values = _ref21.values;\n          return _jsxs(View, {\n            style: {\n              width: \"100%\"\n            },\n            children: [_jsx(Text, {\n              style: styles.label,\n              children: \"Duration\"\n            }), _jsx(SelectField, {\n              hasIcon: false,\n              label: \"Duration\",\n              handleChange: function handleChange(val) {\n                _handleChange(\"duration\")(val);\n                setDuration(val);\n              },\n              options: durations,\n              isDisabled: false,\n              value: values.duration\n            }), errors.duration && touched.duration ? _jsx(Text, {\n              style: styles.errorText,\n              children: errors.duration.toString()\n            }) : null, _jsx(Text, {\n              style: styles.label,\n              children: \"Total Amount\"\n            }), _jsx(TextField, {\n              isNumber: true,\n              prefix: \"\\u20A6\",\n              label: \"Amount\",\n              isSecure: false,\n              isDisabled: true,\n              handleChange: _handleChange(\"amount\"),\n              value: totalAmount.toString()\n            }), _jsx(Text, {\n              style: styles.label,\n              children: \"State\"\n            }), _jsx(SelectField, {\n              hasIcon: false,\n              label: \"State\",\n              handleChange: function handleChange(val) {\n                _handleChange(\"state\")(val);\n                setAddressState(val);\n              },\n              options: states,\n              value: addressState,\n              isDisabled: loading\n            }), errors.state && touched.state ? _jsx(Text, {\n              style: styles.errorText,\n              children: errors.state\n            }) : null, _jsx(Text, {\n              style: styles.label,\n              children: \"LGA/City\"\n            }), _jsx(SelectField, {\n              hasIcon: false,\n              label: \"City\",\n              handleChange: function handleChange(val) {\n                _handleChange(\"city\")(val);\n                setCity(val);\n              },\n              options: cities,\n              value: city,\n              isDisabled: loading ? true : city && city !== \"\" ? false : addressState && addressState !== \"\" ? false : true\n            }), errors.city && touched.city ? _jsx(Text, {\n              style: styles.errorText,\n              children: errors.city\n            }) : null, plan.name === \"Sosocare Basic Plan\" && _jsxs(View, {\n              children: [_jsx(Text, {\n                style: styles.label,\n                children: \"Preferred Pharmacy\"\n              }), _jsx(SelectField, {\n                hasIcon: false,\n                label: \"Preferred Pharmacy\",\n                handleChange: _handleChange(\"centre\"),\n                options: optionsPharmas,\n                isDisabled: loading ? true : pharmas.length < 1 ? true : false\n              }), errors.centre && touched.centre ? _jsx(Text, {\n                style: styles.errorText,\n                children: errors.centre\n              }) : null]\n            }), plan.name === \"Sosocare Silver Plan\" && _jsxs(View, {\n              children: [_jsx(Text, {\n                style: styles.label,\n                children: \"Preferred Hospital\"\n              }), _jsx(SelectField, {\n                hasIcon: false,\n                label: \"Preferred Hospital\",\n                handleChange: _handleChange(\"centre\"),\n                options: optionsHospitals,\n                isDisabled: loading ? true : hospitals.length < 1 ? true : false\n              }), errors.centre && touched.centre ? _jsx(Text, {\n                style: styles.errorText,\n                children: errors.centre\n              }) : null]\n            }), _jsx(ButtonWithTitle, {\n              loading: loading,\n              noBg: false,\n              title: \"Pay with Paystack\",\n              backgroundColor: COLORS.primary,\n              color: COLORS.white,\n              onTap: handleSubmit,\n              width: \"100%\"\n            })]\n          });\n        }\n      }), _jsx(SuccessSheet, {\n        message: successMessage,\n        open: isSuccess,\n        closed: handleSuccess\n      }), _jsx(ErrorSheet, {\n        error: error,\n        open: hasError,\n        closed: clearError\n      }), _jsx(NoticeSheet, {\n        message: noticeMessage,\n        open: hasNotice,\n        closed: handleNotice\n      })]\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    width: \"100%\"\n  },\n  label: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.gray,\n    marginBottom: 10\n  },\n  imageContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 24\n  },\n  headerImage: {\n    resizeMode: \"contain\",\n    width: \"60%\",\n    marginVertical: 80\n  },\n  formContainer: {\n    width: \"100%\",\n    flexDirection: \"column\",\n    paddingHorizontal: 24\n  },\n  form: {\n    width: \"100%\",\n    flexDirection: \"column\"\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10\n  }\n});\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    insuranceReducer: state.InsuranceReducer\n  };\n};\nvar OnboardingScreen = connect(mapToStateProps, {\n  OnLoadPlans: OnLoadPlans,\n  OnGetPayStackKey: OnGetPayStackKey,\n  OnBuyInsuranceOnboarding: OnBuyInsuranceOnboarding\n})(_OnboardingScreen);\nexport default OnboardingScreen;","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Location","formatCurrency","Paystack","Wizard","View","Text","Pressable","ImageBackground","Platform","SafeAreaView","StyleSheet","Image","TouchableOpacity","ActivityIndicator","TextField","ButtonWithTitle","SelectField","ErrorSheet","SuccessSheet","NoticeSheet","KeyboardAwareScrollView","Ionicons","Formik","yup","NativeBaseProvider","extendTheme","config","useSystemColorMode","initialColorMode","theme","colors","primary","connect","OnLoadPlans","OnBuyInsuranceOnboarding","OnGetPayStackKey","useNavigation","yupSequentialStringSchema","COLORS","SIZES","FONTS","BASE_URL","jsx","_jsx","jsxs","_jsxs","keyboardVerticalOffset","OS","resetFormError","wait","timeout","Promise","resolve","setTimeout","_OnboardingScreen","props","insuranceReducer","navigation","checkEmail","_ref","_asyncToGenerator","email","configurationObject","method","url","data","response","resBody","error","success","_x","apply","arguments","checkPhone","_ref2","phone","_x2","_useState","_useState2","_slicedToArray","plans","setPlans","_useState3","_useState4","activePlan","setActivePlan","_useState5","_useState6","loading","setLoading","_useState7","_useState8","firstLoading","setFirstLoading","_useState9","_useState10","reload","setReload","_useState11","firstName","lastName","token","password","_useState12","formData","setFormData","wizard","_useState13","_useState14","isFirstStep","setIsFirstStep","_useState15","_useState16","isLastStep","setIsLastStep","_useState17","_useState18","currentStep","setCurrentStep","_useState19","_useState20","stepTitle","setStepTitle","selectPlan","id","selectedPlan","find","item","_id","current","next","handleSubmit1","_ref4","_ref3","prev","Object","assign","res","res2","setError","setHasError","err","console","log","_x3","onPaymentSuccess","setSuccessMessage","setIsSuccess","stepList","content","FirstStep","SecondStep","ThirdStep","externalLoading","plan","_useState21","_useState22","hasError","_useState23","_useState24","isSuccess","_useState25","_useState26","_useState27","_useState28","successMessage","clearError","handleSuccess","navigate","_useState29","_useState30","signUpMethod","setSignUpMethod","mounted","source","CancelToken","cancel","children","style","styles","container","require","extraScrollHeight","flex","width","height","justifyContent","alignItems","imageContainer","headerImage","formContainer","_objectSpread","headingText","flexDirection","onPress","name","subHeadingText","fontSize","marginLeft","color","form","maxHeight","display","size","ref","steps","val","_ref6","marginVertical","fontFamily","semiBold","dark","message","open","closed","Step0","_ref7","_objectDestructuringEmpty","marginTop","marginBottom","noBg","title","backgroundColor","white","onTap","pallete_white","_ref8","_ref9","Step1Schema","object","shape","string","trim","min","max","matches","required","confirmPassword","oneOf","initialValues","onSubmit","values","validationSchema","_ref10","errors","handleBlur","touched","handleChange","handleSubmit","hasIcon","label","isSecure","passBlur","value","errorText","toString","isEmail","isNumber","isPhone","icon","_ref11","_useState31","_useState32","address","setAddress","_useState33","_useState34","addressState","setAddressState","_useState35","_useState36","city","setCity","_useState37","_useState38","cities","setCities","_useState39","_useState40","displayAddress","setDisplayAddress","_useState41","_useState42","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","hasNotice","setHasNotice","_useState49","_useState50","noticeMessage","setNoticeMessage","_useState51","_useState52","_useState53","_useState54","handleNotice","_useState55","_useState56","totalAmount","setTotalAmount","_useState57","_useState58","paymentAmount","setPaymentAmount","_useState59","_useState60","duration","setDuration","_useState61","_useState62","payingWithPayStack","setPayingWithPayStack","_useState63","_useState64","paystackKey","setPaystackKey","_useState65","_useState66","verifying","setVerifying","durations","_useState67","_useState68","hospitals","setHospitals","_useState69","_useState70","optionsHospitals","setOptionsHospitals","_useState71","_useState72","pharmas","setPharmas","_useState73","_useState74","optionsPharmas","setOptionsPharmas","_useState75","_useState76","activePharma","setActivePharma","_useState77","_useState78","activeHospital","setActiveHospital","methods","findHospitals","_ref12","state","lga","thisHosps","i","length","hops","push","_x4","_x5","findPharmas","_ref13","pharmacies","thisPhams","pharm","_x6","_x7","_yield$Location$reque","requestForegroundPermissionsAsync","status","location","getCurrentPositionAsync","coords","latitude","longitude","addressResponse","reverseGeocodeAsync","region","currentAddress","street","postalCode","country","toLowerCase","includes","cancelToken","allCities","map","isExist","defaultCity","isCancel","states","PurchaseSchema","payment_method","amount","centre","multiplier","parseInt","charAt","totalPrice","price","_formatCurrency","code","_formatCurrency2","incomeValueFormattedWithSymbol","incomeValueFormattedWithoutSymbol","incomeSymbol","handlePayError","handlePayDone","_ref18","reference","pending","_x8","_ref20","_ref19","paystack_public","_x9","textAlign","large","pallete_deep","billingEmail","onCancel","e","onSuccess","_res$transactionRef","transactionRef","autoStart","_ref21","options","isDisabled","prefix","create","medium","gray","paddingHorizontal","resizeMode","heading","font","negative","mapToStateProps","InsuranceReducer","OnboardingScreen"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/screens/user/OnboardingScreen.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n// external libraries\nimport axios from \"axios\";\nimport * as Location from \"expo-location\";\nimport { formatCurrency } from \"react-native-format-currency\";\nimport { Paystack } from \"react-native-paystack-webview\";\n// import Wizard\nimport Wizard, { WizardRef } from \"react-native-wizard\";\n// components\nimport {\n  View,\n  Text,\n  Pressable,\n  ImageBackground,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  ActivityIndicator,\n} from \"react-native\";\n\n//   external componenets\nimport { TextField } from \"../../components/TextField\";\nimport { ButtonWithTitle } from \"../../components/ButtonWithTitle\";\nimport SelectField from \"../../components/SelectField\";\nimport ErrorSheet from \"../../components/ErrorSheet\";\nimport SuccessSheet from \"../../components/SuccessSheet\";\nimport NoticeSheet from \"../../components/NoticeSheet\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n// formik\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"yup-phone\";\n\n//   native base and themes\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\",\n};\n// extend the theme\nexport const theme = extendTheme({\n  colors: {\n    primary: {\n      100: \"#52A56E\",\n      200: \"#C6C6C6\",\n    },\n  },\n  config,\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n  interface ICustomTheme extends MyThemeType {}\n}\n\n//   redux\nimport { connect } from \"react-redux\";\nimport { OnboardingInsurancePlans } from \"./InsuranceScreen\";\nimport {\n  PlanModel,\n  OnLoadPlans,\n  InsuranceState,\n  ApplicationState,\n  OnBuyInsuranceOnboarding,\n  OnGetPayStackKey,\n} from \"../../redux\";\n\n//   navigations\nimport { useNavigation } from \"@react-navigation/native\";\nimport { UserAuthScreenNavigationProp } from \"../../navigation/auth/types\";\n\n//   presets\nimport { yupSequentialStringSchema } from \"../../utils/yup-utils\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\nimport { BASE_URL } from \"../../utils\";\nconst keyboardVerticalOffset = Platform.OS === \"ios\" ? 20 : 0;\nlet resetFormError: () => void;\nconst wait = (timeout: number) => {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n};\n\n// props\ninterface OnboardingScreenProps {\n  OnLoadPlans: Function;\n  insuranceReducer: InsuranceState;\n  OnGetPayStackKey: Function;\n  OnBuyInsuranceOnboarding: Function;\n}\nconst _OnboardingScreen: React.FC<OnboardingScreenProps> = (props) => {\n  const {\n    OnLoadPlans,\n    insuranceReducer,\n    OnGetPayStackKey,\n    OnBuyInsuranceOnboarding,\n  } = props;\n  const navigation = useNavigation<UserAuthScreenNavigationProp>();\n\n  // check email and phone\n  const checkEmail = async (email: string) => {\n    try {\n      const configurationObject = {\n        method: \"post\",\n        url: `${BASE_URL}user/check-email`,\n        data: {\n          email,\n        },\n      };\n      const response = await axios(configurationObject);\n\n      let resBody = response.data;\n\n      if (resBody[\"status\"] === \"error\") {\n        return { error: resBody[\"message\"] };\n      } else {\n        return { success: resBody[\"status\"] };\n      }\n    } catch (error) {\n      return { error: error };\n    }\n  };\n  const checkPhone = async (phone: string) => {\n    try {\n      const configurationObject = {\n        method: \"post\",\n        url: `${BASE_URL}user/check-phone`,\n        data: {\n          phone,\n        },\n      };\n      const response = await axios(configurationObject);\n\n      let resBody = response.data;\n\n      if (resBody[\"status\"] === \"error\") {\n        return { error: resBody[\"message\"] };\n      } else {\n        return { success: resBody[\"status\"] };\n      }\n    } catch (error) {\n      return { error: error };\n    }\n  };\n\n  // state\n  const [plans, setPlans] = useState<Array<PlanModel>>();\n\n  const [activePlan, setActivePlan] = useState<PlanModel>();\n  const [loading, setLoading] = useState(false);\n  const [firstLoading, setFirstLoading] = useState(false);\n  const [reload, setReload] = useState(false);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    token: \"\",\n    password: \"\",\n  });\n\n  // wizard\n  const wizard = useRef<WizardRef>(null);\n  const [isFirstStep, setIsFirstStep] = useState(true);\n  const [isLastStep, setIsLastStep] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [stepTitle, setStepTitle] = useState(\"Select a Plan\");\n  const selectPlan = (id) => {\n    const selectedPlan = plans!.find((item) => item._id === id);\n    setStepTitle(\"Fill in your details\");\n    wizard.current!.next();\n    setActivePlan(selectedPlan);\n  };\n  const handleSubmit1 = async ({\n    firstName,\n    lastName,\n    email,\n    phone,\n    password,\n  }) => {\n    setLoading(true);\n    try {\n      setFormData((prev) =>\n        Object.assign(prev, { firstName, lastName, email, phone, password })\n      );\n\n      let res = await checkEmail(email);\n      if (res.success === \"success\") {\n        let res2 = await checkPhone(phone);\n        if (res2.success === \"success\") {\n          setLoading(false);\n          setStepTitle(\"Make payment\");\n          wizard.current!.next();\n        } else if (res2.error) {\n          setLoading(false);\n          setError(res2.error);\n          setHasError(true);\n        } else {\n          setLoading(false);\n          setError(\"Error kindly retry\");\n          setHasError(true);\n        }\n      } else if (res.error) {\n        setLoading(false);\n        setError(res.error);\n        setHasError(true);\n      } else {\n        setLoading(false);\n        setError(\"Error kindly retry\");\n        setHasError(true);\n      }\n    } catch (err) {\n      console.log(\"step 2: \", err);\n    }\n  };\n\n  const onPaymentSuccess = () => {\n    setSuccessMessage(\n      \"Congratulations. Your account has been created and your subscription activated. Login to access your account.\"\n    );\n    setIsSuccess(true);\n  };\n  const stepList = [\n    {\n      content: <FirstStep plans={plans} selectPlan={selectPlan} />,\n    },\n    {\n      content: (\n        <SecondStep\n          loading={loading}\n          formData={formData}\n          handleSubmit1={handleSubmit1}\n        />\n      ),\n    },\n    {\n      content: (\n        // <Text>Testing</Text>\n        <ThirdStep\n          externalLoading={loading}\n          formData={formData}\n          OnBuyInsuranceOnboarding={OnBuyInsuranceOnboarding}\n          OnGetPayStackKey={OnGetPayStackKey}\n          plan={activePlan}\n          onPaymentSuccess={onPaymentSuccess}\n        />\n      ),\n    },\n  ];\n\n  // alert modals\n  const [hasError, setHasError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const clearError = () => {\n    setHasError(false);\n  };\n  const handleSuccess = () => {\n    setIsSuccess(false);\n    navigation.navigate(\"Login\");\n  };\n\n  // sign up\n  const [signUpMethod, setSignUpMethod] = useState(\"email\");\n\n  // paystack\n\n  // first loads\n  useEffect(() => {\n    let mounted = true;\n    const source = axios.CancelToken.source();\n    (async () => {\n      if (!mounted) {\n        return;\n      }\n      try {\n        setFirstLoading(true);\n        await OnLoadPlans();\n        let plans = insuranceReducer.plans;\n        if (!mounted) {\n          return;\n        }\n        setPlans(plans);\n        setFirstLoading(false);\n      } catch (error) {\n        setFirstLoading(false);\n        setError(\"Unable to load Insurance Plans\");\n        setHasError(true);\n        return;\n      }\n    })();\n    return () => {\n      source.cancel();\n      mounted = false;\n    };\n  }, [reload]);\n  return (\n    <NativeBaseProvider theme={theme}>\n      <SafeAreaView style={styles.container}>\n        <ImageBackground\n          source={require(\"../../../assets/auth-bg.png\")}\n          style={styles.container}\n        >\n          <KeyboardAwareScrollView\n            extraScrollHeight={keyboardVerticalOffset}\n            style={{ flex: 1, width: \"100%\" }}\n          >\n\n            <View\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <View style={styles.imageContainer}>\n                <Image\n                  source={require(\"../../../assets/sosocare_logo.png\")}\n                  style={styles.headerImage}\n                />\n              </View>\n\n              <View style={styles.formContainer}>\n                <Text style={{ ...styles.headingText }}>{stepTitle}</Text>\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                  }}\n                >\n                  {currentStep > 0 ? (\n                    <Pressable\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"flex-start\",\n                        alignItems: \"center\",\n                      }}\n                      onPress={() => wizard.current!.prev()}\n                    >\n                      <Ionicons\n                        name=\"ios-chevron-back\"\n                        style={{\n                          ...styles.subHeadingText,\n                          fontSize: 20,\n                          marginLeft: 0,\n                          color: COLORS.primary,\n                        }}\n                        color={COLORS.primary}\n                      />\n                      <Text\n                        style={{\n                          ...styles.subHeadingText,\n                          color: COLORS.primary,\n                          marginLeft: 0,\n                        }}\n                      >\n                        Back\n                      </Text>\n                    </Pressable>\n                  ) : null}\n                  <Text\n                    style={{\n                      ...styles.subHeadingText,\n                      marginLeft: currentStep > 0 ? 33 : 0,\n                    }}\n                  >\n                    Step {currentStep + 1} of 3\n                  </Text>\n                </View>\n\n                <View style={styles.form}>\n                  {firstLoading ? (\n                    <View\n                      style={{\n                        flex: 1,\n                        height: 500,\n                        maxHeight: \"100%\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                    <ActivityIndicator size={\"large\"} />\n                    </View>\n                  ) : (\n                    <View>\n                      <Wizard\n                        ref={wizard}\n                        steps={stepList}\n                        isFirstStep={(val) => setIsFirstStep(val)}\n                        isLastStep={(val) => setIsLastStep(val)}\n                        currentStep={({\n                          currentStep,\n                          isLastStep,\n                          isFirstStep,\n                        }) => {\n                          setCurrentStep(currentStep);\n                        }}\n                      />\n                    </View>\n                  )}\n                </View>\n\n              </View>\n\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginVertical: 25,\n                }}\n              >\n                <Text\n                  style={{\n                    fontSize: 14,\n                    fontFamily: FONTS.semiBold,\n                    color: COLORS.dark,\n                  }}\n                >\n                  Already registered?\n                </Text>\n                <TouchableOpacity\n                  onPress={() => navigation.navigate(\"Login\")}\n                  style={{ marginLeft: 4 }}\n                >\n                  <Text\n                    style={{\n                      color: COLORS.primary,\n                      fontSize: 14,\n                      fontFamily: FONTS.semiBold,\n                    }}\n                  >\n                    Log in\n                  </Text>\n                </TouchableOpacity>\n              </View>\n\n              <SuccessSheet\n                message={successMessage}\n                open={isSuccess}\n                closed={handleSuccess}\n              />\n              <ErrorSheet error={error} open={hasError} closed={clearError} />\n            </View>\n\n          </KeyboardAwareScrollView>\n        </ImageBackground>\n      </SafeAreaView>\n    </NativeBaseProvider>\n  );\n};\n\n// steps\nconst Step0 = ({}) => {\n  return (\n    <View style={{ width: \"100%\", marginTop: \"20%\", marginBottom: \"10%\" }}>\n      <View style={{ width: \"100%\", marginBottom: 10 }}>\n        <ButtonWithTitle\n          loading={false}\n          noBg={false}\n          title={\"Sign up with Phone\"}\n          backgroundColor={COLORS.primary}\n          color={COLORS.white}\n          onTap={() => {}}\n          width={\"100%\"}\n        />\n      </View>\n      <ButtonWithTitle\n        loading={false}\n        noBg={false}\n        title={\"Sign up with Email\"}\n        backgroundColor={COLORS.pallete_white}\n        color={COLORS.dark}\n        onTap={() => {}}\n        width={\"100%\"}\n      />\n    </View>\n  );\n};\n\n\nconst FirstStep = ({ plans, selectPlan }) => {\n  return (\n    <View style={{ width: \"100%\" }}>\n      <View style={{ marginVertical: 10, width: \"100%\", alignItems: \"center\" }}>\n        {/* <OnboardingInsurancePlans plans={plans} onNavigate={selectPlan} /> */}\n      </View>\n    </View>\n  );\n};\n\nconst SecondStep = ({ handleSubmit1, loading, formData }) => {\n  const Step1Schema = yup.object().shape({\n    firstName: yup\n      .string()\n      .trim()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .matches(/[A-Za-z ]{1,32}/, \"Only alphabets are allowed\")\n      .required(\"First Name is required\"),\n    lastName: yup\n      .string()\n      .trim()\n      .min(2, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .matches(/[A-Za-z ]{1,32}/, \"Only alphabets are allowed\")\n      .required(\"Last Name is required\"),\n    email: yupSequentialStringSchema(\n      [\n        yup.string().required(\"Email is required\"),\n        yup.string().email(\"Invalid email format\"),\n      ],\n      resetFormError\n    ),\n    phone: yupSequentialStringSchema(\n      [\n        yup.string().required(\"Phone Number is required\"),\n        yup\n          .string()\n          .matches(\n            /^\\S*$/,\n            \"Please provied phone mumber without spaces and dashes in format like 08012345678\"\n          ),\n        yup.string().phone(\"Please enter valid phone number\"),\n      ],\n      resetFormError\n    ),\n    password: yup\n      .string()\n      .required(\"Pin is required\")\n      .min(4, \"Password must be at least 4 characters\")\n      .max(4, \"Password must not be more than 4 characters\"),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref(\"password\"), null], \"Pins must match\")\n      .required(\"Pin is Required\"),\n  });\n  return (\n    <Formik\n      initialValues={{\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        phone: formData.phone,\n        password: formData.password,\n        confirmPassword: formData.password,\n      }}\n      onSubmit={(values) => handleSubmit1(values)}\n      validationSchema={Step1Schema}\n    >\n      {({ errors, handleBlur, touched, handleChange, handleSubmit }) => (\n        <View style={{ width: \"100%\" }}>\n          <TextField\n            hasIcon={false}\n            label=\"First name\"\n            isSecure={false}\n            handleChange={handleChange(\"firstName\")}\n            passBlur={handleBlur(\"firstName\")}\n            value={formData.firstName}\n          />\n          {errors.firstName && touched.firstName ? (\n            <Text style={styles.errorText}>{errors.firstName.toString()}</Text>\n          ) : null}\n          <TextField\n            hasIcon={false}\n            label=\"Last name\"\n            isSecure={false}\n            handleChange={handleChange(\"lastName\")}\n            passBlur={handleBlur(\"lastName\")}\n            value={formData.lastName}\n          />\n          {errors.lastName && touched.lastName ? (\n            <Text style={styles.errorText}>{errors.lastName.toString()}</Text>\n          ) : null}\n          <TextField\n            hasIcon={false}\n            label=\"Email\"\n            isSecure={false}\n            isEmail={true}\n            handleChange={handleChange(\"email\")}\n            passBlur={handleBlur(\"email\")}\n            value={formData.email}\n          />\n          {errors.email && touched.email ? (\n            <Text style={styles.errorText}>{errors.email.toString()}</Text>\n          ) : null}\n          <TextField\n            hasIcon={false}\n            isNumber={true}\n            isPhone={true}\n            label=\"Phone Number\"\n            isSecure={false}\n            handleChange={handleChange(\"phone\")}\n            passBlur={handleBlur(\"phone\")}\n            value={formData.phone}\n          />\n          {errors.phone && touched.phone ? (\n            <Text style={styles.errorText}>{errors.phone.toString()}</Text>\n          ) : null}\n          <TextField\n            hasIcon={true}\n            label=\"Pin\"\n            icon={\"lock-open-outline\"}\n            isSecure={true}\n            handleChange={handleChange(\"password\")}\n            passBlur={handleBlur(\"password\")}\n            value={formData.password}\n          />\n          {errors.password && touched.password ? (\n            <Text style={styles.errorText}>{errors.password.toString()}</Text>\n          ) : null}\n          <TextField\n            hasIcon={true}\n            icon={\"lock-open-outline\"}\n            label=\"Confirm Pin\"\n            isSecure={true}\n            handleChange={handleChange(\"confirmPassword\")}\n            passBlur={handleBlur(\"confirmPassword\")}\n            value={formData.password}\n          />\n          {errors.confirmPassword && touched.confirmPassword ? (\n            <Text style={styles.errorText}>\n              {errors.confirmPassword.toString()}\n            </Text>\n          ) : null}\n          <ButtonWithTitle\n            loading={loading}\n            noBg={false}\n            title={\"Continue\"}\n            backgroundColor={COLORS.primary}\n            color={COLORS.white}\n            onTap={handleSubmit}\n            width={\"100%\"}\n          />\n        </View>\n      )}\n    </Formik>\n  );\n};\n\nconst ThirdStep = ({\n  onPaymentSuccess,\n  plan,\n  externalLoading,\n  OnGetPayStackKey,\n  formData,\n  OnBuyInsuranceOnboarding,\n}) => {\n  const [address, setAddress] = useState<Location.LocationGeocodedAddress>();\n  const [addressState, setAddressState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [cities, setCities] = useState([]);\n  const [displayAddress, setDisplayAddress] = useState(\n    \"Waiting for Current Location\"\n  );\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [hasNotice, setHasNotice] = useState(false);\n  const [noticeMessage, setNoticeMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const clearError = () => {\n    setHasError(false);\n  };\n  const handleSuccess = () => {\n    setIsSuccess(false);\n    onPaymentSuccess();\n    // payment done emit\n  };\n  const handleNotice = () => {\n    setHasNotice(false);\n    setLoading(false);\n  };\n\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [paymentAmount, setPaymentAmount] = useState(0);\n  const [duration, setDuration] = useState(\"1 month\");\n  const [payingWithPayStack, setPayingWithPayStack] = useState(false);\n  const [paystackKey, setPaystackKey] = useState(\"\");\n  const [verifying, setVerifying] = useState(false);\n  const durations = [\n    { title: \"1 month\", value: \"1 month\" },\n    { title: \"3 months\", value: \"3 months\" },\n    { title: \"6 months\", value: \"6 months\" },\n    { title: \"1 year\", value: \"12 months\" },\n  ];\n  const [hospitals, setHospitals] = useState<Array<HospitalModel>>([]);\n  const [optionsHospitals, setOptionsHospitals] = useState<\n    Array<SelectHospitalModel>\n  >([]);\n  const [pharmas, setPharmas] = useState<Array<PharmaModel>>([]);\n  const [optionsPharmas, setOptionsPharmas] = useState<\n    Array<SelectPharmaModel>\n  >([]);\n  const [activePharma, setActivePharma] = useState<PharmaModel>();\n  const [activeHospital, setActiveHospital] = useState<HospitalModel>();\n  const methods = [\n    { title: \"Wallet\", value: \"Wallet\" },\n    { title: \"Paystack\", value: \"Paystack\" },\n  ];\n\n  const findHospitals = async (state, lga) => {\n    try {\n      setLoading(true);\n      const configurationObject = {\n        method: \"post\",\n        url: `${BASE_URL}hospitals`,\n        data: {\n          state: state ? state : addressState,\n          lga: lga ? lga : city,\n        },\n      };\n      const response = await axios(configurationObject);\n      let resBody = response.data;\n\n      if (resBody[\"status\"] === \"error\") {\n        setLoading(false);\n        setError(\"Error loading hospitals\");\n        setHasError(true);\n        return;\n      } else {\n        setHospitals(resBody.hospitals);\n        let thisHosps: SelectHospitalModel[] = [];\n        for (let i = 0; i < resBody.hospitals.length; i++) {\n          let hops: HospitalModel = resBody.hospitals[i];\n          thisHosps.push({\n            title: `${hops.name}`,\n            value: hops.name,\n          });\n        }\n        setOptionsHospitals(thisHosps);\n        setLoading(false);\n        return;\n      }\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n      setHasError(true);\n      return;\n    }\n  };\n\n  const findPharmas = async (state, lga) => {\n    try {\n      setLoading(true);\n      const configurationObject = {\n        method: \"post\",\n        url: `${BASE_URL}pharmacies`,\n        data: {\n          state: state ? state : addressState,\n          lga: lga ? lga : city,\n        },\n      };\n      const response = await axios(configurationObject);\n\n      let resBody = response.data;\n      if (resBody[\"status\"] === \"error\") {\n        setLoading(false);\n        setError(\"Error loading pharmacies\");\n        setHasError(true);\n        return;\n      } else {\n        setPharmas(resBody.pharmacies);\n        let thisPhams: SelectPharmaModel[] = [];\n        for (let i = 0; i < resBody.pharmacies.length; i++) {\n          let pharm: PharmaModel = resBody.pharmacies[i];\n          thisPhams.push({\n            title: pharm.name,\n            value: pharm.name,\n          });\n        }\n        setOptionsPharmas(thisPhams);\n        setLoading(false);\n        return;\n      }\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n      setHasError(true);\n      return;\n    }\n  };\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      if (!mounted) {\n        return;\n      }\n      if (addressState && addressState !== \"\") return;\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        let { status } = await Location.requestForegroundPermissionsAsync();\n\n        if (status !== \"granted\") {\n          setError(\"Permission to access location is not granted\");\n          setHasError(true);\n          setLoading(false);\n        }\n\n        let location: any = await Location.getCurrentPositionAsync({});\n\n        const { coords } = location;\n\n        if (coords) {\n          const { latitude, longitude } = coords;\n          if (!mounted) {\n            return;\n          }\n          let addressResponse: any = await Location.reverseGeocodeAsync({\n            latitude,\n            longitude,\n          });\n          let region = \"\";\n          let lga = \"\";\n          for (let item of addressResponse) {\n            setLoading(false);\n            region = item.region;\n            lga = item.city;\n            setAddress(item);\n            // onUpdateLocation(item)\n            let currentAddress = `${item.name},${item.street}, ${item.postalCode}, ${item.country}`;\n            setDisplayAddress(currentAddress);\n            setAddressState(item.region);\n            setCity(item.city);\n            return\n          }\n          if (plan.name === \"Sosocare Basic Plan\") {\n            await findPharmas(region, lga);\n          } else if (plan.name === \"Sosocare Silver Plan\") {\n            await findHospitals(region, lga);\n          } else {\n            await findPharmas(region, lga);\n            await findHospitals(region, lga);\n          }\n\n          setLoading(false);\n        } else {\n          //notify user something went wrong with location\n          setError(\"Could't get location automatically\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setError(error.message);\n        if (error.message.toLowerCase().includes(\"location\")) {\n          setError(\"Permission to access location is not granted\");\n        }\n        setHasError(true);\n        setLoading(false);\n        return;\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    let mounted = true;\n    (async () => {\n      if (!addressState || addressState === \"\") return;\n      if (!mounted) {\n        return;\n      }\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        const configurationObject = {\n          method: \"get\",\n          url: `${BASE_URL}cities?state=${addressState.toLowerCase()}`,\n          cancelToken: source.token,\n        };\n        const response = await axios(configurationObject);\n\n        let resBody = response.data;\n        if (!mounted) {\n          return;\n        }\n        if (resBody[\"cities\"]) {\n          let allCities = resBody[\"cities\"].map((item) => {\n            return { title: item.title, value: item.title };\n          });\n          setCities(allCities);\n          let isExist = allCities.find((item) => item.title === city);\n          if (!isExist) {\n            let defaultCity = allCities[0].title;\n            setCity(defaultCity);\n          }\n          setLoading(false);\n          return;\n        } else {\n          setError(\"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        if (axios.isCancel(error)) {\n        } else {\n          setError(error.message || \"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n          return;\n        }\n      }\n    })();\n    return () => {\n      source.cancel();\n      mounted = false;\n    };\n  }, [addressState]);\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    let mounted = true;\n    (async () => {\n      if (!city || city === \"\") return;\n      if (!mounted) {\n        return;\n      }\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        if (plan.name === \"Sosocare Basic Plan\") {\n          await findPharmas(addressState, city);\n        } else if (plan.name === \"Sosocare Silver Plan\") {\n          await findHospitals(addressState, city);\n        } else {\n          await findPharmas(addressState, city);\n          await findHospitals(addressState, city);\n        }\n        setLoading(false);\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        \n        setLoading(false);\n      }\n    })();\n    return () => {\n      source.cancel();\n      mounted = false;\n    };\n  }, [city]);\n\n\n  const states = [\n    { title: \"Abia\", value: \"Abia\" },\n    { title: \"Adamawa\", value: \"Adamawa\" },\n    { title: \"Akwa Ibom\", value: \"Akwa Ibom\" },\n    { title: \"Anambra\", value: \"Anambra\" },\n    { title: \"Bauchi\", value: \"Bauchi\" },\n    { title: \"Bayelsa\", value: \"Bayelsa\" },\n    { title: \"Benue\", value: \"Benue\" },\n    { title: \"Borno\", value: \"Borno\" },\n    { title: \"Cross River\", value: \"Cross River\" },\n    { title: \"Delta\", value: \"Delta\" },\n    { title: \"Ebonyi\", value: \"Ebonyi\" },\n    { title: \"Edo\", value: \"Edo\" },\n    { title: \"Ekiti\", value: \"Ekiti\" },\n    { title: \"Enugu\", value: \"Enugu\" },\n    { title: \"FCT - Abuja\", value: \"FCT - Abuja\" },\n    { title: \"Gombe\", value: \"Gombe\" },\n    { title: \"Imo\", value: \"Imo\" },\n    { title: \"Jigawa\", value: \"Jigawa\" },\n    { title: \"Kaduna\", value: \"Kaduna\" },\n    { title: \"Kano\", value: \"Kano\" },\n    { title: \"Katsina\", value: \"Katsina\" },\n    { title: \"Kebbi\", value: \"Kebbi\" },\n    { title: \"Kogi\", value: \"Kogi\" },\n    { title: \"Kwara\", value: \"Kwara\" },\n    { title: \"Lagos\", value: \"Lagos\" },\n    { title: \"Nasarawa\", value: \"Nasarawa\" },\n    { title: \"Niger\", value: \"Niger\" },\n    { title: \"Ogun\", value: \"Ogun\" },\n    { title: \"Ondo\", value: \"Ondo\" },\n    { title: \"Osun\", value: \"Osun\" },\n    { title: \"Oyo\", value: \"Oyo\" },\n    { title: \"Plateau\", value: \"Plateau\" },\n    { title: \"Rivers\", value: \"Rivers\" },\n    { title: \"Sokoto\", value: \"Sokoto\" },\n    { title: \"Taraba\", value: \"Taraba\" },\n    { title: \"Yobe\", value: \"Yobe\" },\n    { title: \"Zamfara\", value: \"Zamfara\" },\n  ];\n\n  const PurchaseSchema = yup.object().shape({\n    duration: yup.string().required(\"Duration is required\"),\n    payment_method: yup.string().required(\"Payment Method is required\"),\n    amount: yup.string().required(),\n    state: yup.string().required(\"State is required\"),\n    city: yup.string().required(\"City is required\"),\n    centre: yup\n      .string()\n      .required(\n        `Preferred ${\n          plan.name === \"Sosocare Basic Plan\" ? \"Pharmacy\" : \"Hospital\"\n        } is required`\n      ),\n  });\n\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      if (!mounted) {\n        return;\n      }\n      let multiplier = parseInt(duration.charAt(0));\n      let totalPrice = plan.price * multiplier;\n      setPaymentAmount(((totalPrice / 100) * 100) / 100);\n      const [\n        incomeValueFormattedWithSymbol,\n        incomeValueFormattedWithoutSymbol,\n        incomeSymbol,\n      ] = formatCurrency({ amount: totalPrice / 100, code: \"USD\" });\n      setTotalAmount(incomeValueFormattedWithoutSymbol);\n    })();\n\n    return () => {\n      mounted = false;\n    };\n  }, [duration]);\n\n  const handlePayError = () => {\n    setLoading(false);\n    setPayingWithPayStack(false);\n    setError(\"Payment Error\");\n    setHasError(true);\n  };\n  const handlePayDone = async (reference) => {\n    try {\n      setVerifying(true);\n      setLoading(false);\n\n      let res = await OnBuyInsuranceOnboarding(\n        plan._id,\n        duration,\n        \"paystack\",\n        reference,\n        formData,\n        addressState,\n        city,\n        activePharma,\n        activeHospital\n      );\n      if (res.pending) {\n        setVerifying(false);\n        setLoading(false);\n        setPayingWithPayStack(false);\n        setHasNotice(true);\n        setNoticeMessage(\n          \"Confirmation pending. Your Insurance will be activated once we confirm your payment\"\n        );\n        return;\n      }\n      if (res.error) {\n        setVerifying(false);\n        setLoading(false);\n        setPayingWithPayStack(false);\n        setError(res.error);\n        setHasError(true);\n        return;\n      }\n      if (res.success) {\n        setVerifying(false);\n        setLoading(false);\n        setPayingWithPayStack(false);\n        setSuccessMessage(\n          \"Congratulations, you now have Insurance cover at all of our partner facilities.\"\n        );\n        setIsSuccess(true);\n        return;\n      }\n    } catch (error) {\n      setVerifying(false);\n      setLoading(false);\n      setPayingWithPayStack(false);\n      setError(error.message);\n      setHasError(true);\n      return;\n    }\n  };\n  const handleSubmit = async ({ duration, centre }) => {\n    try {\n      setLoading(true);\n      setActiveHospital(centre)\n      setActivePharma(centre)\n      let res = await OnGetPayStackKey();\n      if (res.success) {\n        setPaystackKey(res.paystack_public);\n        setLoading(false);\n        setPayingWithPayStack(true);\n        return;\n      } else {\n        setLoading(false);\n        setError(\n          \"Unable to connect to Paystack, check your network and kindly try again\"\n        );\n        setHasError(true);\n        return;\n      }\n    } catch (error) {\n      setLoading(false);\n      setError(\n        \"Unable to connect to Paystack, check your network and kindly try again\"\n      );\n      setHasError(true);\n      return;\n    }\n  };\n\n  if (verifying) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: \"white\",\n          height: 500\n        }}\n      >\n        <ActivityIndicator size={\"large\"} />\n        <Text\n          style={{\n            marginTop: 10,\n            textAlign: \"center\",\n            fontSize: SIZES.large,\n            fontFamily: FONTS.semiBold,\n            color: COLORS.pallete_deep,\n          }}\n        >\n          Verifying transaction\n        </Text>\n      </View>\n    );\n  } else if (payingWithPayStack) {\n    return (\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <Paystack\n          paystackKey={paystackKey}\n          amount={paymentAmount}\n          billingEmail={formData.email}\n          onCancel={(e) => {\n            handlePayError();\n            // handle response here\n          }}\n          onSuccess={(res) => {\n            handlePayDone(res?.transactionRef?.reference);\n            // handle response here\n          }}\n          autoStart={true}\n        />\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.form}>\n        <Formik\n          initialValues={{\n            duration: \"1 month\",\n            payment_method: \"Wallet\",\n            amount: totalAmount,\n            centre: \"\",\n            state: addressState,\n            city: city,\n          }}\n          onSubmit={(values) => {\n            handleSubmit(values);\n          }}\n          validationSchema={PurchaseSchema}\n        >\n          {({ errors, touched, handleChange, handleSubmit, values }) => (\n            <View style={{ width: \"100%\" }}>\n              <Text style={styles.label}>Duration</Text>\n              <SelectField\n                hasIcon={false}\n                label=\"Duration\"\n                handleChange={(val) => {\n                  handleChange(\"duration\")(val);\n                  setDuration(val);\n                }}\n                options={durations}\n                isDisabled={false}\n                value={values.duration}\n              />\n              {errors.duration && touched.duration ? (\n                <Text style={styles.errorText}>\n                  {errors.duration.toString()}\n                </Text>\n              ) : null}\n              <Text style={styles.label}>Total Amount</Text>\n              <TextField\n                isNumber={true}\n                prefix={\"\\u20A6\"}\n                label=\"Amount\"\n                isSecure={false}\n                isDisabled={true}\n                handleChange={handleChange(\"amount\")}\n                value={totalAmount.toString()}\n              />\n              <Text style={styles.label}>State</Text>\n              <SelectField\n                hasIcon={false}\n                label=\"State\"\n                handleChange={(val) => {\n                  handleChange(\"state\")(val);\n                  setAddressState(val);\n                }}\n                options={states}\n                value={addressState}\n                isDisabled={loading}\n              />\n              {errors.state && touched.state ? (\n                <Text style={styles.errorText}>{errors.state}</Text>\n              ) : null}\n              <Text style={styles.label}>LGA/City</Text>\n              <SelectField\n                hasIcon={false}\n                label=\"City\"\n                handleChange={(val) => {\n                  handleChange(\"city\")(val);\n                  setCity(val);\n                }}\n                options={cities}\n                value={city}\n                isDisabled={\n                  loading\n                    ? true\n                    : city && city !== \"\"\n                    ? false\n                    : addressState && addressState !== \"\"\n                    ? false\n                    : true\n                }\n              />\n              {errors.city && touched.city ? (\n                <Text style={styles.errorText}>{errors.city}</Text>\n              ) : null}\n\n              {plan.name === \"Sosocare Basic Plan\" && (\n                <View>\n                  <Text style={styles.label}>Preferred Pharmacy</Text>\n                  <SelectField\n                    hasIcon={false}\n                    label=\"Preferred Pharmacy\"\n                    handleChange={handleChange(\"centre\")}\n                    options={optionsPharmas}\n                    isDisabled={\n                      loading ? true : pharmas.length < 1 ? true : false\n                    }\n                  />\n                  {errors.centre && touched.centre ? (\n                    <Text style={styles.errorText}>{errors.centre}</Text>\n                  ) : null}\n                </View>\n              )}\n              {plan.name === \"Sosocare Silver Plan\" && (\n                <View>\n                  <Text style={styles.label}>Preferred Hospital</Text>\n                  <SelectField\n                    hasIcon={false}\n                    label=\"Preferred Hospital\"\n                    handleChange={handleChange(\"centre\")}\n                    options={optionsHospitals}\n                    isDisabled={\n                      loading ? true : hospitals.length < 1 ? true : false\n                    }\n                  />\n                  {errors.centre && touched.centre ? (\n                    <Text style={styles.errorText}>{errors.centre}</Text>\n                  ) : null}\n                </View>\n              )}\n              <ButtonWithTitle\n                loading={loading}\n                noBg={false}\n                title={\"Pay with Paystack\"}\n                backgroundColor={COLORS.primary}\n                color={COLORS.white}\n                onTap={handleSubmit}\n                width={\"100%\"}\n              />\n            </View>\n          )}\n        </Formik>\n        <SuccessSheet\n          message={successMessage}\n          open={isSuccess}\n          closed={handleSuccess}\n        />\n        <ErrorSheet error={error} open={hasError} closed={clearError} />\n        <NoticeSheet\n          message={noticeMessage}\n          open={hasNotice}\n          closed={handleNotice}\n        />\n      </View>\n    );\n  }\n};\n\ninterface HospitalModel {\n  name: string;\n  address: string;\n}\n\ninterface PharmaModel {\n  email: string;\n  phone: string;\n  name: string;\n  state: string;\n  lga: string;\n  address: string;\n}\ninterface SelectPharmaModel {\n  title: string;\n  value: string;\n}\ninterface SelectHospitalModel {\n  title: string;\n  value: string;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    width: \"100%\",\n  },\n  label: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.gray,\n    marginBottom: 10,\n  },\n  imageContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 24,\n  },\n  headerImage: {\n    resizeMode: \"contain\",\n    width: \"60%\",\n    marginVertical: 80,\n  },\n  formContainer: {\n    width: \"100%\",\n    flexDirection: \"column\",\n    paddingHorizontal: 24,\n  },\n  form: {\n    width: \"100%\",\n    flexDirection: \"column\",\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10,\n  },\n});\n\nconst mapToStateProps = (state: ApplicationState) => ({\n  insuranceReducer: state.InsuranceReducer,\n});\n\nconst OnboardingScreen = connect(mapToStateProps, {\n  OnLoadPlans,\n  OnGetPayStackKey,\n  OnBuyInsuranceOnboarding,\n})(_OnboardingScreen);\n\nexport default OnboardingScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}