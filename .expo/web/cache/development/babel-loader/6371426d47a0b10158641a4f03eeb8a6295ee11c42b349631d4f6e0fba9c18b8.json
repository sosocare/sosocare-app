{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useRoute } from '@react-navigation/native';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { COLORS, FONTS, SIZES } from \"../../../constants\";\nimport NoticeSheet from \"../../../components/NoticeSheet\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\nimport { ButtonWithTitle } from \"../../../components/ButtonWithTitle\";\nimport SelectField from \"../../../components/SelectField\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { BASE_URL } from \"../../../utils\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as Location from 'expo-location';\nimport { OnLoadAgentClient, OnAgentSetCareCentre } from \"../../../redux\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#52A56E',\n      200: '#C6C6C6'\n    }\n  },\n  config: config\n});\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\nvar _ClientInsurance = function _ClientInsurance(props) {\n  var agentReducer = props.agentReducer,\n    OnLoadAgentClient = props.OnLoadAgentClient,\n    OnAgentSetCareCentre = props.OnAgentSetCareCentre;\n  var route = useRoute();\n  var client = route.params.client;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    inLoading = _useState2[0],\n    setInLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    reload = _useState8[0],\n    setReload = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    noticeMessage = _useState10[0],\n    setNoticeMessage = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    successMessage = _useState12[0],\n    setSuccessMessage = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    hasError = _useState14[0],\n    setHasError = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isSuccess = _useState16[0],\n    setIsSuccess = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    hasNotice = _useState18[0],\n    setHasNotice = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    refreshing = _useState20[0],\n    setRefreshing = _useState20[1];\n  var _useState21 = useState(),\n    _useState22 = _slicedToArray(_useState21, 2),\n    insurance = _useState22[0],\n    setInsurance = _useState22[1];\n  var _useState23 = useState(),\n    _useState24 = _slicedToArray(_useState23, 2),\n    address = _useState24[0],\n    setAddress = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    addressState = _useState26[0],\n    setAddressState = _useState26[1];\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    city = _useState28[0],\n    setCity = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    cities = _useState30[0],\n    setCities = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    street = _useState32[0],\n    setStreet = _useState32[1];\n  var _useState33 = useState(\"Waiting for Current Location\"),\n    _useState34 = _slicedToArray(_useState33, 2),\n    displayAddress = _useState34[0],\n    setDisplayAddress = _useState34[1];\n  var keyboardVerticalOffset = Platform.OS === 'ios' ? 40 : 0;\n  var _useState35 = useState([]),\n    _useState36 = _slicedToArray(_useState35, 2),\n    hospitals = _useState36[0],\n    setHospitals = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    optionsHospitals = _useState38[0],\n    setOptionsHospitals = _useState38[1];\n  var _useState39 = useState([]),\n    _useState40 = _slicedToArray(_useState39, 2),\n    pharmas = _useState40[0],\n    setPharmas = _useState40[1];\n  var _useState41 = useState([]),\n    _useState42 = _slicedToArray(_useState41, 2),\n    optionsPharmas = _useState42[0],\n    setOptionsPharmas = _useState42[1];\n  var _useState43 = useState(),\n    _useState44 = _slicedToArray(_useState43, 2),\n    activePharma = _useState44[0],\n    setActivePharma = _useState44[1];\n  var _useState45 = useState(),\n    _useState46 = _slicedToArray(_useState45, 2),\n    activeHospital = _useState46[0],\n    setActiveHospital = _useState46[1];\n  var clearError = function clearError() {\n    setHasError(false);\n  };\n  var handleSuccess = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setIsSuccess(false);\n      navigation.navigate('ClientDetails', {\n        client: client\n      });\n    });\n    return function handleSuccess() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleNotice = function handleNotice() {\n    setHasNotice(false);\n    setLoading(false);\n  };\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      setInLoading(true);\n      var res = yield OnLoadAgentClient(client._id);\n      if (res.success) {\n        if (!mounted) {\n          return;\n        }\n        setInsurance(res.insurance);\n        setInLoading(false);\n      } else if (res.error) {\n        setInLoading(false);\n        setError(res.error);\n        setHasError(true);\n      }\n      var existingLocation = agentReducer.location;\n      if (existingLocation.address_city && existingLocation.address_state) {\n        setAddress({\n          region: existingLocation.address_state,\n          city: existingLocation.address_city,\n          street: existingLocation.address_street,\n          district: '',\n          country: existingLocation.address_country,\n          streetNumber: '',\n          subregion: '',\n          postalCode: '',\n          name: '',\n          isoCountryCode: '',\n          timezone: ''\n        });\n        setAddressState(existingLocation.address_state);\n        setCity(existingLocation.address_city);\n        setStreet(existingLocation.address_street || '');\n        return;\n      }\n      if (addressState && addressState !== '') return;\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status !== 'granted') {\n          setError('Permission to access location is not granted');\n          setHasError(true);\n          setLoading(false);\n        }\n        var location = yield Location.getCurrentPositionAsync({});\n        var coords = location.coords;\n        if (coords) {\n          var latitude = coords.latitude,\n            longitude = coords.longitude;\n          if (!mounted) {\n            return;\n          }\n          var addressResponse = yield Location.reverseGeocodeAsync({\n            latitude: latitude,\n            longitude: longitude\n          });\n          var region = \"\";\n          var lga = \"\";\n          for (var item of addressResponse) {\n            setLoading(false);\n            setAddress(item);\n            var currentAddress = `${item.name},${item.street}, ${item.postalCode}, ${item.country}`;\n            setDisplayAddress(currentAddress);\n            setAddressState(item.region);\n            region = item.region;\n            lga = item.city;\n            setCity(item.city);\n            setStreet(item.street);\n            return;\n          }\n          setLoading(false);\n        } else {\n          setError(\"Could't get location automatically\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setError(error.message);\n        setHasError(true);\n        setLoading(false);\n        return;\n      }\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, [reload]);\n  var onRefresh = useCallback(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      setRefreshing(true);\n      setReload(function (prev) {\n        return !prev;\n      });\n      wait(2000).then(function () {\n        return setRefreshing(false);\n      });\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  var states = [{\n    title: \"Abia\",\n    value: \"Abia\"\n  }, {\n    title: \"Adamawa\",\n    value: \"Adamawa\"\n  }, {\n    title: \"Akwa Ibom\",\n    value: \"Akwa Ibom\"\n  }, {\n    title: \"Anambra\",\n    value: \"Anambra\"\n  }, {\n    title: \"Bauchi\",\n    value: \"Bauchi\"\n  }, {\n    title: \"Bayelsa\",\n    value: \"Bayelsa\"\n  }, {\n    title: \"Benue\",\n    value: \"Benue\"\n  }, {\n    title: \"Borno\",\n    value: \"Borno\"\n  }, {\n    title: \"Cross River\",\n    value: \"Cross River\"\n  }, {\n    title: \"Delta\",\n    value: \"Delta\"\n  }, {\n    title: \"Ebonyi\",\n    value: \"Ebonyi\"\n  }, {\n    title: \"Edo\",\n    value: \"Edo\"\n  }, {\n    title: \"Ekiti\",\n    value: \"Ekiti\"\n  }, {\n    title: \"Enugu\",\n    value: \"Enugu\"\n  }, {\n    title: \"FCT - Abuja\",\n    value: \"FCT - Abuja\"\n  }, {\n    title: \"Gombe\",\n    value: \"Gombe\"\n  }, {\n    title: \"Imo\",\n    value: \"Imo\"\n  }, {\n    title: \"Jigawa\",\n    value: \"Jigawa\"\n  }, {\n    title: \"Kaduna\",\n    value: \"Kaduna\"\n  }, {\n    title: \"Kano\",\n    value: \"Kano\"\n  }, {\n    title: \"Katsina\",\n    value: \"Katsina\"\n  }, {\n    title: \"Kebbi\",\n    value: \"Kebbi\"\n  }, {\n    title: \"Kogi\",\n    value: \"Kogi\"\n  }, {\n    title: \"Kwara\",\n    value: \"Kwara\"\n  }, {\n    title: \"Lagos\",\n    value: \"Lagos\"\n  }, {\n    title: \"Nasarawa\",\n    value: \"Nasarawa\"\n  }, {\n    title: \"Niger\",\n    value: \"Niger\"\n  }, {\n    title: \"Ogun\",\n    value: \"Ogun\"\n  }, {\n    title: \"Ondo\",\n    value: \"Ondo\"\n  }, {\n    title: \"Osun\",\n    value: \"Osun\"\n  }, {\n    title: \"Oyo\",\n    value: \"Oyo\"\n  }, {\n    title: \"Plateau\",\n    value: \"Plateau\"\n  }, {\n    title: \"Rivers\",\n    value: \"Rivers\"\n  }, {\n    title: \"Sokoto\",\n    value: \"Sokoto\"\n  }, {\n    title: \"Taraba\",\n    value: \"Taraba\"\n  }, {\n    title: \"Yobe\",\n    value: \"Yobe\"\n  }, {\n    title: \"Zamfara\",\n    value: \"Zamfara\"\n  }];\n  var CentreSchema = yup.object().shape({\n    state: yup.string().required('State is required'),\n    city: yup.string().required('City is required'),\n    centre: yup.string().required(`Preferred ${(insurance == null ? void 0 : insurance.plan) === 'Sosocare Basic Plan' ? 'Pharmacy' : 'Hospital'} is required`)\n  });\n  var findHospitals = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var state = addressState;\n      var lga = city;\n      try {\n        setLoading(true);\n        var configurationObject = {\n          method: 'post',\n          url: `${BASE_URL}hospitals`,\n          data: {\n            state: state ? state : addressState,\n            lga: lga ? lga : city\n          }\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          setLoading(false);\n          setError(\"Error loading hospitals\");\n          setHasError(true);\n          return;\n        } else {\n          if (!resBody.hospitals || resBody.hospitals && resBody.hospitals.length === 0) {\n            setLoading(false);\n            return;\n          }\n          setHospitals(resBody.hospitals);\n          var thisHosps = [];\n          for (var i = 0; i < resBody.hospitals.length; i++) {\n            var hops = resBody.hospitals[i];\n            thisHosps.push({\n              title: `${hops.name}`,\n              value: hops.name\n            });\n          }\n          setOptionsHospitals(thisHosps);\n          setLoading(false);\n          return;\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        setHasError(true);\n        return;\n      }\n    });\n    return function findHospitals() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var findPharmas = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var state = addressState;\n      var lga = city;\n      try {\n        setLoading(true);\n        var configurationObject = {\n          method: 'post',\n          url: `${BASE_URL}pharmacies`,\n          data: {\n            state: state ? state : addressState,\n            lga: lga ? lga : city\n          }\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          setLoading(false);\n          setError(\"Error loading pharmacies\");\n          setHasError(true);\n          return;\n        } else {\n          if (!resBody.pharmacies || resBody.pharmacies && resBody.pharmacies.length === 0) {\n            setLoading(false);\n            return;\n          }\n          setPharmas(resBody.pharmacies);\n          var thisPhams = [];\n          for (var i = 0; i < resBody.pharmacies.length; i++) {\n            var pharm = resBody.pharmacies[i];\n            thisPhams.push({\n              title: `${pharm.pharmacyName}: ${pharm.address}`,\n              value: pharm.pharmacyCode\n            });\n          }\n          setOptionsPharmas(thisPhams);\n          setLoading(false);\n          return;\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        setHasError(true);\n        return;\n      }\n    });\n    return function findPharmas() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleSubmit = function () {\n    var _ref7 = _asyncToGenerator(function* (_ref6) {\n      var centre = _ref6.centre;\n      var selectedHosp;\n      var selectedPharma;\n      if (insurance) {\n        if (insurance.plan === 'Sosocare Basic Plan') {\n          var theOne = yield pharmas.find(function (item) {\n            return item.pharmacyCode === centre;\n          });\n          if (theOne) {\n            selectedPharma = theOne;\n            setActivePharma(theOne);\n          }\n        } else {\n          var _theOne = yield hospitals.find(function (item) {\n            return item.name === centre;\n          });\n          if (_theOne) {\n            selectedHosp = _theOne;\n            setActiveHospital(_theOne);\n          }\n        }\n      }\n      try {\n        if (insurance) {\n          setLoading(true);\n          var res = yield OnAgentSetCareCentre(insurance._id, client._id, selectedHosp, selectedPharma);\n          if (res.error) {\n            setError(res.error);\n            setLoading(false);\n            setHasError(true);\n          }\n          if (res.success) {\n            setLoading(false);\n            setSuccessMessage('Primary care center updated');\n            setIsSuccess(true);\n          }\n        }\n      } catch (e) {\n        setError(e);\n        setHasError(true);\n        setLoading(false);\n      }\n    });\n    return function handleSubmit(_x) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var source = axios.CancelToken.source();\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!addressState || addressState === '') return;\n      if (!mounted) {\n        return;\n      }\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        var configurationObject = {\n          method: 'get',\n          url: `https://locus.fkkas.com/api/regions/${addressState.toLowerCase()}`,\n          cancelToken: source.token\n        };\n        var response = yield axios(configurationObject);\n        var resBody = response.data;\n        if (!mounted) {\n          return;\n        }\n        if (resBody['data']) {\n          var allCities = resBody['data'].map(function (item) {\n            return {\n              title: item.name,\n              value: item.name\n            };\n          });\n          setCities(allCities);\n          var isExist = allCities.find(function (item) {\n            return item.title === city;\n          });\n          if (!isExist) {\n            var defaultCity = allCities[0].title;\n            setCity(defaultCity);\n            setStreet('');\n          }\n          setLoading(false);\n          return;\n        } else {\n          setError(\"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        if (axios.isCancel(error)) {} else {\n          setError(error.message || \"Unable to get cities for this state\");\n          setHasError(true);\n          setLoading(false);\n          return;\n        }\n      }\n    })();\n    return function () {\n      source.cancel();\n      mounted = false;\n    };\n  }, [addressState]);\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!city || city === '') return;\n      if (!mounted) {\n        return;\n      }\n      setLoading(true);\n      try {\n        if (!mounted) {\n          return;\n        }\n        if (insurance) {\n          if (insurance.plan === \"Sosocare Basic Plan\") {\n            yield findPharmas();\n          } else if (insurance.plan === \"Sosocare Silver Plan\") {\n            yield findHospitals();\n          } else {\n            yield findPharmas();\n            yield findHospitals();\n          }\n        }\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setError(error.message || \"Unable to get pharmacies for this region\");\n        setHasError(true);\n        setLoading(false);\n        return;\n      }\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, [city]);\n  if (inLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        width: '100%',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: 'large'\n      })\n    });\n  }\n  return _jsxs(NativeBaseProvider, {\n    theme: theme,\n    children: [_jsx(SafeAreaView, {\n      style: {\n        backgroundColor: '#fefefe'\n      }\n    }), _jsx(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        colors: [COLORS.primary],\n        tintColor: COLORS.primary\n      }),\n      style: {\n        flex: 1,\n        backgroundColor: 'white'\n      },\n      children: _jsxs(View, {\n        style: {\n          width: \"100%\"\n        },\n        children: [_jsx(View, {\n          style: styles.container,\n          children: _jsxs(View, {\n            style: styles.formContainer,\n            children: [_jsx(Text, {\n              style: _objectSpread({}, styles.headingText),\n              children: insurance == null ? void 0 : insurance.plan\n            }), _jsxs(Text, {\n              style: _objectSpread({}, styles.subHeadingText),\n              children: [\"Set \", client.first_name, \" \", client.last_name, \" primary \", (insurance == null ? void 0 : insurance.plan) === 'Sosocare Basic Plan' ? 'Pharmacy' : 'Hospital', \" care center to enjoy your Insurance cover\"]\n            }), _jsx(View, {\n              style: styles.form,\n              children: _jsx(Formik, {\n                initialValues: {\n                  state: addressState,\n                  city: city,\n                  centre: \"\"\n                },\n                onSubmit: function onSubmit(values) {\n                  handleSubmit(values);\n                },\n                validationSchema: CentreSchema,\n                children: function children(_ref10) {\n                  var errors = _ref10.errors,\n                    touched = _ref10.touched,\n                    handleChange = _ref10.handleChange,\n                    handleSubmit = _ref10.handleSubmit,\n                    values = _ref10.values;\n                  return _jsxs(View, {\n                    style: {\n                      width: '100%'\n                    },\n                    children: [_jsx(Text, {\n                      style: styles.label,\n                      children: \"State\"\n                    }), _jsx(SelectField, {\n                      hasIcon: false,\n                      label: \"State\",\n                      handleChange: (function () {\n                        var _ref11 = _asyncToGenerator(function* (val) {\n                          handleChange('state')(val);\n                          setAddressState(val);\n                        });\n                        return function (_x2) {\n                          return _ref11.apply(this, arguments);\n                        };\n                      }()),\n                      options: states,\n                      value: addressState,\n                      isDisabled: loading\n                    }), errors.state && touched.state ? _jsx(Text, {\n                      style: styles.errorText,\n                      children: errors.state\n                    }) : null, _jsx(Text, {\n                      style: styles.label,\n                      children: \"City/LGA\"\n                    }), _jsx(SelectField, {\n                      hasIcon: false,\n                      label: \"City\",\n                      handleChange: (function () {\n                        var _ref12 = _asyncToGenerator(function* (val) {\n                          handleChange('city')(val);\n                          setCity(val);\n                        });\n                        return function (_x3) {\n                          return _ref12.apply(this, arguments);\n                        };\n                      }()),\n                      options: cities,\n                      value: city,\n                      isDisabled: loading ? true : city && city !== '' ? false : addressState && addressState !== '' ? false : true\n                    }), errors.city && touched.city ? _jsx(Text, {\n                      style: styles.errorText,\n                      children: errors.city\n                    }) : null, insurance && insurance.plan === \"Sosocare Basic Plan\" && _jsxs(View, {\n                      children: [_jsx(Text, {\n                        style: styles.label,\n                        children: \"Preferred Pharmacy\"\n                      }), _jsx(SelectField, {\n                        hasIcon: false,\n                        label: \"Preferred Pharmacy\",\n                        handleChange: handleChange('centre'),\n                        options: optionsPharmas,\n                        isDisabled: loading ? true : pharmas.length < 1 ? true : city && city !== '' ? false : true\n                      }), errors.centre && touched.centre ? _jsx(Text, {\n                        style: styles.errorText,\n                        children: errors.centre\n                      }) : null]\n                    }), insurance && insurance.plan === \"Sosocare Silver Plan\" && _jsxs(View, {\n                      children: [_jsx(Text, {\n                        style: styles.label,\n                        children: \"Preferred Hospital\"\n                      }), _jsx(SelectField, {\n                        hasIcon: false,\n                        label: \"Preferred Hospital\",\n                        handleChange: handleChange('centre'),\n                        options: optionsHospitals,\n                        isDisabled: loading ? true : hospitals.length < 1 ? true : city && city !== '' ? false : true\n                      }), errors.centre && touched.centre ? _jsx(Text, {\n                        style: styles.errorText,\n                        children: errors.centre\n                      }) : null]\n                    }), _jsx(ButtonWithTitle, {\n                      loading: loading,\n                      noBg: false,\n                      title: 'Submit',\n                      backgroundColor: COLORS.primary,\n                      color: COLORS.white,\n                      onTap: handleSubmit,\n                      width: '100%'\n                    })]\n                  });\n                }\n              })\n            })]\n          })\n        }), _jsx(SuccessSheet, {\n          message: successMessage,\n          open: isSuccess,\n          closed: handleSuccess\n        }), _jsx(ErrorSheet, {\n          error: error,\n          open: hasError,\n          closed: clearError\n        }), _jsx(NoticeSheet, {\n          message: noticeMessage,\n          open: hasNotice,\n          closed: handleNotice\n        })]\n      })\n    }), _jsx(SafeAreaView, {\n      style: {\n        backgroundColor: '#fefefe'\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  formContainer: {\n    flex: 5,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    marginTop: 30\n  },\n  form: {\n    width: '100%',\n    flexDirection: 'column'\n  },\n  label: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.gray,\n    marginBottom: 10\n  },\n  wasteHeading: {\n    fontSize: SIZES.large,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18,\n    width: '100%'\n  },\n  wasteRecord: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.fade,\n    paddingVertical: 10,\n    paddingHorizontal: 6\n  },\n  wasteRecordLeft: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.pallete_deep,\n    flex: 2\n  },\n  wasteRecordRight: {\n    flex: 5,\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.medium,\n    color: COLORS.gray,\n    flexShrink: 1\n  },\n  insuranceContainer: {\n    width: '100%',\n    backgroundColor: COLORS.primary,\n    borderRadius: 15,\n    paddingTop: 30,\n    paddingBottom: 10,\n    marginBottom: 20,\n    paddingHorizontal: 18,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    borderTopEndRadius: 15,\n    elevation: 5,\n    shadowColor: 'rgb(230, 235, 243)',\n    shadowOffset: {\n      width: 4,\n      height: 12\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10\n  },\n  insuranceHeading: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18\n  },\n  insurancePlan: {\n    fontSize: SIZES.extraLarge,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 6\n  },\n  container: {\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fefefe',\n    paddingHorizontal: 24,\n    paddingBottom: 100\n  },\n  imageBg: {\n    resizeMode: 'cover',\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: 'center'\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: 'center'\n  }\n});\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    agentReducer: state.AgentReducer\n  };\n};\nvar ClientInsurance = connect(mapToStateProps, {\n  OnLoadAgentClient: OnLoadAgentClient,\n  OnAgentSetCareCentre: OnAgentSetCareCentre\n})(_ClientInsurance);\nexport default ClientInsurance;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRoute","useNavigation","COLORS","FONTS","SIZES","NoticeSheet","ErrorSheet","SuccessSheet","ButtonWithTitle","SelectField","connect","axios","BASE_URL","Formik","yup","Location","OnLoadAgentClient","OnAgentSetCareCentre","NativeBaseProvider","extendTheme","jsx","_jsx","jsxs","_jsxs","config","useSystemColorMode","initialColorMode","theme","colors","primary","wait","timeout","Promise","resolve","setTimeout","_ClientInsurance","props","agentReducer","route","client","params","navigation","_useState","_useState2","_slicedToArray","inLoading","setInLoading","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","reload","setReload","_useState9","_useState10","noticeMessage","setNoticeMessage","_useState11","_useState12","successMessage","setSuccessMessage","_useState13","_useState14","hasError","setHasError","_useState15","_useState16","isSuccess","setIsSuccess","_useState17","_useState18","hasNotice","setHasNotice","_useState19","_useState20","refreshing","setRefreshing","_useState21","_useState22","insurance","setInsurance","_useState23","_useState24","address","setAddress","_useState25","_useState26","addressState","setAddressState","_useState27","_useState28","city","setCity","_useState29","_useState30","cities","setCities","_useState31","_useState32","street","setStreet","_useState33","_useState34","displayAddress","setDisplayAddress","keyboardVerticalOffset","Platform","OS","_useState35","_useState36","hospitals","setHospitals","_useState37","_useState38","optionsHospitals","setOptionsHospitals","_useState39","_useState40","pharmas","setPharmas","_useState41","_useState42","optionsPharmas","setOptionsPharmas","_useState43","_useState44","activePharma","setActivePharma","_useState45","_useState46","activeHospital","setActiveHospital","clearError","handleSuccess","_ref","_asyncToGenerator","navigate","apply","arguments","handleNotice","mounted","res","_id","success","existingLocation","location","address_city","address_state","region","address_street","district","country","address_country","streetNumber","subregion","postalCode","name","isoCountryCode","timezone","_yield$Location$reque","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","coords","latitude","longitude","addressResponse","reverseGeocodeAsync","lga","item","currentAddress","message","onRefresh","prev","then","states","title","value","CentreSchema","object","shape","state","string","required","centre","plan","findHospitals","_ref4","configurationObject","method","url","data","response","resBody","length","thisHosps","i","hops","push","findPharmas","_ref5","pharmacies","thisPhams","pharm","pharmacyName","pharmacyCode","handleSubmit","_ref7","_ref6","selectedHosp","selectedPharma","theOne","find","e","_x","source","CancelToken","toLowerCase","cancelToken","token","allCities","map","isExist","defaultCity","isCancel","cancel","View","style","flex","justifyContent","backgroundColor","width","alignItems","children","ActivityIndicator","size","SafeAreaView","ScrollView","refreshControl","RefreshControl","tintColor","styles","container","formContainer","Text","_objectSpread","headingText","subHeadingText","first_name","last_name","form","initialValues","onSubmit","values","validationSchema","_ref10","errors","touched","handleChange","label","hasIcon","_ref11","val","_x2","options","isDisabled","errorText","_ref12","_x3","noBg","color","white","onTap","open","closed","StyleSheet","create","flexDirection","marginTop","fontSize","medium","fontFamily","semiBold","gray","marginBottom","wasteHeading","large","wasteRecord","borderBottomWidth","borderBottomColor","fade","paddingVertical","paddingHorizontal","wasteRecordLeft","pallete_deep","wasteRecordRight","flexShrink","insuranceContainer","borderRadius","paddingTop","paddingBottom","borderTopEndRadius","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","insuranceHeading","insurancePlan","extraLarge","imageBg","resizeMode","heading","dark","font","textAlign","negative","mapToStateProps","AgentReducer","ClientInsurance"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/screens/agent/clients/ClientInsurance.tsx"],"sourcesContent":["import { View, Text, Platform, ScrollView, SafeAreaView, StyleSheet, ActivityIndicator, RefreshControl } from 'react-native';\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { ClientDetailsScreenRouteProp, ClientScreenNavigationProp } from \"../../../navigation/agent/types\";\nimport { useRoute } from '@react-navigation/native';\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { COLORS, FONTS, SIZES } from '../../../constants';\nimport NoticeSheet from \"../../../components/NoticeSheet\";\nimport ErrorSheet from \"../../../components/ErrorSheet\";\nimport SuccessSheet from \"../../../components/SuccessSheet\";\nimport { ButtonWithTitle } from \"../../../components/ButtonWithTitle\";\nimport SelectField from \"../../../components/SelectField\";\n\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { BASE_URL } from '../../../utils';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport * as Location from 'expo-location';\nimport { ApplicationState, AgentState, InsuranceModel, OnLoadAgentClient, LocationModel, OnAgentSetCareCentre } from '../../../redux';\nimport {\n    NativeBaseProvider,\n    extendTheme,\n    Image,\n    Skeleton\n} from \"native-base\";\n// Define the config\nconst config = {\n    useSystemColorMode: false,\n    initialColorMode: \"light\",\n};\n\n// extend the theme\nexport const theme = extendTheme({\n    colors: {\n        primary: {\n            100: '#52A56E',\n            200: '#C6C6C6'\n        }\n    },\n    config\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n    interface ICustomTheme extends MyThemeType { }\n}\n\ninterface ClientInsuranceScreenProps {\n    agentReducer: AgentState;\n    OnLoadAgentClient: Function;\n    OnAgentSetCareCentre: Function;\n}\n\n\ninterface HospitalModel {\n    name: string;\n    address: string;\n}\n\ninterface PharmaModel {\n    pharmacyCode: string;\n    pharmacyName: string;\n    state: string;\n    lga: string;\n    address: string;\n}\ninterface SelectPharmaModel {\n    title: string;\n    value: string;\n}\ninterface SelectHospitalModel {\n    title: string;\n    value: string;\n}\n\nconst wait = (timeout: number) => {\n    return new Promise(resolve => setTimeout(resolve, timeout));\n};\nconst _ClientInsurance: React.FC<ClientInsuranceScreenProps> = (props) => {\n    const { agentReducer, OnLoadAgentClient, OnAgentSetCareCentre } = props;\n    const route = useRoute<ClientDetailsScreenRouteProp>();\n    const { client } = route.params;\n    const navigation = useNavigation<ClientScreenNavigationProp>();\n\n    const [inLoading, setInLoading] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [reload, setReload] = useState(false);\n    const [noticeMessage, setNoticeMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [hasError, setHasError] = useState(false);\n    const [isSuccess, setIsSuccess] = useState(false);\n    const [hasNotice, setHasNotice] = useState(false);\n    const [refreshing, setRefreshing] = useState(false);\n    const [insurance, setInsurance] = useState<InsuranceModel>();\n\n    const [address, setAddress] = useState<Location.LocationGeocodedAddress>();\n    const [addressState, setAddressState] = useState('');\n    const [city, setCity] = useState('');\n    const [cities, setCities] = useState([]);\n    const [street, setStreet] = useState('');\n    const [displayAddress, setDisplayAddress] = useState(\"Waiting for Current Location\");\n    const keyboardVerticalOffset = Platform.OS === 'ios' ? 40 : 0;\n    const [hospitals, setHospitals] = useState<Array<HospitalModel>>([]);\n    const [optionsHospitals, setOptionsHospitals] = useState<Array<SelectHospitalModel>>([]);\n    const [pharmas, setPharmas] = useState<Array<PharmaModel>>([]);\n    const [optionsPharmas, setOptionsPharmas] = useState<Array<SelectPharmaModel>>([]);\n    const [activePharma, setActivePharma] = useState<PharmaModel>();\n    const [activeHospital, setActiveHospital] = useState<HospitalModel>();\n\n    const clearError = () => {\n        setHasError(false);\n    };\n    const handleSuccess = async () => {\n        setIsSuccess(false);\n        navigation.navigate('ClientDetails', { client });\n    };\n    const handleNotice = () => {\n        setHasNotice(false);\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        let mounted = true;\n        (async () => {\n            if (!mounted) {\n                return;\n            }\n            setInLoading(true);\n            let res = await OnLoadAgentClient(client._id);\n            if (res.success) {\n                if (!mounted) {\n                    return;\n                }\n                setInsurance(res.insurance);\n                setInLoading(false);\n            } else if (res.error) {\n                setInLoading(false);\n                setError(res.error);\n                setHasError(true);\n            }\n            let existingLocation: LocationModel = agentReducer.location;\n            if (existingLocation.address_city && existingLocation.address_state) {\n                setAddress({\n                    region: existingLocation.address_state,\n                    city: existingLocation.address_city,\n                    street: existingLocation.address_street,\n                    district: '',\n                    country: existingLocation.address_country,\n                    streetNumber: '',\n                    subregion: '',\n                    postalCode: '',\n                    name: '',\n                    isoCountryCode: '',\n                    timezone: ''\n                });\n                setAddressState(existingLocation.address_state);\n                setCity(existingLocation.address_city);\n                setStreet(existingLocation.address_street || '');\n                return;\n            }\n            if (addressState && addressState !== '') return;\n            setLoading(true);\n            try {\n                if (!mounted) {\n                    return;\n                }\n                let { status } = await Location.requestForegroundPermissionsAsync();\n\n                if (status !== 'granted') {\n                    setError('Permission to access location is not granted');\n                    setHasError(true);\n                    setLoading(false);\n                }\n\n                let location: any = await Location.getCurrentPositionAsync({});\n\n                const { coords } = location;\n\n                if (coords) {\n                    const { latitude, longitude } = coords;\n                    if (!mounted) {\n                        return;\n                    }\n                    let addressResponse: any = await Location.reverseGeocodeAsync({ latitude, longitude });\n                    let region = \"\";\n                    let lga = \"\";\n                    for (let item of addressResponse) {\n                        setLoading(false);\n                        setAddress(item);\n                        // onUpdateLocation(item)\n                        let currentAddress = `${item.name},${item.street}, ${item.postalCode}, ${item.country}`;\n                        setDisplayAddress(currentAddress);\n                        setAddressState(item.region);\n                        region = item.region;\n                        lga = item.city;\n                        setCity(item.city);\n                        setStreet(item.street);\n                        return;\n                    }\n                    setLoading(false);\n                } else {\n                    //notify user something went wrong with location\n                    setError(\"Could't get location automatically\");\n                    setHasError(true);\n                    setLoading(false);\n                }\n\n\n\n            } catch (error) {\n                if (!mounted) {\n                    return;\n                }\n                setError(error.message);\n                setHasError(true);\n                setLoading(false);\n                return;\n            }\n\n        })();\n        return () => {\n            mounted = false;\n        };\n    }, [reload]);\n\n    const onRefresh = useCallback(() => {\n        let mounted = true;\n        (async () => {\n            if (!mounted) {\n                return;\n            }\n            setRefreshing(true);\n            setReload(prev => !prev);\n            wait(2000).then(() => setRefreshing(false));\n        })();\n\n        return () => {\n            mounted = false;\n        };\n\n    }, []);\n\n    const states = [\n        { title: \"Abia\", value: \"Abia\" },\n        { title: \"Adamawa\", value: \"Adamawa\" },\n        { title: \"Akwa Ibom\", value: \"Akwa Ibom\" },\n        { title: \"Anambra\", value: \"Anambra\" },\n        { title: \"Bauchi\", value: \"Bauchi\" },\n        { title: \"Bayelsa\", value: \"Bayelsa\" },\n        { title: \"Benue\", value: \"Benue\" },\n        { title: \"Borno\", value: \"Borno\" },\n        { title: \"Cross River\", value: \"Cross River\" },\n        { title: \"Delta\", value: \"Delta\" },\n        { title: \"Ebonyi\", value: \"Ebonyi\" },\n        { title: \"Edo\", value: \"Edo\" },\n        { title: \"Ekiti\", value: \"Ekiti\" },\n        { title: \"Enugu\", value: \"Enugu\" },\n        { title: \"FCT - Abuja\", value: \"FCT - Abuja\" },\n        { title: \"Gombe\", value: \"Gombe\" },\n        { title: \"Imo\", value: \"Imo\" },\n        { title: \"Jigawa\", value: \"Jigawa\" },\n        { title: \"Kaduna\", value: \"Kaduna\" },\n        { title: \"Kano\", value: \"Kano\" },\n        { title: \"Katsina\", value: \"Katsina\" },\n        { title: \"Kebbi\", value: \"Kebbi\" },\n        { title: \"Kogi\", value: \"Kogi\" },\n        { title: \"Kwara\", value: \"Kwara\" },\n        { title: \"Lagos\", value: \"Lagos\" },\n        { title: \"Nasarawa\", value: \"Nasarawa\" },\n        { title: \"Niger\", value: \"Niger\" },\n        { title: \"Ogun\", value: \"Ogun\" },\n        { title: \"Ondo\", value: \"Ondo\" },\n        { title: \"Osun\", value: \"Osun\" },\n        { title: \"Oyo\", value: \"Oyo\" },\n        { title: \"Plateau\", value: \"Plateau\" },\n        { title: \"Rivers\", value: \"Rivers\" },\n        { title: \"Sokoto\", value: \"Sokoto\" },\n        { title: \"Taraba\", value: \"Taraba\" },\n        { title: \"Yobe\", value: \"Yobe\" },\n        { title: \"Zamfara\", value: \"Zamfara\" },\n\n    ];\n    const CentreSchema = yup.object().shape({\n        state: yup.string().required('State is required'),\n        city: yup.string().required('City is required'),\n        centre: yup.string().required(`Preferred ${insurance?.plan === 'Sosocare Basic Plan' ? 'Pharmacy' : 'Hospital'} is required`),\n    });\n\n    const findHospitals = async () => {\n        const state = addressState\n        const lga = city\n        try {\n            setLoading(true);\n            const configurationObject = {\n                method: 'post',\n                url: `${BASE_URL}hospitals`,\n                data: {\n                    state: state ? state : addressState,\n                    lga: lga ? lga : city\n                }\n            };\n            const response = await axios(configurationObject);\n            let resBody = response.data;\n\n            if (resBody['status'] === 'error') {\n                setLoading(false);\n                setError(\"Error loading hospitals\");\n                setHasError(true);\n                return;\n            } else {\n                if (!resBody.hospitals || resBody.hospitals && resBody.hospitals.length === 0) {\n                    setLoading(false);\n                    return;\n                }\n                setHospitals(resBody.hospitals);\n                let thisHosps: SelectHospitalModel[] = [];\n                for (let i = 0; i < resBody.hospitals.length; i++) {\n                    let hops: HospitalModel = resBody.hospitals[i];\n                    thisHosps.push({\n                        title: `${hops.name}`,\n                        value: hops.name\n                    });\n                }\n                setOptionsHospitals(thisHosps);\n                setLoading(false);\n                return;\n\n            }\n        } catch (error) {\n            setLoading(false);\n            setError(error.message);\n            setHasError(true);\n            return;\n        }\n    };\n\n    const findPharmas = async () => {\n        const state = addressState\n        const lga = city\n        try {\n            setLoading(true);\n            const configurationObject = {\n                method: 'post',\n                url: `${BASE_URL}pharmacies`,\n                data: {\n                    state: state ? state : addressState,\n                    lga: lga ? lga : city\n                }\n            };\n            const response = await axios(configurationObject);\n\n            let resBody = response.data;\n            if (resBody['status'] === 'error') {\n                setLoading(false);\n                setError(\"Error loading pharmacies\");\n                setHasError(true);\n                return;\n            } else {\n                if (!resBody.pharmacies || resBody.pharmacies && resBody.pharmacies.length === 0) {\n                    setLoading(false);\n                    return;\n                }\n                setPharmas(resBody.pharmacies);\n                let thisPhams: SelectPharmaModel[] = [];\n                for (let i = 0; i < resBody.pharmacies.length; i++) {\n                    let pharm: PharmaModel = resBody.pharmacies[i];\n                    thisPhams.push({\n                        title: `${pharm.pharmacyName}: ${pharm.address}`,\n                        value: pharm.pharmacyCode\n                    });\n                }\n                setOptionsPharmas(thisPhams);\n                setLoading(false);\n                return;\n\n            }\n        } catch (error) {\n            setLoading(false);\n            setError(error.message);\n            setHasError(true);\n            return;\n        }\n    };\n\n    const handleSubmit = async ({ centre }) => {\n        let selectedHosp: HospitalModel | undefined;\n        let selectedPharma: PharmaModel | undefined;\n        if (insurance) {\n            if (insurance.plan === 'Sosocare Basic Plan') {\n                let theOne = await pharmas.find((item) => item.pharmacyCode === centre);\n                if (theOne) {\n                    selectedPharma = theOne;\n                    setActivePharma(theOne);\n                }\n            } else {\n                let theOne = await hospitals.find((item) => item.name === centre);\n                if (theOne) {\n                    selectedHosp = theOne;\n                    setActiveHospital(theOne);\n                }\n            }\n        }\n\n        try {\n            if (insurance) {\n                setLoading(true);\n                let res = await OnAgentSetCareCentre(insurance._id, client._id, selectedHosp, selectedPharma);\n                if (res.error) {\n                    setError(res.error);\n                    setLoading(false);\n                    setHasError(true);\n                }\n                if (res.success) {\n                    setLoading(false);\n                    setSuccessMessage('Primary care center updated');\n                    setIsSuccess(true);\n                }\n            }\n        } catch (e) {\n            setError(e);\n            setHasError(true);\n            setLoading(false);\n        }\n\n\n    };\n    useEffect(() => {\n        const source = axios.CancelToken.source();\n        let mounted = true;\n        (async () => {\n            if (!addressState || addressState === '') return;\n            if (!mounted) {\n                return;\n            }\n            setLoading(true);\n            try {\n                if (!mounted) {\n                    return;\n                }\n                const configurationObject = {\n                    method: 'get',\n                    url: `https://locus.fkkas.com/api/regions/${addressState.toLowerCase()}`,\n                    cancelToken: source.token,\n                };\n                const response = await axios(configurationObject);\n\n                let resBody = response.data;\n                if (!mounted) {\n                    return;\n                }\n                if (resBody['data']) {\n                    let allCities = resBody['data'].map((item: any) => {\n                        return { title: item.name, value: item.name };\n                    });\n                    setCities(allCities);\n                    let isExist = allCities.find((item) => item.title === city);\n                    if (!isExist) {\n                        let defaultCity = allCities[0].title;\n                        setCity(defaultCity);\n                        setStreet('');\n                    }\n                    setLoading(false);\n                    return;\n                } else {\n                    setError(\"Unable to get cities for this state\");\n                    setHasError(true);\n                    setLoading(false);\n                }\n\n            } catch (error) {\n                if (!mounted) {\n                    return;\n                }\n                if (axios.isCancel(error)) {\n                } else {\n                    setError(error.message || \"Unable to get cities for this state\");\n                    setHasError(true);\n                    setLoading(false);\n                    return;\n                }\n\n            }\n\n        })();\n        return () => {\n            source.cancel();\n            mounted = false;\n        };\n    }, [addressState]);\n\n    useEffect(() => {\n        let mounted = true;\n        (async () => {\n            if (!city || city === '') return;\n            if (!mounted) {\n                return;\n            }\n            setLoading(true);\n            try {\n                if (!mounted) {\n                    return;\n                }\n\n                if (insurance) {\n                    if (insurance.plan === \"Sosocare Basic Plan\") {\n                        await findPharmas();\n                    } else if (insurance.plan === \"Sosocare Silver Plan\") {\n                        await findHospitals();\n                    } else {\n                        await findPharmas();\n                        await findHospitals();\n                    }\n                }\n            } catch (error) {\n                if (!mounted) {\n                    return;\n                }\n\n                setError(error.message || \"Unable to get pharmacies for this region\");\n                setHasError(true);\n                setLoading(false);\n                return;\n\n            }\n\n        })();\n        return () => {\n            mounted = false;\n        };\n    }, [city]);\n\n\n    if (inLoading) {\n        return (\n            <View style={{ flex: 1, justifyContent: 'center', backgroundColor: 'white', width: '100%', alignItems: 'center' }}>\n                <ActivityIndicator size={'large'} />\n            </View>\n        );\n    }\n    return (\n        <NativeBaseProvider theme={theme}>\n            <SafeAreaView style={{ backgroundColor: '#fefefe' }} />\n            <ScrollView\n                refreshControl={\n                    <RefreshControl\n                        refreshing={refreshing}\n                        onRefresh={onRefresh}\n                        colors={[COLORS.primary]}\n                        tintColor={COLORS.primary}\n                    />\n                }\n                style={{ flex: 1, backgroundColor: 'white' }}\n            >\n                <View style={{ width: \"100%\" }}>\n                    <View style={styles.container}>\n                        <View style={styles.formContainer}>\n                            <Text style={{ ...styles.headingText }}>{insurance?.plan}</Text>\n                            <Text style={{ ...styles.subHeadingText }}>\n                                Set {client.first_name} {client.last_name} primary {insurance?.plan === 'Sosocare Basic Plan' ? 'Pharmacy' : 'Hospital'} care center to enjoy your Insurance cover\n                            </Text>\n                            <View style={styles.form}>\n                                <Formik\n                                    initialValues={{\n                                        state: addressState,\n                                        city: city,\n                                        centre: \"\",\n                                    }}\n                                    onSubmit={values => {\n                                        handleSubmit(values);\n                                    }}\n                                    validationSchema={CentreSchema}\n                                >\n                                    {({ errors, touched, handleChange, handleSubmit, values }) => (\n                                        <View style={{ width: '100%' }}>\n                                            <Text style={styles.label}>State</Text>\n                                            <SelectField\n                                                hasIcon={false}\n                                                label='State'\n                                                handleChange={async (val) => {\n                                                    handleChange('state')(val);\n                                                    setAddressState(val);\n                                                }}\n                                                options={states}\n                                                value={addressState}\n                                                isDisabled={loading}\n                                            />\n                                            {errors.state && touched.state ? <Text style={styles.errorText}>{errors.state}</Text> : null}\n                                            <Text style={styles.label}>City/LGA</Text>\n                                            <SelectField\n                                                hasIcon={false}\n                                                label='City'\n                                                handleChange={async (val) => {\n                                                    handleChange('city')(val);\n                                                    setCity(val);\n                                                }}\n                                                options={cities}\n                                                value={city}\n                                                isDisabled={loading ? true : city && city !== '' ? false : addressState && addressState !== '' ? false : true}\n                                            />\n                                            {errors.city && touched.city ? <Text style={styles.errorText}>{errors.city}</Text> : null}\n\n                                            {insurance && insurance.plan === \"Sosocare Basic Plan\" && (<View>\n                                                <Text style={styles.label}>Preferred Pharmacy</Text>\n                                                <SelectField\n                                                    hasIcon={false}\n                                                    label='Preferred Pharmacy'\n                                                    handleChange={handleChange('centre')}\n                                                    options={optionsPharmas}\n                                                    isDisabled={loading ? true : pharmas.length < 1 ? true : city && city !== '' ? false : true}\n                                                />\n                                                {errors.centre && touched.centre ? <Text style={styles.errorText}>{errors.centre}</Text> : null}\n                                            </View>)}\n                                            {insurance && insurance.plan === \"Sosocare Silver Plan\" && (<View>\n                                                <Text style={styles.label}>Preferred Hospital</Text>\n                                                <SelectField\n                                                    hasIcon={false}\n                                                    label='Preferred Hospital'\n                                                    handleChange={handleChange('centre')}\n                                                    options={optionsHospitals}\n                                                    isDisabled={loading ? true : hospitals.length < 1 ? true : city && city !== '' ? false : true}\n                                                />\n                                                {errors.centre && touched.centre ? <Text style={styles.errorText}>{errors.centre}</Text> : null}\n                                            </View>)}\n                                            <ButtonWithTitle loading={loading} noBg={false} title={'Submit'} backgroundColor={COLORS.primary} color={COLORS.white} onTap={handleSubmit} width={'100%'} />\n                                        </View>\n                                    )}\n                                </Formik>\n                            </View>\n                        </View>\n                    </View>\n                    <SuccessSheet message={successMessage} open={isSuccess} closed={handleSuccess} />\n                    <ErrorSheet error={error} open={hasError} closed={clearError} />\n                    <NoticeSheet message={noticeMessage} open={hasNotice} closed={handleNotice} />\n                </View>\n\n            </ScrollView>\n            <SafeAreaView style={{ backgroundColor: '#fefefe' }} />\n        </NativeBaseProvider>\n    );\n};\n\n\nconst styles = StyleSheet.create({\n    formContainer: {\n        flex: 5,\n        width: '100%',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        marginTop: 30\n    },\n    form: {\n        width: '100%',\n        flexDirection: 'column',\n    },\n    label: {\n        fontSize: SIZES.medium,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.gray,\n        marginBottom: 10\n    },\n    wasteHeading: {\n        fontSize: SIZES.large,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.white,\n        marginBottom: 18,\n        width: '100%'\n    },\n    wasteRecord: {\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        borderBottomWidth: 1,\n        borderBottomColor: COLORS.fade,\n        paddingVertical: 10,\n        paddingHorizontal: 6,\n    },\n    wasteRecordLeft: {\n        fontSize: SIZES.medium,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.pallete_deep,\n        flex: 2,\n    },\n    wasteRecordRight: {\n        flex: 5,\n        fontSize: SIZES.medium,\n        fontFamily: FONTS.medium,\n        color: COLORS.gray,\n        flexShrink: 1\n    },\n    insuranceContainer: {\n        width: '100%',\n        backgroundColor: COLORS.primary,\n        borderRadius: 15,\n        paddingTop: 30,\n        paddingBottom: 10,\n        marginBottom: 20,\n        paddingHorizontal: 18,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        borderTopEndRadius: 15,\n        elevation: 5,\n        shadowColor: 'rgb(230, 235, 243)',\n        shadowOffset: { width: 4, height: 12 },\n        shadowOpacity: 0.5,\n        shadowRadius: 10\n    },\n    insuranceHeading: {\n        fontSize: SIZES.medium,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.white,\n        marginBottom: 18\n    },\n    insurancePlan: {\n        fontSize: SIZES.extraLarge,\n        fontFamily: FONTS.semiBold,\n        color: COLORS.white,\n        marginBottom: 6\n    },\n    container: {\n        flex: 1,\n        width: '100%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fefefe',\n        paddingHorizontal: 24,\n        paddingBottom: 100\n    },\n    imageBg: {\n        resizeMode: 'cover',\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    headingText: {\n        fontFamily: FONTS.semiBold,\n        fontSize: SIZES.heading,\n        color: COLORS.dark,\n        marginBottom: SIZES.font,\n        textAlign: 'center'\n    },\n    errorText: {\n        fontSize: 14,\n        fontFamily: FONTS.medium,\n        color: COLORS.negative,\n        marginTop: -26,\n        marginBottom: 10,\n    },\n    subHeadingText: {\n        fontFamily: FONTS.medium,\n        fontSize: SIZES.medium,\n        color: COLORS.gray,\n        marginBottom: 20,\n        textAlign: 'center'\n    },\n});\n\nconst mapToStateProps = (state: ApplicationState) => ({\n    agentReducer: state.AgentReducer\n});\n\nconst ClientInsurance = connect(mapToStateProps, { OnLoadAgentClient, OnAgentSetCareCentre })(_ClientInsurance);\nexport default ClientInsurance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}