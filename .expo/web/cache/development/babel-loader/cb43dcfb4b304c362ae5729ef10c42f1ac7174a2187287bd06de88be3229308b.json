{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"debug\"];\nimport { getStyleAndFilteredProps, propConfig } from \"../theme/styled-system\";\nimport { useTheme } from \"./useTheme\";\nimport React from 'react';\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { useResponsiveQuery } from \"../utils/useResponsiveQuery\";\nimport stableHash from 'stable-hash';\nvar getStyledSystemPropsAndRestProps = function getStyledSystemPropsAndRestProps(props) {\n  var styledSystemProps = {};\n  var restProps = {};\n  for (var key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n  return {\n    styledSystemProps: styledSystemProps,\n    restProps: restProps\n  };\n};\nexport var useStyledSystemPropsResolver = function useStyledSystemPropsResolver(_ref) {\n  var propStyle = _ref.style,\n    debug = _ref.debug,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useTheme();\n  var _useNativeBaseConfig = useNativeBaseConfig('makeStyledComponent'),\n    currentBreakpoint = _useNativeBaseConfig.currentBreakpoint,\n    config = _useNativeBaseConfig.config;\n  var strictMode = config.strictMode;\n  var _useResponsiveQuery = useResponsiveQuery(),\n    getResponsiveStyles = _useResponsiveQuery.getResponsiveStyles;\n  var _getStyledSystemProps = getStyledSystemPropsAndRestProps(props),\n    styledSystemProps = _getStyledSystemProps.styledSystemProps,\n    restProps = _getStyledSystemProps.restProps;\n  var _React$useMemo = React.useMemo(function () {\n      var _getStyleAndFilteredP = getStyleAndFilteredProps({\n          styledSystemProps: styledSystemProps,\n          theme: theme,\n          debug: debug,\n          currentBreakpoint: currentBreakpoint,\n          strictMode: strictMode,\n          getResponsiveStyles: getResponsiveStyles\n        }),\n        styleSheet = _getStyleAndFilteredP.styleSheet,\n        dataSet = _getStyleAndFilteredP.dataSet;\n      if (propStyle) {\n        return {\n          style: [styleSheet.box, propStyle],\n          dataSet: dataSet\n        };\n      } else {\n        return {\n          style: styleSheet.box,\n          dataSet: dataSet\n        };\n      }\n    }, [stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]),\n    style = _React$useMemo.style,\n    dataSet = _React$useMemo.dataSet;\n  if (process.env.NODE_ENV === 'development' && debug) {\n    console.log('style,resprops', currentBreakpoint);\n  }\n  restProps.dataSet = dataSet;\n  return [style, restProps];\n};","map":{"version":3,"names":["getStyleAndFilteredProps","propConfig","useTheme","React","useNativeBaseConfig","useResponsiveQuery","stableHash","getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key","useStyledSystemPropsResolver","_ref","propStyle","style","debug","_objectWithoutProperties","_excluded","theme","_useNativeBaseConfig","currentBreakpoint","config","strictMode","_useResponsiveQuery","getResponsiveStyles","_getStyledSystemProps","_React$useMemo","useMemo","_getStyleAndFilteredP","styleSheet","dataSet","box","process","env","NODE_ENV","console","log"],"sources":["C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\native-base\\lib\\module\\hooks\\useStyledSystemPropsResolver.ts"],"sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = (props: any) => {\n  const styledSystemProps: any = {};\n  const restProps: any = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return { styledSystemProps, restProps };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet } = React.useMemo(() => {\n    const { styleSheet, dataSet } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet };\n    } else {\n      return { style: styleSheet.box, dataSet };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n\n  return [style, restProps];\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}