{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport HomeStack from \"./HomeStack\";\nimport ClientStack from \"./ClientStack\";\nimport RecordStack from \"./RecordStack\";\nimport { extendTheme } from \"native-base\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#52A56E',\n      200: '#C6C6C6'\n    }\n  },\n  config: config\n});\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { OnAgentLogout } from \"../../redux\";\nimport { connect } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar _BottomTabs = function _BottomTabs(props) {\n  var agentReducer = props.agentReducer,\n    OnAgentLogout = props.OnAgentLogout;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageUrl = _useState2[0],\n    setImageUrl = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    imageLoading = _useState6[0],\n    setImageLoading = _useState6[1];\n  var height = Dimensions.get('screen').height;\n  var DEVICE_WIDTH = Dimensions.get('window').width;\n  var sizeMultiplier = 0.8;\n  var shortScreensMaxHeight = 680;\n  var navigation = useNavigation();\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      try {\n        setLoading(true);\n        if (!mounted) {\n          return;\n        }\n        var existingImage = agentReducer.agent.image;\n        setImageUrl(existingImage || '');\n        setImageLoading(true);\n        setLoading(false);\n      } catch (error) {\n        if (!mounted) {\n          return;\n        }\n        setLoading(false);\n        return;\n      }\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return _jsxs(Tab.Navigator, {\n    sceneContainerStyle: {\n      backgroundColor: 'white'\n    },\n    screenOptions: {\n      headerShown: false,\n      tabBarStyle: {\n        minHeight: Platform.OS === 'android' ? 56 : '8%',\n        backgroundColor: COLORS.white,\n        borderLeftWidth: 0.2,\n        borderRightWidth: 0.2,\n        borderColor: COLORS.gray,\n        borderTopColor: COLORS.gray,\n        borderTopLeftRadius: 15,\n        borderTopRightRadius: 15,\n        borderTopStartRadius: 15,\n        padding: 10,\n        width: DEVICE_WIDTH,\n        position: 'absolute',\n        bottom: 0,\n        borderTopEndRadius: 15,\n        elevation: 5,\n        shadowColor: 'rgb(230, 235, 243)',\n        shadowOffset: {\n          width: 0,\n          height: -2\n        },\n        shadowOpacity: 0.5,\n        shadowRadius: 10\n      },\n      tabBarLabelStyle: {\n        fontStyle: 'normal',\n        fontFamily: FONTS.regular,\n        fontWeight: '400',\n        fontSize: 10,\n        lineHeight: 16,\n        textAlign: 'center'\n      },\n      tabBarActiveTintColor: COLORS.pallete_deep,\n      tabBarInactiveTintColor: COLORS.dark\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"HomeStack\",\n      component: HomeStack,\n      options: {\n        tabBarLabel: 'Home',\n        tabBarActiveTintColor: COLORS.primary,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Ionicons, {\n            name: \"ios-home-outline\",\n            style: {\n              fontSize: size * sizeMultiplier,\n              color: color\n            }\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ClientStack\",\n      component: ClientStack,\n      options: {\n        headerTitleStyle: {\n          color: COLORS.dark,\n          fontSize: SIZES.large,\n          fontFamily: FONTS.medium\n        },\n        tabBarLabel: 'Clients',\n        tabBarActiveTintColor: COLORS.pallete_deep,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Ionicons, {\n            name: \"ios-people-outline\",\n            style: {\n              fontSize: size * sizeMultiplier,\n              color: color\n            }\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"RecordStack\",\n      component: RecordStack,\n      options: {\n        headerTitleStyle: {\n          color: COLORS.dark,\n          fontSize: SIZES.large,\n          fontFamily: FONTS.medium\n        },\n        tabBarLabel: 'Transactions',\n        tabBarActiveTintColor: COLORS.pallete_deep,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(Ionicons, {\n            name: \"ios-list-outline\",\n            style: {\n              fontSize: size * sizeMultiplier,\n              color: color\n            }\n          });\n        }\n      }\n    })]\n  });\n};\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    agentReducer: state.AgentReducer\n  };\n};\nvar BottomTabs = connect(mapToStateProps, {\n  OnAgentLogout: OnAgentLogout\n})(_BottomTabs);\nexport default BottomTabs;","map":{"version":3,"names":["React","useEffect","useState","Dimensions","Platform","createBottomTabNavigator","Ionicons","HomeStack","ClientStack","RecordStack","extendTheme","config","useSystemColorMode","initialColorMode","theme","colors","primary","COLORS","SIZES","FONTS","useNavigation","OnAgentLogout","connect","jsx","_jsx","jsxs","_jsxs","Tab","_BottomTabs","props","agentReducer","_useState","_useState2","_slicedToArray","imageUrl","setImageUrl","_useState3","_useState4","loading","setLoading","_useState5","_useState6","imageLoading","setImageLoading","height","get","DEVICE_WIDTH","width","sizeMultiplier","shortScreensMaxHeight","navigation","mounted","_asyncToGenerator","existingImage","agent","image","error","Navigator","sceneContainerStyle","backgroundColor","screenOptions","headerShown","tabBarStyle","minHeight","OS","white","borderLeftWidth","borderRightWidth","borderColor","gray","borderTopColor","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","padding","position","bottom","borderTopEndRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","tabBarLabelStyle","fontStyle","fontFamily","regular","fontWeight","fontSize","lineHeight","textAlign","tabBarActiveTintColor","pallete_deep","tabBarInactiveTintColor","dark","children","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref2","color","size","style","headerTitleStyle","large","medium","_ref3","_ref4","mapToStateProps","state","AgentReducer","BottomTabs"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/navigation/agent/Tabs.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Pressable, View, Dimensions, Platform } from \"react-native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\n\n// STACKS AND SCREENS\nimport HomeStack from \"./HomeStack\";\nimport ClientStack from \"./ClientStack\";\nimport RecordStack from \"./RecordStack\";\nimport { UserBottomTabNavigatorParamList, HomeScreenNavigationProp } from \"./types\";\nimport {\n    NativeBaseProvider,\n    extendTheme,\n    Image,\n    Skeleton\n} from \"native-base\";\n// Define the config\nconst config = {\n    useSystemColorMode: false,\n    initialColorMode: \"light\",\n};\n\n// extend the theme\nexport const theme = extendTheme({\n    colors: {\n        primary: {\n            100: '#52A56E',\n            200: '#C6C6C6'\n        }\n    },\n    config\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n    interface ICustomTheme extends MyThemeType { }\n}\n\n// CONSTANTS\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { OnAgentLogout, ApplicationState, AgentState } from \"../../redux\";\nimport { connect } from 'react-redux';\n\nconst Tab = createBottomTabNavigator<UserBottomTabNavigatorParamList>();\ninterface BottomStackProps {\n    agentReducer: AgentState;\n    OnAgentLogout: Function;\n}\nconst _BottomTabs: React.FC<BottomStackProps> = (props) => {\n    const { agentReducer, OnAgentLogout } = props;\n    const [imageUrl, setImageUrl] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [imageLoading, setImageLoading] = useState(false);\n    const height = Dimensions.get('screen').height;\n    const DEVICE_WIDTH = Dimensions.get('window').width;\n    let sizeMultiplier: number = 0.8;\n    let shortScreensMaxHeight = 680;\n    const navigation = useNavigation<HomeScreenNavigationProp>();\n\n    useEffect(() => {\n        let mounted = true;\n        (async () => {\n            if (!mounted) {\n                return;\n            }\n            try {\n                setLoading(true);\n                if (!mounted) {\n                    return;\n                }\n                let existingImage = agentReducer.agent.image;\n                setImageUrl(existingImage || '');\n                setImageLoading(true);\n                setLoading(false);\n            } catch (error) {\n                if (!mounted) {\n                    return;\n                }\n                setLoading(false);\n                return;\n            }\n\n        })();\n        return () => {\n            mounted = false;\n        };\n    }, []);\n\n    return (\n        <Tab.Navigator sceneContainerStyle={{ backgroundColor: 'white' }} screenOptions={{\n            headerShown: false,\n            tabBarStyle: {\n                minHeight: Platform.OS === 'android' ? 56 : '8%',\n                backgroundColor: COLORS.white,\n                borderLeftWidth: 0.2,\n                borderRightWidth: 0.2,\n                // paddingTop: height < shortScreensMaxHeight ? SIZES.base : SIZES.medium,\n                // paddingBottom: height < shortScreensMaxHeight ? SIZES.base : SIZES.large,\n                borderColor: COLORS.gray,\n                borderTopColor: COLORS.gray,\n                borderTopLeftRadius: 15,\n                borderTopRightRadius: 15,\n                borderTopStartRadius: 15,\n                padding: 10,\n                width: DEVICE_WIDTH,\n                position: 'absolute',\n                bottom: 0,\n                borderTopEndRadius: 15,\n                elevation: 5,\n                shadowColor: 'rgb(230, 235, 243)',\n                shadowOffset: { width: 0, height: -2 },\n                shadowOpacity: 0.5,\n                shadowRadius: 10\n            },\n            tabBarLabelStyle: {\n                fontStyle: 'normal',\n                fontFamily: FONTS.regular,\n                fontWeight: '400',\n                fontSize: 10,\n                lineHeight: 16,\n                textAlign: 'center'\n            },\n            tabBarActiveTintColor: COLORS.pallete_deep,\n            tabBarInactiveTintColor: COLORS.dark\n        }}>\n            <Tab.Screen\n                name=\"HomeStack\"\n                component={HomeStack}\n                options={{\n                    tabBarLabel: 'Home',\n                    tabBarActiveTintColor: COLORS.primary,\n                    tabBarIcon: ({ color, size }) => (\n                        <Ionicons name=\"ios-home-outline\" style={{ fontSize: size * sizeMultiplier, color: color }} />\n                    )\n                }}\n            />\n\n            <Tab.Screen\n                name=\"ClientStack\"\n                component={ClientStack}\n                options={{\n                    headerTitleStyle: { color: COLORS.dark, fontSize: SIZES.large, fontFamily: FONTS.medium },\n                    tabBarLabel: 'Clients',\n                    tabBarActiveTintColor: COLORS.pallete_deep,\n                    tabBarIcon: ({ color, size }) => (\n                        <Ionicons name=\"ios-people-outline\" style={{ fontSize: size * sizeMultiplier, color: color }} />\n                    )\n                }}\n            />\n\n            <Tab.Screen\n                name=\"RecordStack\"\n                component={RecordStack}\n                options={{\n                    headerTitleStyle: { color: COLORS.dark, fontSize: SIZES.large, fontFamily: FONTS.medium },\n                    tabBarLabel: 'Transactions',\n                    tabBarActiveTintColor: COLORS.pallete_deep,\n                    tabBarIcon: ({ color, size }) => (\n                        <Ionicons name=\"ios-list-outline\" style={{ fontSize: size * sizeMultiplier, color: color }} />\n                    )\n                }}\n            />\n\n\n            {/* <Tab.Screen\n                name=\"Chat\"\n                component={ChatScreen}\n                options={{\n                    tabBarLabel: 'Chat',\n                    tabBarActiveTintColor: COLORS.primary,\n                    tabBarIcon: ({ color, size }) => (\n                        <Ionicons name=\"ios-chatbox-ellipses-outline\" style={{ fontSize: size * sizeMultiplier, color: color }} />\n                    )\n                }}\n            /> */}\n        </Tab.Navigator>\n    );\n};\n\nconst mapToStateProps = (state: ApplicationState) => ({\n    agentReducer: state.AgentReducer\n});\n\nconst BottomTabs = connect(mapToStateProps, { OnAgentLogout })(_BottomTabs);\n\nexport default BottomTabs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}