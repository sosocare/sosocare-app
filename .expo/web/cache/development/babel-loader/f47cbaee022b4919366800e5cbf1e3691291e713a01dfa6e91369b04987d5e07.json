{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { formatCurrency } from \"react-native-format-currency\";\nimport Carousel from \"react-native-snap-carousel\";\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\nimport { ButtonWithTitle } from \"../../components/ButtonWithTitle\";\nimport { InsuranceListItem } from \"../../components/InsuranceListItem\";\nimport NoticeSheet from \"../../components/NoticeSheet\";\nimport ErrorSheet from \"../../components/ErrorSheet\";\nimport ContentSheet from \"../../components/ContentSheet\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../utils\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { connect } from \"react-redux\";\nimport { OnLoadInsurance, OnCancelInsurance } from \"../../redux\";\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\"\n};\nexport var theme = extendTheme({\n  colors: {\n    primary: {\n      100: \"#52A56E\",\n      200: \"#C6C6C6\"\n    }\n  },\n  config: config\n});\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\nvar deviceWidth = Dimensions.get(\"screen\").width;\nvar _InsuranceScreen = function _InsuranceScreen(props) {\n  var _insurance$pharmacy, _insurance$hospital, _insurance$pharmacy2, _insurance$hospital2;\n  var userReducer = props.userReducer,\n    insuranceReducer = props.insuranceReducer,\n    OnLoadInsurance = props.OnLoadInsurance,\n    OnCancelInsurance = props.OnCancelInsurance;\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    reload = _useState4[0],\n    setReload = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    insurance = _useState6[0],\n    setInsurance = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    plans = _useState8[0],\n    setPlans = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    confirmMessage = _useState12[0],\n    setConfirmMessage = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    hasError = _useState14[0],\n    setHasError = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    hasConfirm = _useState16[0],\n    setHasConfirm = _useState16[1];\n  var clearError = function clearError() {\n    setHasError(false);\n  };\n  var handleConfirm = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield OnCancelInsurance(insuranceReducer.insurance._id);\n      yield OnLoadInsurance(\"user\", userReducer.user.authToken);\n      setHasConfirm(false);\n      setReload(function (prev) {\n        return !prev;\n      });\n      setHasConfirm(false);\n    });\n    return function handleConfirm() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      try {\n        if (!mounted) {\n          return;\n        }\n        setLoading(true);\n        var existingUser = userReducer.user;\n        yield OnLoadInsurance(\"user\", existingUser.authToken);\n        var _insurance = insuranceReducer.insurance;\n        var _plans = insuranceReducer.plans;\n        if (!mounted) {\n          return;\n        }\n        setInsurance(_insurance);\n        setPlans(_plans);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        setHasError(true);\n        return;\n      }\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, [reload]);\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    refreshing = _useState18[0],\n    setRefreshing = _useState18[1];\n  var onRefresh = useCallback(function () {\n    var mounted = true;\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      setRefreshing(true);\n      setReload(function (prev) {\n        return !prev;\n      });\n      wait(2000).then(function () {\n        return setRefreshing(false);\n      });\n    })();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  var openPlan = function openPlan(id) {\n    var selectedPlan = plans.find(function (item) {\n      return item._id === id;\n    });\n    if (selectedPlan) {\n      navigation.navigate(\"Plan\", {\n        plan: selectedPlan\n      });\n    }\n  };\n  var cancelPlan = function cancelPlan() {\n    setConfirmMessage(`Are you sure you want to cancel your current ${insurance == null ? void 0 : insurance.plan}?`);\n    setHasConfirm(true);\n  };\n  return _jsxs(NativeBaseProvider, {\n    theme: theme,\n    children: [_jsx(SafeAreaView, {\n      style: {\n        backgroundColor: \"#fefefe\"\n      }\n    }), _jsx(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        colors: [COLORS.primary],\n        tintColor: COLORS.primary\n      }),\n      style: {\n        flex: 1,\n        backgroundColor: \"white\"\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(InsuranceDetails, {\n          insurance: insurance,\n          onManage: function onManage() {\n            return navigation.navigate(\"ManageInsurance\");\n          }\n        }), insurance && insurance._id && (_insurance$pharmacy = insurance.pharmacy) != null && _insurance$pharmacy.name ? _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.insuranceContainer), {}, {\n            borderWidth: 1,\n            borderColor: COLORS.fade,\n            backgroundColor: COLORS.white,\n            marginBottom: 30\n          }),\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.insuranceHeading), {}, {\n              color: COLORS.pallete_deep\n            }),\n            children: \"Primary Pharmacy\"\n          }), _jsx(View, {\n            style: {\n              width: \"100%\",\n              flexDirection: \"column\",\n              justifyContent: \"center\"\n            },\n            children: _jsxs(View, {\n              style: {\n                width: \"100%\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                marginTop: 20\n              },\n              children: [_jsxs(View, {\n                style: styles.transactionRecord,\n                children: [_jsx(Text, {\n                  style: styles.transactionRecordLeft,\n                  children: \"Name\"\n                }), _jsx(Text, {\n                  style: styles.transactionRecordRight,\n                  children: insurance == null ? void 0 : insurance.pharmacy.name\n                })]\n              }), _jsxs(View, {\n                style: styles.transactionRecord,\n                children: [_jsx(Text, {\n                  style: styles.transactionRecordLeft,\n                  children: \"Address\"\n                }), _jsx(Text, {\n                  style: styles.transactionRecordRight,\n                  children: insurance == null ? void 0 : insurance.pharmacy.address\n                })]\n              }), _jsxs(View, {\n                style: _objectSpread(_objectSpread({}, styles.transactionRecord), {}, {\n                  flexDirection: \"column\"\n                }),\n                children: [_jsx(View, {\n                  style: {\n                    width: \"100%\",\n                    marginBottom: 8,\n                    marginTop: 18\n                  },\n                  children: _jsx(ButtonWithTitle, {\n                    title: \"Change Pharmacy\",\n                    backgroundColor: \"transparent\",\n                    noBg: false,\n                    size: \"sm\",\n                    color: COLORS.dark,\n                    loading: false,\n                    onTap: function onTap() {\n                      return navigation.navigate(\"ManageInsurance\");\n                    },\n                    width: \"100%\",\n                    bordered: true\n                  })\n                }), _jsx(View, {\n                  style: {\n                    width: \"100%\"\n                  },\n                  children: _jsx(ButtonWithTitle, {\n                    title: \"Cancel Subscription\",\n                    backgroundColor: \"transparent\",\n                    noBg: false,\n                    size: \"sm\",\n                    color: COLORS.negative,\n                    loading: false,\n                    onTap: function onTap() {\n                      return cancelPlan();\n                    },\n                    width: \"100%\",\n                    bordered: true\n                  })\n                })]\n              })]\n            })\n          })]\n        }) : insurance != null && (_insurance$hospital = insurance.hospital) != null && _insurance$hospital.name ? _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.insuranceContainer), {}, {\n            borderWidth: 1,\n            borderColor: COLORS.fade,\n            backgroundColor: COLORS.white,\n            marginBottom: 30\n          }),\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.insuranceHeading), {}, {\n              color: COLORS.pallete_deep\n            }),\n            children: \"Primary Hospital\"\n          }), _jsx(View, {\n            style: {\n              width: \"100%\",\n              flexDirection: \"column\",\n              justifyContent: \"center\"\n            },\n            children: _jsxs(View, {\n              style: {\n                width: \"100%\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                marginTop: 20\n              },\n              children: [_jsxs(View, {\n                style: styles.transactionRecord,\n                children: [_jsx(Text, {\n                  style: styles.transactionRecordLeft,\n                  children: \"Name\"\n                }), _jsx(Text, {\n                  style: styles.transactionRecordRight,\n                  children: insurance == null ? void 0 : insurance.hospital.name\n                })]\n              }), _jsxs(View, {\n                style: styles.transactionRecord,\n                children: [_jsx(Text, {\n                  style: styles.transactionRecordLeft,\n                  children: \"Address\"\n                }), _jsx(Text, {\n                  style: styles.transactionRecordRight,\n                  children: insurance == null ? void 0 : insurance.hospital.address\n                })]\n              }), _jsxs(View, {\n                style: _objectSpread(_objectSpread({}, styles.transactionRecord), {}, {\n                  flexDirection: \"column\"\n                }),\n                children: [_jsx(View, {\n                  style: {\n                    width: \"100%\",\n                    marginBottom: 8,\n                    marginTop: 18\n                  },\n                  children: _jsx(ButtonWithTitle, {\n                    title: \"Change Hospital\",\n                    backgroundColor: \"transparent\",\n                    noBg: false,\n                    size: \"sm\",\n                    color: COLORS.dark,\n                    loading: false,\n                    onTap: function onTap() {\n                      return navigation.navigate(\"ManageInsurance\");\n                    },\n                    width: \"100%\",\n                    bordered: true\n                  })\n                }), _jsx(View, {\n                  style: {\n                    width: \"100%\"\n                  },\n                  children: _jsx(ButtonWithTitle, {\n                    title: \"Cancel Subscription\",\n                    backgroundColor: \"transparent\",\n                    noBg: false,\n                    size: \"sm\",\n                    color: COLORS.negative,\n                    loading: false,\n                    onTap: function onTap() {\n                      return cancelPlan();\n                    },\n                    width: \"100%\",\n                    bordered: true\n                  })\n                })]\n              })]\n            })\n          })]\n        }) : insurance && insurance._id && !(insurance != null && (_insurance$pharmacy2 = insurance.pharmacy) != null && _insurance$pharmacy2.name) && !(insurance != null && (_insurance$hospital2 = insurance.hospital) != null && _insurance$hospital2.name) ? _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.insuranceContainer), {}, {\n            borderWidth: 1,\n            borderColor: COLORS.fade,\n            backgroundColor: COLORS.white,\n            marginBottom: 30\n          }),\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.insuranceHeading), {}, {\n              color: COLORS.pallete_deep\n            }),\n            children: \"Primary Care Center\"\n          }), _jsx(View, {\n            style: {\n              width: \"100%\",\n              flexDirection: \"column\",\n              justifyContent: \"center\"\n            },\n            children: _jsxs(View, {\n              style: {\n                width: \"100%\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-start\",\n                marginTop: 20\n              },\n              children: [_jsxs(View, {\n                style: styles.transactionRecord,\n                children: [_jsx(Text, {\n                  style: styles.transactionRecordLeft,\n                  children: \"Name\"\n                }), _jsx(Text, {\n                  style: styles.transactionRecordRight,\n                  children: \"Not selected\"\n                })]\n              }), _jsxs(View, {\n                style: styles.transactionRecord,\n                children: [_jsx(Text, {\n                  style: styles.transactionRecordLeft,\n                  children: \"Address\"\n                }), _jsx(Text, {\n                  style: styles.transactionRecordRight,\n                  children: \"Not selected\"\n                })]\n              }), _jsxs(View, {\n                style: _objectSpread(_objectSpread({}, styles.transactionRecord), {}, {\n                  flexDirection: \"column\"\n                }),\n                children: [_jsx(View, {\n                  style: {\n                    width: \"100%\",\n                    marginBottom: 8,\n                    marginTop: 18\n                  },\n                  children: _jsx(ButtonWithTitle, {\n                    title: \"Select Care Center\",\n                    backgroundColor: \"transparent\",\n                    noBg: false,\n                    size: \"sm\",\n                    color: COLORS.dark,\n                    loading: false,\n                    onTap: function onTap() {\n                      return navigation.navigate(\"ManageInsurance\");\n                    },\n                    width: \"100%\",\n                    bordered: true\n                  })\n                }), _jsx(View, {\n                  style: {\n                    width: \"100%\"\n                  },\n                  children: _jsx(ButtonWithTitle, {\n                    title: \"Cancel Subscription\",\n                    backgroundColor: \"transparent\",\n                    noBg: false,\n                    size: \"sm\",\n                    color: COLORS.negative,\n                    loading: false,\n                    onTap: function onTap() {\n                      return cancelPlan();\n                    },\n                    width: \"100%\",\n                    bordered: true\n                  })\n                })]\n              })]\n            })\n          })]\n        }) : _jsx(_Fragment, {}), !insurance && plans && _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.insuranceContainer), {}, {\n            width: deviceWidth,\n            borderRadius: 0,\n            borderTopRightRadius: 0,\n            borderTopLeftRadius: 0,\n            borderWidth: 1,\n            borderColor: COLORS.fade,\n            backgroundColor: COLORS.white,\n            marginBottom: 40\n          }),\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 22,\n              width: \"100%\",\n              fontFamily: FONTS.semiBold,\n              color: COLORS.dark,\n              marginBottom: 10\n            },\n            children: \"Insurance Plans\"\n          }), _jsx(View, {\n            style: {\n              marginVertical: 10,\n              width: \"100%\",\n              alignItems: \"center\"\n            },\n            children: _jsx(InsurancePlans, {\n              plans: plans,\n              onNavigate: openPlan\n            })\n          })]\n        }), _jsx(InsuranceHistory, {\n          user: userReducer.user,\n          onViewHistory: function onViewHistory() {}\n        }), _jsx(ErrorSheet, {\n          error: error,\n          open: hasError,\n          closed: function closed() {}\n        }), _jsx(NoticeSheet, {\n          message: confirmMessage,\n          open: hasConfirm,\n          closed: function closed() {\n            return handleConfirm();\n          }\n        })]\n      })\n    }), _jsx(SafeAreaView, {\n      style: {\n        backgroundColor: \"#fefefe\"\n      }\n    })]\n  });\n};\nvar InsuranceDetails = function InsuranceDetails(_ref4) {\n  var insurance = _ref4.insurance,\n    onManage = _ref4.onManage;\n  return _jsxs(View, {\n    style: _objectSpread(_objectSpread({}, styles.insuranceContainer), {}, {\n      borderWidth: 1,\n      borderColor: COLORS.fade,\n      backgroundColor: COLORS.pallete_deep\n    }),\n    children: [_jsx(Text, {\n      style: styles.insuranceHeading,\n      children: \"Insurance status\"\n    }), insurance && insurance.status === \"active\" ? _jsxs(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(Text, {\n        style: _objectSpread(_objectSpread({}, styles.insurancePlan), {}, {\n          color: COLORS.pallete_cream\n        }),\n        children: insurance.plan\n      }), _jsxs(View, {\n        style: {\n          width: \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          marginBottom: 8\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16,\n            flexShrink: 1,\n            fontFamily: FONTS.medium,\n            color: COLORS.white,\n            marginRight: 3\n          },\n          children: \"Insurance Code:\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 16,\n            flexShrink: 1,\n            fontFamily: FONTS.medium,\n            color: COLORS.white\n          },\n          children: insurance.insurance_provider_id\n        })]\n      }), _jsxs(View, {\n        style: {\n          width: \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          marginBottom: 20\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 14,\n            fontFamily: FONTS.medium,\n            color: COLORS.white,\n            marginRight: 3\n          },\n          children: \"Expires:\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 14,\n            fontFamily: FONTS.medium,\n            color: COLORS.white\n          },\n          children: new Date(insurance.expiry_date).toDateString()\n        })]\n      })]\n    }) : insurance && insurance.status === \"enrolled\" ? _jsxs(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(Text, {\n        style: _objectSpread(_objectSpread({}, styles.insurancePlan), {}, {\n          color: COLORS.pallete_cream\n        }),\n        children: insurance.plan\n      }), _jsxs(View, {\n        style: {\n          width: \"100%\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          marginBottom: 8\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16,\n            flexShrink: 1,\n            fontFamily: FONTS.medium,\n            color: COLORS.white,\n            marginRight: 3\n          },\n          children: \"Status:\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 16,\n            flexShrink: 1,\n            fontFamily: FONTS.medium,\n            color: COLORS.white\n          },\n          children: \"Pending confirmation\"\n        })]\n      })]\n    }) : _jsx(View, {\n      style: {\n        width: \"100%\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        marginBottom: 20\n      },\n      children: _jsx(Text, {\n        style: {\n          width: \"100%\",\n          textAlign: \"center\",\n          fontSize: 14,\n          fontFamily: FONTS.semiBold,\n          color: COLORS.pallete_cream\n        },\n        children: \"No active Insurance subscriptions. Select an Insurance plan Below to continue.\"\n      })\n    })]\n  });\n};\nvar planDetails = {\n  0: [{\n    items: \"Telemedicine\"\n  }, {\n    items: \"Malaria Tests\"\n  }, {\n    items: \"Malaria Drugs\"\n  }, {\n    items: \"Typhoid Drugs\"\n  }, {\n    items: \"Heart Check\"\n  }, {\n    items: \"Diabetes Check\"\n  }, {\n    items: \"Cough & Cattarh Drugs\"\n  }, {\n    items: \"Pain Killer Drugs\"\n  }],\n  1: [{\n    items: \"Basic Plan Benefits\"\n  }, {\n    items: \"Minor Surgery\"\n  }, {\n    items: \"Hospital Card\"\n  }, {\n    items: \"Out-Patient Care\"\n  }],\n  2: [{\n    items: \"Basic + MicroInsurance Benefits\"\n  }, {\n    items: \"Hospitalizations\"\n  }]\n};\nexport var InsurancePlans = function (_React$Component) {\n  _inherits(InsurancePlans, _React$Component);\n  var _super = _createSuper(InsurancePlans);\n  function InsurancePlans(props) {\n    var _this;\n    _classCallCheck(this, InsurancePlans);\n    _this = _super.call(this, props);\n    _this._renderItem = function (_ref5) {\n      var item = _ref5.item,\n        index = _ref5.index;\n      var backgroundImage = BackgroundImageService.GetImage(item.name);\n      var _formatCurrency = formatCurrency({\n          amount: item.price / 100,\n          code: \"USD\"\n        }),\n        _formatCurrency2 = _slicedToArray(_formatCurrency, 3),\n        incomeValueFormattedWithSymbol = _formatCurrency2[0],\n        incomeValueFormattedWithoutSymbol = _formatCurrency2[1],\n        incomeSymbol = _formatCurrency2[2];\n      return _jsxs(View, {\n        style: {\n          width: \"100%\",\n          borderRadius: 15,\n          overflow: \"hidden\",\n          borderWidth: 1,\n          borderColor: item.name === \"Sosocare Gold Plan\" ? COLORS.pallete_cream : COLORS.fade,\n          marginVertical: 10,\n          backgroundColor: item.name === \"Sosocare Gold Plan\" ? COLORS.pallete_cream : item.name === \"Sosocare Silver Plan\" ? COLORS.pallete_white : COLORS.white\n        },\n        children: [_jsx(Image, {\n          source: backgroundImage,\n          style: {\n            width: \"100%\",\n            borderTopLeftRadius: 13,\n            borderTopRightRadius: 8\n          }\n        }), _jsxs(View, {\n          style: {\n            paddingHorizontal: 14,\n            paddingVertical: 10\n          },\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.insurancePlan), {}, {\n              color: COLORS.pallete_deep,\n              textTransform: \"uppercase\",\n              flexShrink: 1\n            }),\n            children: item.ussd_name\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\"\n            },\n            children: _jsxs(Text, {\n              style: {\n                fontSize: 18,\n                fontFamily: FONTS.bold,\n                color: COLORS.pallete_deep\n              },\n              children: [\"Price: \", \"\\u20A6\", incomeValueFormattedWithoutSymbol]\n            })\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\"\n            },\n            children: _jsxs(Text, {\n              style: {\n                fontSize: 18,\n                fontFamily: FONTS.bold,\n                color: COLORS.pallete_deep\n              },\n              children: [\"Waste Cost: \", item.waste_price / 1000, \" \", \"Kg\"]\n            })\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              marginTop: 24,\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\"\n            },\n            children: _jsx(ButtonWithTitle, {\n              size: \"sm\",\n              title: \"View\",\n              width: \"100%\",\n              onTap: function onTap() {\n                return _this.props.onNavigate(item._id);\n              },\n              backgroundColor: \"transparent\",\n              color: COLORS.pallete_deep,\n              bordered: true,\n              loading: false\n            })\n          })]\n        })]\n      }, item._id);\n    };\n    _this.state = {\n      activeIndex: 0,\n      carouselItems: props.plans\n    };\n    return _this;\n  }\n  _createClass(InsurancePlans, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return _jsx(Carousel, {\n        layout: \"default\",\n        vertical: false,\n        data: this.state.carouselItems,\n        renderItem: this._renderItem,\n        sliderWidth: deviceWidth,\n        itemWidth: deviceWidth * 0.8,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this2.setState({\n            activeIndex: index\n          });\n        }\n      });\n    }\n  }]);\n  return InsurancePlans;\n}(React.Component);\nexport var OnboardingInsurancePlans = function (_React$Component2) {\n  _inherits(OnboardingInsurancePlans, _React$Component2);\n  var _super2 = _createSuper(OnboardingInsurancePlans);\n  function OnboardingInsurancePlans(props) {\n    var _this3;\n    _classCallCheck(this, OnboardingInsurancePlans);\n    _this3 = _super2.call(this, props);\n    _this3._renderItem = function (_ref6) {\n      var item = _ref6.item,\n        index = _ref6.index;\n      var backgroundImage = BackgroundImageService.GetImage(item.name);\n      var _formatCurrency3 = formatCurrency({\n          amount: item.price / 100,\n          code: \"USD\"\n        }),\n        _formatCurrency4 = _slicedToArray(_formatCurrency3, 3),\n        incomeValueFormattedWithSymbol = _formatCurrency4[0],\n        incomeValueFormattedWithoutSymbol = _formatCurrency4[1],\n        incomeSymbol = _formatCurrency4[2];\n      return _jsxs(View, {\n        style: {\n          width: \"100%\",\n          borderRadius: 15,\n          overflow: \"hidden\",\n          borderWidth: 1,\n          borderColor: item.name === \"Sosocare Gold Plan\" ? COLORS.pallete_cream : COLORS.fade,\n          marginVertical: 10,\n          backgroundColor: item.name === \"Sosocare Gold Plan\" ? COLORS.pallete_cream : item.name === \"Sosocare Silver Plan\" ? COLORS.pallete_white : COLORS.white\n        },\n        children: [_jsx(Image, {\n          source: backgroundImage,\n          style: {\n            width: \"100%\",\n            borderTopLeftRadius: 13,\n            borderTopRightRadius: 8\n          }\n        }), _jsxs(View, {\n          style: {\n            paddingHorizontal: 14,\n            paddingVertical: 10,\n            display: \"flex\"\n          },\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.insurancePlan), {}, {\n              color: COLORS.pallete_deep,\n              textTransform: \"uppercase\",\n              flexShrink: 1\n            }),\n            children: item.name\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\"\n            },\n            children: _jsxs(Text, {\n              style: {\n                fontSize: 18,\n                fontFamily: FONTS.bold,\n                color: COLORS.pallete_deep\n              },\n              children: [\"Price per: \", \"\\u20A6\", incomeValueFormattedWithoutSymbol]\n            })\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\",\n              marginBottom: 12\n            },\n            children: _jsxs(Text, {\n              style: {\n                fontSize: 18,\n                fontFamily: FONTS.bold,\n                color: COLORS.pallete_deep\n              },\n              children: [\"Waste Cost: \", item.waste_price / 1000, \" \", \"Kg\"]\n            })\n          }), _jsx(View, {\n            style: {\n              minHeight: 300\n            },\n            children: planDetails[index].map(function (detail) {\n              return _jsxs(View, {\n                style: {\n                  width: \"100%\",\n                  marginBottom: 10,\n                  flexDirection: \"row\",\n                  alignItems: \"flex-start\"\n                },\n                children: [_jsx(View, {\n                  style: {\n                    borderRadius: 6,\n                    backgroundColor: COLORS.fade,\n                    marginRight: 10,\n                    padding: 4,\n                    width: 28\n                  },\n                  children: _jsx(MaterialIcons, {\n                    name: \"check-bold\",\n                    style: {\n                      fontSize: 20\n                    },\n                    color: COLORS.primary\n                  })\n                }), _jsx(View, {\n                  style: {\n                    flexDirection: \"row\",\n                    flex: 1,\n                    width: \"90%\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\"\n                  },\n                  children: _jsx(Text, {\n                    style: {\n                      fontSize: 16,\n                      flex: 5,\n                      flexShrink: 1,\n                      overflow: \"hidden\",\n                      fontFamily: FONTS.medium,\n                      color: COLORS.gray\n                    },\n                    children: detail.items\n                  })\n                })]\n              }, detail.items);\n            })\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              marginTop: 24,\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\"\n            },\n            children: _jsx(ButtonWithTitle, {\n              size: \"sm\",\n              title: \"Proceed\",\n              width: \"100%\",\n              onTap: function onTap() {\n                return _this3.props.onNavigate(item._id);\n              },\n              backgroundColor: \"transparent\",\n              color: COLORS.pallete_deep,\n              bordered: true,\n              loading: false\n            })\n          })]\n        })]\n      }, item._id);\n    };\n    _this3.state = {\n      activeIndex: 0,\n      carouselItems: props.plans\n    };\n    return _this3;\n  }\n  _createClass(OnboardingInsurancePlans, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      return _jsx(Carousel, {\n        layout: \"default\",\n        vertical: false,\n        data: this.state.carouselItems,\n        renderItem: this._renderItem,\n        sliderWidth: deviceWidth,\n        itemWidth: deviceWidth * 0.8,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this4.setState({\n            activeIndex: index\n          });\n        }\n      });\n    }\n  }]);\n  return OnboardingInsurancePlans;\n}(React.Component);\nvar InsuranceHistory = function InsuranceHistory(_ref7) {\n  var onViewHistory = _ref7.onViewHistory,\n    user = _ref7.user;\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    loading = _useState20[0],\n    setLoading = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    error = _useState22[0],\n    setError = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    hasError = _useState24[0],\n    setHasError = _useState24[1];\n  var _useState25 = useState(),\n    _useState26 = _slicedToArray(_useState25, 2),\n    history = _useState26[0],\n    setHistory = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    showContent = _useState28[0],\n    setShowContent = _useState28[1];\n  var _useState29 = useState(),\n    _useState30 = _slicedToArray(_useState29, 2),\n    activeItem = _useState30[0],\n    setActiveItem = _useState30[1];\n  var closeContent = function closeContent() {\n    setShowContent(false);\n    setLoading(false);\n  };\n  var clearError = function clearError() {\n    setHasError(false);\n    setLoading(false);\n  };\n  useEffect(function () {\n    var mounted = true;\n    var source = axios.CancelToken.source();\n    _asyncToGenerator(function* () {\n      if (!mounted) {\n        return;\n      }\n      try {\n        setLoading(true);\n        var response = yield axios.get(`${BASE_URL}user/insurance/latest`, {\n          cancelToken: source.token,\n          headers: {\n            Authorization: `Bearer ${user.authToken}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody[\"status\"] === \"error\") {\n          setLoading(false);\n          setError(\"Unable to load transations\");\n          setHasError(true);\n          return {\n            error: resBody[\"message\"]\n          };\n        } else {\n          if (!mounted) {\n            return;\n          }\n          setHistory(resBody[\"insurances\"]);\n          setLoading(false);\n          return {\n            success: resBody[\"status\"]\n          };\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(\"Unable to load Insurance History\");\n        setHasError(true);\n        return;\n      }\n    })();\n    return function () {\n      source.cancel();\n      mounted = false;\n    };\n  }, []);\n  var showInsurance = function () {\n    var _ref9 = _asyncToGenerator(function* (id) {\n      if (history) {\n        try {\n          setLoading(true);\n          var currentItem = history.find(function (item) {\n            return item._id === id;\n          });\n          if (currentItem) {\n            setActiveItem(currentItem);\n            setShowContent(true);\n          }\n        } catch (error) {\n          setLoading(false);\n          setError(\"Error kindly retry\");\n          setHasError(true);\n        }\n      }\n    });\n    return function showInsurance(_x) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var InsuranceContent = function InsuranceContent() {\n    if (activeItem) {\n      return _jsxs(View, {\n        style: {\n          width: \"100%\",\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-start\",\n          paddingHorizontal: 12\n        },\n        children: [_jsx(Text, {\n          style: _objectSpread(_objectSpread({}, styles.transactionHeading), {}, {\n            color: COLORS.pallete_deep\n          }),\n          children: \"Insurance Details\"\n        }), _jsxs(View, {\n          style: {\n            width: \"100%\",\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-start\",\n            marginTop: 20\n          },\n          children: [_jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Activation Date\"\n            }), _jsx(Text, {\n              style: styles.transactionRecordRight,\n              children: new Date(activeItem.activation_date).toDateString()\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Expiry Date\"\n            }), _jsx(Text, {\n              style: styles.transactionRecordRight,\n              children: new Date(activeItem.expiry_date).toDateString()\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Reference\"\n            }), _jsx(Text, {\n              style: styles.transactionRecordRight,\n              children: activeItem.payment_ref\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Plan\"\n            }), _jsx(Text, {\n              style: _objectSpread(_objectSpread({}, styles.transactionRecordRight), {}, {\n                textTransform: \"capitalize\"\n              }),\n              children: activeItem.plan\n            })]\n          }), _jsxs(View, {\n            style: styles.transactionRecord,\n            children: [_jsx(Text, {\n              style: styles.transactionRecordLeft,\n              children: \"Status\"\n            }), _jsx(View, {\n              style: [styles.transactionRecordRight, {\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                flexDirection: \"row\"\n              }],\n              children: _jsx(Text, {\n                style: [{\n                  maxWidth: 50\n                }, activeItem.status === \"active\" || activeItem.status === \"renewed\" ? {\n                  color: COLORS.pallete_white,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  borderRadius: 10,\n                  fontSize: SIZES.base,\n                  backgroundColor: COLORS.pallete_deep,\n                  padding: 6\n                } : activeItem.status === \"failed\" ? {\n                  color: COLORS.pallete_white,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  borderRadius: 10,\n                  fontSize: SIZES.base,\n                  backgroundColor: COLORS.negative,\n                  padding: 6\n                } : {\n                  color: COLORS.pallete_white,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  borderRadius: 10,\n                  fontSize: SIZES.base,\n                  backgroundColor: COLORS.dark,\n                  padding: 6\n                }],\n                children: activeItem.status\n              })\n            })]\n          })]\n        })]\n      });\n    }\n    return _jsx(_Fragment, {});\n  };\n  if ((history == null ? void 0 : history.length) === undefined || (history == null ? void 0 : history.length) < 1) {\n    return _jsx(_Fragment, {});\n  } else {\n    return _jsxs(View, {\n      style: _objectSpread(_objectSpread({}, styles.insuranceContainer), {}, {\n        borderWidth: 1,\n        borderColor: COLORS.fade,\n        backgroundColor: COLORS.white,\n        marginBottom: 100\n      }),\n      children: [_jsx(Text, {\n        style: _objectSpread(_objectSpread({}, styles.insuranceHeading), {}, {\n          color: COLORS.pallete_deep\n        }),\n        children: \"Insurance History\"\n      }), _jsxs(View, {\n        style: {\n          width: \"100%\",\n          flexDirection: \"column\",\n          justifyContent: \"center\"\n        },\n        children: [_jsx(View, {\n          style: {\n            width: \"100%\",\n            marginTop: 0\n          },\n          children: history && history.map(function (item) {\n            return _jsx(InsuranceListItem, {\n              detail: item.plan,\n              date: item.activation_date,\n              plan: item.plan,\n              backgroundColor: COLORS.pallete_white,\n              tint: COLORS.white,\n              color: COLORS.dark,\n              loading: false,\n              id: item._id,\n              onTap: showInsurance\n            }, item._id);\n          })\n        }), _jsx(ContentSheet, {\n          content: _jsx(InsuranceContent, {}),\n          open: showContent,\n          closed: closeContent\n        })]\n      }), _jsx(ErrorSheet, {\n        error: error,\n        open: hasError,\n        closed: function closed() {}\n      })]\n    });\n  }\n};\nvar BackgroundImageService = _createClass(function BackgroundImageService() {\n  _classCallCheck(this, BackgroundImageService);\n});\nBackgroundImageService.images = [{\n  plan: \"Sosocare Basic Plan\",\n  img: require(\"../../../assets/family_package.png\")\n}, {\n  plan: \"Sosocare Silver Plan\",\n  img: require(\"../../../assets/silver_package.png\")\n}, {\n  plan: \"Sosocare Gold Plan\",\n  img: require(\"../../../assets/gold_package.png\")\n}];\nBackgroundImageService.GetImage = function (plan) {\n  var found = BackgroundImageService.images.find(function (e) {\n    return e.plan === plan;\n  });\n  return found ? found.img : null;\n};\nvar styles = StyleSheet.create({\n  transactionHeading: {\n    fontSize: SIZES.large,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18,\n    width: \"100%\"\n  },\n  transactionRecord: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.fade,\n    paddingVertical: 10,\n    paddingHorizontal: 6\n  },\n  transactionRecordLeft: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.pallete_deep,\n    flex: 2\n  },\n  transactionRecordRight: {\n    flex: 5,\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.medium,\n    color: COLORS.gray,\n    flexShrink: 1\n  },\n  insuranceContainer: {\n    width: \"100%\",\n    backgroundColor: COLORS.primary,\n    borderRadius: 15,\n    paddingTop: 30,\n    paddingBottom: 10,\n    marginBottom: 20,\n    paddingHorizontal: 18,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    borderTopEndRadius: 15,\n    elevation: 5,\n    shadowColor: \"rgb(230, 235, 243)\",\n    shadowOffset: {\n      width: 4,\n      height: 12\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10\n  },\n  insuranceHeading: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18\n  },\n  insurancePlan: {\n    fontSize: SIZES.extraLarge,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 6\n  },\n  container: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fefefe\",\n    paddingHorizontal: 24,\n    marginTop: 30\n  },\n  imageBg: {\n    resizeMode: \"cover\",\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: \"center\"\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: \"center\"\n  }\n});\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    userReducer: state.UserReducer,\n    insuranceReducer: state.InsuranceReducer\n  };\n};\nvar InsuranceScreen = connect(mapToStateProps, {\n  OnLoadInsurance: OnLoadInsurance,\n  OnCancelInsurance: OnCancelInsurance\n})(_InsuranceScreen);\nexport default InsuranceScreen;","map":{"version":3,"names":["React","useCallback","useEffect","useState","formatCurrency","Carousel","COLORS","SIZES","FONTS","ButtonWithTitle","InsuranceListItem","NoticeSheet","ErrorSheet","ContentSheet","MaterialIcons","axios","BASE_URL","useNavigation","connect","OnLoadInsurance","OnCancelInsurance","NativeBaseProvider","extendTheme","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","config","useSystemColorMode","initialColorMode","theme","colors","primary","wait","timeout","Promise","resolve","setTimeout","deviceWidth","Dimensions","get","width","_InsuranceScreen","props","_insurance$pharmacy","_insurance$hospital","_insurance$pharmacy2","_insurance$hospital2","userReducer","insuranceReducer","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","reload","setReload","_useState5","_useState6","insurance","setInsurance","_useState7","_useState8","plans","setPlans","_useState9","_useState10","error","setError","_useState11","_useState12","confirmMessage","setConfirmMessage","_useState13","_useState14","hasError","setHasError","_useState15","_useState16","hasConfirm","setHasConfirm","clearError","handleConfirm","_ref","_asyncToGenerator","_id","user","authToken","prev","apply","arguments","mounted","existingUser","message","_useState17","_useState18","refreshing","setRefreshing","onRefresh","then","openPlan","id","selectedPlan","find","item","navigate","plan","cancelPlan","children","SafeAreaView","style","backgroundColor","ScrollView","refreshControl","RefreshControl","tintColor","flex","View","styles","container","InsuranceDetails","onManage","pharmacy","name","_objectSpread","insuranceContainer","borderWidth","borderColor","fade","white","marginBottom","Text","insuranceHeading","color","pallete_deep","flexDirection","justifyContent","alignItems","marginTop","transactionRecord","transactionRecordLeft","transactionRecordRight","address","title","noBg","size","dark","onTap","bordered","negative","hospital","borderRadius","borderTopRightRadius","borderTopLeftRadius","fontSize","fontFamily","semiBold","marginVertical","InsurancePlans","onNavigate","InsuranceHistory","onViewHistory","open","closed","_ref4","status","insurancePlan","pallete_cream","flexShrink","medium","marginRight","insurance_provider_id","Date","expiry_date","toDateString","textAlign","planDetails","items","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_renderItem","_ref5","index","backgroundImage","BackgroundImageService","GetImage","_formatCurrency","amount","price","code","_formatCurrency2","incomeValueFormattedWithSymbol","incomeValueFormattedWithoutSymbol","incomeSymbol","overflow","pallete_white","Image","source","paddingHorizontal","paddingVertical","textTransform","ussd_name","bold","waste_price","state","activeIndex","carouselItems","_createClass","key","value","render","_this2","layout","vertical","data","renderItem","sliderWidth","itemWidth","onSnapToItem","setState","Component","OnboardingInsurancePlans","_React$Component2","_super2","_this3","_ref6","_formatCurrency3","_formatCurrency4","display","minHeight","map","detail","padding","gray","_this4","_ref7","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","history","setHistory","_useState27","_useState28","showContent","setShowContent","_useState29","_useState30","activeItem","setActiveItem","closeContent","CancelToken","response","cancelToken","token","headers","Authorization","resBody","success","cancel","showInsurance","_ref9","currentItem","_x","InsuranceContent","transactionHeading","activation_date","payment_ref","maxWidth","base","length","undefined","date","tint","content","images","img","require","found","e","StyleSheet","create","large","borderBottomWidth","borderBottomColor","paddingTop","paddingBottom","borderTopEndRadius","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","extraLarge","imageBg","resizeMode","headingText","heading","font","errorText","subHeadingText","mapToStateProps","UserReducer","InsuranceReducer","InsuranceScreen"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/screens/user/InsuranceScreen.tsx"],"sourcesContent":["import {\n  View,\n  Text,\n  ScrollView,\n  SafeAreaView,\n  StyleSheet,\n  RefreshControl,\n  Image,\n  Dimensions,\n} from \"react-native\";\nimport React, { useRef, useCallback, useEffect, useState } from \"react\";\nimport { formatCurrency } from \"react-native-format-currency\";\nimport Carousel from \"react-native-snap-carousel\";\n\nimport { COLORS, SIZES, FONTS } from \"../../constants\";\n\nimport { ButtonWithTitle } from \"../../components/ButtonWithTitle\";\nimport { InsuranceListItem } from \"../../components/InsuranceListItem\";\nimport NoticeSheet from \"../../components/NoticeSheet\";\nimport ErrorSheet from \"../../components/ErrorSheet\";\nimport SuccessSheet from \"../../components/SuccessSheet\";\nimport ContentSheet from \"../../components/ContentSheet\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../utils\";\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport { InsuranceScreenNavigationProp } from \"../../navigation/user/types\";\n\nimport { connect } from \"react-redux\";\nimport {\n  ApplicationState,\n  UserState,\n  InsuranceState,\n  PlanModel,\n  InsuranceModel,\n  OnLoadInsurance,\n  OnCancelInsurance,\n} from \"../../redux\";\n\nimport { NativeBaseProvider, extendTheme } from \"native-base\";\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"light\",\n};\n\n// extend the theme\nexport const theme = extendTheme({\n  colors: {\n    primary: {\n      100: \"#52A56E\",\n      200: \"#C6C6C6\",\n    },\n  },\n  config,\n});\ntype MyThemeType = typeof theme;\ndeclare module \"native-base\" {\n  interface ICustomTheme extends MyThemeType {}\n}\n\ninterface InsuranceScreenProps {\n  userReducer: UserState;\n  insuranceReducer: InsuranceState;\n  OnLoadInsurance: Function;\n  OnCancelInsurance: Function;\n}\n\nconst wait = (timeout: number) => {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n};\nconst deviceWidth = Dimensions.get(\"screen\").width;\nconst _InsuranceScreen: React.FC<InsuranceScreenProps> = (props) => {\n  const { userReducer, insuranceReducer, OnLoadInsurance, OnCancelInsurance } =\n    props;\n  const navigation = useNavigation<InsuranceScreenNavigationProp>();\n\n  const [loading, setLoading] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  const [insurance, setInsurance] = useState<InsuranceModel>();\n  const [plans, setPlans] = useState<Array<PlanModel>>();\n  const [error, setError] = useState(\"\");\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n  const [hasConfirm, setHasConfirm] = useState(false);\n\n  const clearError = () => {\n    setHasError(false);\n  };\n  const handleConfirm = async () => {\n    // do sth\n    await OnCancelInsurance(insuranceReducer.insurance._id);\n    await OnLoadInsurance(\"user\", userReducer.user.authToken);\n    setHasConfirm(false);\n    setReload((prev) => !prev);\n    setHasConfirm(false);\n  };\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        if (!mounted) {\n          return;\n        }\n        setLoading(true);\n\n        let existingUser = userReducer.user;\n        await OnLoadInsurance(\"user\", existingUser.authToken);\n        let insurance = insuranceReducer.insurance;\n        let plans = insuranceReducer.plans;\n        if (!mounted) {\n          return;\n        }\n        setInsurance(insurance);\n        setPlans(plans);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        setHasError(true);\n        return;\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, [reload]);\n  const [refreshing, setRefreshing] = useState(false);\n  const onRefresh = useCallback(() => {\n    let mounted = true;\n    (async () => {\n      if (!mounted) {\n        return;\n      }\n      setRefreshing(true);\n      setReload((prev) => !prev);\n      wait(2000).then(() => setRefreshing(false));\n    })();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const openPlan = (id) => {\n    const selectedPlan = plans!.find((item) => item._id === id);\n    if (selectedPlan) {\n      navigation.navigate(\"Plan\", { plan: selectedPlan });\n    }\n  };\n\n  const cancelPlan = () => {\n    setConfirmMessage(\n      `Are you sure you want to cancel your current ${insurance?.plan}?`\n    );\n    setHasConfirm(true);\n  };\n\n  return (\n    <NativeBaseProvider theme={theme}>\n      <SafeAreaView style={{ backgroundColor: \"#fefefe\" }} />\n      <ScrollView\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={onRefresh}\n            colors={[COLORS.primary]}\n            tintColor={COLORS.primary}\n          />\n        }\n        style={{ flex: 1, backgroundColor: \"white\" }}\n      >\n        <View style={styles.container}>\n          <InsuranceDetails\n            insurance={insurance}\n            onManage={() => navigation.navigate(\"ManageInsurance\")}\n          />\n\n          {insurance && insurance._id && insurance.pharmacy?.name ? (\n            <View\n              style={{\n                ...styles.insuranceContainer,\n                borderWidth: 1,\n                borderColor: COLORS.fade,\n                backgroundColor: COLORS.white,\n                marginBottom: 30,\n              }}\n            >\n              <Text\n                style={{\n                  ...styles.insuranceHeading,\n                  color: COLORS.pallete_deep,\n                }}\n              >\n                Primary Pharmacy\n              </Text>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"100%\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"flex-start\",\n                    marginTop: 20,\n                  }}\n                >\n                  <View style={styles.transactionRecord}>\n                    <Text style={styles.transactionRecordLeft}>Name</Text>\n                    <Text style={styles.transactionRecordRight}>\n                      {insurance?.pharmacy.name}\n                    </Text>\n                  </View>\n                  <View style={styles.transactionRecord}>\n                    <Text style={styles.transactionRecordLeft}>Address</Text>\n                    <Text style={styles.transactionRecordRight}>\n                      {insurance?.pharmacy.address}\n                    </Text>\n                  </View>\n                  <View\n                    style={{\n                      ...styles.transactionRecord,\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <View\n                      style={{ width: \"100%\", marginBottom: 8, marginTop: 18 }}\n                    >\n                      <ButtonWithTitle\n                        title=\"Change Pharmacy\"\n                        backgroundColor=\"transparent\"\n                        noBg={false}\n                        size=\"sm\"\n                        color={COLORS.dark}\n                        loading={false}\n                        onTap={() => navigation.navigate(\"ManageInsurance\")}\n                        width={\"100%\"}\n                        bordered\n                      />\n                    </View>\n                    <View style={{ width: \"100%\" }}>\n                      <ButtonWithTitle\n                        title=\"Cancel Subscription\"\n                        backgroundColor=\"transparent\"\n                        noBg={false}\n                        size=\"sm\"\n                        color={COLORS.negative}\n                        loading={false}\n                        onTap={() => cancelPlan()}\n                        width={\"100%\"}\n                        bordered\n                      />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          ) : insurance?.hospital?.name ? (\n            <View\n              style={{\n                ...styles.insuranceContainer,\n                borderWidth: 1,\n                borderColor: COLORS.fade,\n                backgroundColor: COLORS.white,\n                marginBottom: 30,\n              }}\n            >\n              <Text\n                style={{\n                  ...styles.insuranceHeading,\n                  color: COLORS.pallete_deep,\n                }}\n              >\n                Primary Hospital\n              </Text>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"100%\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"flex-start\",\n                    marginTop: 20,\n                  }}\n                >\n                  <View style={styles.transactionRecord}>\n                    <Text style={styles.transactionRecordLeft}>Name</Text>\n                    <Text style={styles.transactionRecordRight}>\n                      {insurance?.hospital.name}\n                    </Text>\n                  </View>\n                  <View style={styles.transactionRecord}>\n                    <Text style={styles.transactionRecordLeft}>Address</Text>\n                    <Text style={styles.transactionRecordRight}>\n                      {insurance?.hospital.address}\n                    </Text>\n                  </View>\n                  <View\n                    style={{\n                      ...styles.transactionRecord,\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <View\n                      style={{ width: \"100%\", marginBottom: 8, marginTop: 18 }}\n                    >\n                      <ButtonWithTitle\n                        title=\"Change Hospital\"\n                        backgroundColor=\"transparent\"\n                        noBg={false}\n                        size=\"sm\"\n                        color={COLORS.dark}\n                        loading={false}\n                        onTap={() => navigation.navigate(\"ManageInsurance\")}\n                        width={\"100%\"}\n                        bordered\n                      />\n                    </View>\n                    <View style={{ width: \"100%\" }}>\n                      <ButtonWithTitle\n                        title=\"Cancel Subscription\"\n                        backgroundColor=\"transparent\"\n                        noBg={false}\n                        size=\"sm\"\n                        color={COLORS.negative}\n                        loading={false}\n                        onTap={() => cancelPlan()}\n                        width={\"100%\"}\n                        bordered\n                      />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          ) : insurance &&\n            insurance._id &&\n            !insurance?.pharmacy?.name &&\n            !insurance?.hospital?.name ? (\n            <View\n              style={{\n                ...styles.insuranceContainer,\n                borderWidth: 1,\n                borderColor: COLORS.fade,\n                backgroundColor: COLORS.white,\n                marginBottom: 30,\n              }}\n            >\n              <Text\n                style={{\n                  ...styles.insuranceHeading,\n                  color: COLORS.pallete_deep,\n                }}\n              >\n                Primary Care Center\n              </Text>\n              <View\n                style={{\n                  width: \"100%\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <View\n                  style={{\n                    width: \"100%\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"flex-start\",\n                    marginTop: 20,\n                  }}\n                >\n                  <View style={styles.transactionRecord}>\n                    <Text style={styles.transactionRecordLeft}>Name</Text>\n                    <Text style={styles.transactionRecordRight}>\n                      Not selected\n                    </Text>\n                  </View>\n                  <View style={styles.transactionRecord}>\n                    <Text style={styles.transactionRecordLeft}>Address</Text>\n                    <Text style={styles.transactionRecordRight}>\n                      Not selected\n                    </Text>\n                  </View>\n                  <View\n                    style={{\n                      ...styles.transactionRecord,\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <View\n                      style={{ width: \"100%\", marginBottom: 8, marginTop: 18 }}\n                    >\n                      <ButtonWithTitle\n                        title=\"Select Care Center\"\n                        backgroundColor=\"transparent\"\n                        noBg={false}\n                        size=\"sm\"\n                        color={COLORS.dark}\n                        loading={false}\n                        onTap={() => navigation.navigate(\"ManageInsurance\")}\n                        width={\"100%\"}\n                        bordered\n                      />\n                    </View>\n                    <View style={{ width: \"100%\" }}>\n                      <ButtonWithTitle\n                        title=\"Cancel Subscription\"\n                        backgroundColor=\"transparent\"\n                        noBg={false}\n                        size=\"sm\"\n                        color={COLORS.negative}\n                        loading={false}\n                        onTap={() => cancelPlan()}\n                        width={\"100%\"}\n                        bordered\n                      />\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </View>\n          ) : (\n            <></>\n          )}\n          {!insurance && plans && (\n            <View\n              style={{\n                ...styles.insuranceContainer,\n                width: deviceWidth,\n                borderRadius: 0,\n                borderTopRightRadius: 0,\n                borderTopLeftRadius: 0,\n                borderWidth: 1,\n                borderColor: COLORS.fade,\n                backgroundColor: COLORS.white,\n                marginBottom: 40,\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 22,\n                  width: \"100%\",\n                  fontFamily: FONTS.semiBold,\n                  color: COLORS.dark,\n                  marginBottom: 10,\n                }}\n              >\n                Insurance Plans\n              </Text>\n\n              <View\n                style={{\n                  marginVertical: 10,\n                  width: \"100%\",\n                  alignItems: \"center\",\n                }}\n              >\n                <InsurancePlans plans={plans} onNavigate={openPlan} />\n              </View>\n            </View>\n          )}\n          <InsuranceHistory user={userReducer.user} onViewHistory={() => {}} />\n          <ErrorSheet error={error} open={hasError} closed={() => {}} />\n          <NoticeSheet\n            message={confirmMessage}\n            open={hasConfirm}\n            closed={() => handleConfirm()}\n          />\n        </View>\n      </ScrollView>\n      <SafeAreaView style={{ backgroundColor: \"#fefefe\" }} />\n    </NativeBaseProvider>\n  );\n};\n\ninterface DetailsProps {\n  insurance: InsuranceModel | undefined | null;\n  onManage: Function;\n}\nconst InsuranceDetails: React.FC<DetailsProps> = ({ insurance, onManage }) => {\n  return (\n    <View\n      style={{\n        ...styles.insuranceContainer,\n        borderWidth: 1,\n        borderColor: COLORS.fade,\n        backgroundColor: COLORS.pallete_deep,\n      }}\n    >\n      <Text style={styles.insuranceHeading}>Insurance status</Text>\n      {insurance && insurance.status === \"active\" ? (\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Text\n            style={{ ...styles.insurancePlan, color: COLORS.pallete_cream }}\n          >\n            {insurance.plan}\n          </Text>\n          <View\n            style={{\n              width: \"100%\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              marginBottom: 8,\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 16,\n                flexShrink: 1,\n                fontFamily: FONTS.medium,\n                color: COLORS.white,\n                marginRight: 3,\n              }}\n            >\n              Insurance Code:\n            </Text>\n            <Text\n              style={{\n                fontSize: 16,\n                flexShrink: 1,\n                fontFamily: FONTS.medium,\n                color: COLORS.white,\n              }}\n            >\n              {insurance.insurance_provider_id}\n            </Text>\n          </View>\n          <View\n            style={{\n              width: \"100%\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              marginBottom: 20,\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 14,\n                fontFamily: FONTS.medium,\n                color: COLORS.white,\n                marginRight: 3,\n              }}\n            >\n              Expires:\n            </Text>\n            <Text\n              style={{\n                fontSize: 14,\n                fontFamily: FONTS.medium,\n                color: COLORS.white,\n              }}\n            >\n              {new Date(insurance.expiry_date).toDateString()}\n            </Text>\n          </View>\n        </View>\n      ) : insurance && insurance.status === \"enrolled\" ? (\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Text\n            style={{ ...styles.insurancePlan, color: COLORS.pallete_cream }}\n          >\n            {insurance.plan}\n          </Text>\n          <View\n            style={{\n              width: \"100%\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              marginBottom: 8,\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 16,\n                flexShrink: 1,\n                fontFamily: FONTS.medium,\n                color: COLORS.white,\n                marginRight: 3,\n              }}\n            >\n              Status:\n            </Text>\n            <Text\n              style={{\n                fontSize: 16,\n                flexShrink: 1,\n                fontFamily: FONTS.medium,\n                color: COLORS.white,\n              }}\n            >\n              Pending confirmation\n            </Text>\n          </View>\n        </View>\n      ) : (\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            marginBottom: 20,\n          }}\n        >\n          <Text\n            style={{\n              width: \"100%\",\n              textAlign: \"center\",\n              fontSize: 14,\n              fontFamily: FONTS.semiBold,\n              color: COLORS.pallete_cream,\n            }}\n          >\n            No active Insurance subscriptions. Select an Insurance plan Below to\n            continue.\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\ntype MyProps = { plans: Array<PlanModel>; onNavigate: Function };\ntype MyState = { activeIndex: number; carouselItems: Array<PlanModel> };\nconst planDetails = {\n  0: [\n    {\n      items: \"Telemedicine\",\n    },\n    {\n      items: \"Malaria Tests\",\n    },\n    {\n      items: \"Malaria Drugs\",\n    },\n    {\n      items: \"Typhoid Drugs\",\n    },\n    {\n      items: \"Heart Check\",\n    },\n    {\n      items: \"Diabetes Check\",\n    },\n    {\n      items: \"Cough & Cattarh Drugs\",\n    },\n    {\n      items: \"Pain Killer Drugs\",\n    },\n  ],\n  1: [\n    {\n      items: \"Basic Plan Benefits\",\n    },\n    {\n      items: \"Minor Surgery\",\n    },\n    {\n      items: \"Hospital Card\",\n    },\n    {\n      items: \"Out-Patient Care\",\n    },\n  ],\n  2: [\n    {\n      items: \"Basic + MicroInsurance Benefits\",\n    },\n    {\n      items: \"Hospitalizations\",\n    },\n  ],\n};\nexport class InsurancePlans extends React.Component<MyProps, MyState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n      carouselItems: props.plans,\n    };\n  }\n\n  _renderItem = ({ item, index }) => {\n    const backgroundImage = BackgroundImageService.GetImage(item.name);\n    const [\n      incomeValueFormattedWithSymbol,\n      incomeValueFormattedWithoutSymbol,\n      incomeSymbol,\n    ] = formatCurrency({ amount: item.price / 100, code: \"USD\" });\n    return (\n      <View\n        key={item._id}\n        style={{\n          width: \"100%\",\n          borderRadius: 15,\n          overflow: \"hidden\",\n          borderWidth: 1,\n          borderColor:\n            item.name === \"Sosocare Gold Plan\"\n              ? COLORS.pallete_cream\n              : COLORS.fade,\n          marginVertical: 10,\n          backgroundColor:\n            item.name === \"Sosocare Gold Plan\"\n              ? COLORS.pallete_cream\n              : item.name === \"Sosocare Silver Plan\"\n              ? COLORS.pallete_white\n              : COLORS.white,\n        }}\n      >\n        <Image\n          source={backgroundImage}\n          style={{\n            width: \"100%\",\n            borderTopLeftRadius: 13,\n            borderTopRightRadius: 8,\n          }}\n        />\n        <View style={{ paddingHorizontal: 14, paddingVertical: 10 }}>\n          <Text\n            style={{\n              ...styles.insurancePlan,\n              color: COLORS.pallete_deep,\n              textTransform: \"uppercase\",\n              flexShrink: 1,\n            }}\n          >\n            {item.ussd_name}\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 18,\n                fontFamily: FONTS.bold,\n                color: COLORS.pallete_deep,\n              }}\n            >\n              Price: {\"\\u20A6\"}\n              {incomeValueFormattedWithoutSymbol}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 18,\n                fontFamily: FONTS.bold,\n                color: COLORS.pallete_deep,\n              }}\n            >\n              Waste Cost: {item.waste_price / 1000} {\"Kg\"}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginTop: 24,\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <ButtonWithTitle\n              size=\"sm\"\n              title=\"View\"\n              width={\"100%\"}\n              onTap={() => this.props.onNavigate(item._id)}\n              backgroundColor={\"transparent\"}\n              color={COLORS.pallete_deep}\n              bordered\n              loading={false}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <Carousel\n        layout={\"default\"}\n        vertical={false}\n        // ref={ref => this.carousel = ref}\n        data={this.state.carouselItems}\n        renderItem={this._renderItem}\n        sliderWidth={deviceWidth}\n        itemWidth={deviceWidth * 0.8}\n        onSnapToItem={(index) => this.setState({ activeIndex: index })}\n      />\n    );\n  }\n}\n\nexport class OnboardingInsurancePlans extends React.Component<\n  MyProps,\n  MyState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n      carouselItems: props.plans,\n    };\n  }\n\n  _renderItem = ({ item, index }) => {\n    const backgroundImage = BackgroundImageService.GetImage(item.name);\n\n    const [\n      incomeValueFormattedWithSymbol,\n      incomeValueFormattedWithoutSymbol,\n      incomeSymbol,\n    ] = formatCurrency({ amount: item.price / 100, code: \"USD\" });\n    return (\n      <View\n        key={item._id}\n        style={{\n          width: \"100%\",\n          borderRadius: 15,\n          overflow: \"hidden\",\n          borderWidth: 1,\n          borderColor:\n            item.name === \"Sosocare Gold Plan\"\n              ? COLORS.pallete_cream\n              : COLORS.fade,\n          marginVertical: 10,\n          backgroundColor:\n            item.name === \"Sosocare Gold Plan\"\n              ? COLORS.pallete_cream\n              : item.name === \"Sosocare Silver Plan\"\n              ? COLORS.pallete_white\n              : COLORS.white,\n        }}\n      >\n        <Image\n          source={backgroundImage}\n          style={{\n            width: \"100%\",\n            borderTopLeftRadius: 13,\n            borderTopRightRadius: 8,\n          }}\n        />\n        <View style={{ paddingHorizontal: 14, paddingVertical: 10, display: \"flex\" }}>\n          <Text\n            style={{\n              ...styles.insurancePlan,\n              color: COLORS.pallete_deep,\n              textTransform: \"uppercase\",\n              flexShrink: 1,\n            }}\n          >\n            {item.name}\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 18,\n                fontFamily: FONTS.bold,\n                color: COLORS.pallete_deep,\n              }}\n            >\n              Price per: {\"\\u20A6\"}\n              {incomeValueFormattedWithoutSymbol}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\",\n              marginBottom: 12,\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 18,\n                fontFamily: FONTS.bold,\n                color: COLORS.pallete_deep,\n              }}\n            >\n              Waste Cost: {item.waste_price / 1000} {\"Kg\"}\n            </Text>\n          </View>\n          <View style={{minHeight: 300}}>\n          {planDetails[index].map((detail) => (\n            <View\n              key={detail.items}\n              style={{\n                width: \"100%\",\n                marginBottom: 10,\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              <View\n                style={{\n                  borderRadius: 6,\n                  backgroundColor: COLORS.fade,\n                  marginRight: 10,\n                  padding: 4,\n                  width: 28,\n                }}\n              >\n                <MaterialIcons\n                  name=\"check-bold\"\n                  style={{ fontSize: 20 }}\n                  color={COLORS.primary}\n                />\n              </View>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  flex: 1,\n                  width: \"90%\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Text\n                  style={{\n                    fontSize: 16,\n                    flex: 5,\n                    flexShrink: 1,\n                    overflow: \"hidden\",\n                    fontFamily: FONTS.medium,\n                    color: COLORS.gray,\n                  }}\n                >\n                  {detail.items}\n                </Text>\n              </View>\n            </View>\n          ))}\n          </View>\n\n          <View\n            style={{\n              flexDirection: \"row\",\n              marginTop: 24,\n              justifyContent: \"space-between\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <ButtonWithTitle\n              size=\"sm\"\n              title=\"Proceed\"\n              width={\"100%\"}\n              onTap={() => this.props.onNavigate(item._id)}\n              backgroundColor={\"transparent\"}\n              color={COLORS.pallete_deep}\n              bordered\n              loading={false}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <Carousel\n        layout={\"default\"}\n        vertical={false}\n        // ref={ref => this.carousel = ref}\n        data={this.state.carouselItems}\n        renderItem={this._renderItem}\n        sliderWidth={deviceWidth}\n        itemWidth={deviceWidth * 0.8}\n        onSnapToItem={(index) => this.setState({ activeIndex: index })}\n      />\n    );\n  }\n}\n\nconst InsuranceHistory = ({ onViewHistory, user }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n  const [history, setHistory] = useState<Array<InsuranceModel>>();\n  const [showContent, setShowContent] = useState(false);\n  const [activeItem, setActiveItem] = useState<InsuranceModel>();\n\n  const closeContent = () => {\n    setShowContent(false);\n    setLoading(false);\n  };\n\n  const clearError = () => {\n    setHasError(false);\n    setLoading(false);\n  };\n  useEffect(() => {\n    let mounted = true;\n    const source = axios.CancelToken.source();\n    (async () => {\n      if (!mounted) {\n        return;\n      }\n      try {\n        setLoading(true);\n        const response = await axios.get<string>(\n          `${BASE_URL}user/insurance/latest`,\n          {\n            cancelToken: source.token,\n            headers: {\n              Authorization: `Bearer ${user.authToken}`,\n            },\n          }\n        );\n\n        let resBody = response.data;\n\n        if (resBody[\"status\"] === \"error\") {\n          setLoading(false);\n          setError(\"Unable to load transations\");\n          setHasError(true);\n          return { error: resBody[\"message\"] };\n        } else {\n          if (!mounted) {\n            return;\n          }\n          setHistory(resBody[\"insurances\"]);\n          setLoading(false);\n          return { success: resBody[\"status\"] };\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(\"Unable to load Insurance History\");\n        setHasError(true);\n        return;\n      }\n    })();\n    return () => {\n      source.cancel();\n      mounted = false;\n    };\n  }, []);\n\n  const showInsurance = async (id) => {\n    if (history) {\n      try {\n        setLoading(true);\n        let currentItem = history.find((item) => item._id === id);\n        if (currentItem) {\n          setActiveItem(currentItem);\n          setShowContent(true);\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(\"Error kindly retry\");\n        setHasError(true);\n      }\n    }\n  };\n  const InsuranceContent = () => {\n    if (activeItem) {\n      return (\n        <View\n          style={{\n            width: \"100%\",\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-start\",\n            paddingHorizontal: 12,\n          }}\n        >\n          <Text\n            style={{ ...styles.transactionHeading, color: COLORS.pallete_deep }}\n          >\n            Insurance Details\n          </Text>\n          <View\n            style={{\n              width: \"100%\",\n              justifyContent: \"flex-start\",\n              alignItems: \"flex-start\",\n              marginTop: 20,\n            }}\n          >\n            <View style={styles.transactionRecord}>\n              <Text style={styles.transactionRecordLeft}>Activation Date</Text>\n              <Text style={styles.transactionRecordRight}>\n                {new Date(activeItem.activation_date).toDateString()}\n              </Text>\n            </View>\n            <View style={styles.transactionRecord}>\n              <Text style={styles.transactionRecordLeft}>Expiry Date</Text>\n              <Text style={styles.transactionRecordRight}>\n                {new Date(activeItem.expiry_date).toDateString()}\n              </Text>\n            </View>\n            <View style={styles.transactionRecord}>\n              <Text style={styles.transactionRecordLeft}>Reference</Text>\n              <Text style={styles.transactionRecordRight}>\n                {activeItem.payment_ref}\n              </Text>\n            </View>\n            <View style={styles.transactionRecord}>\n              <Text style={styles.transactionRecordLeft}>Plan</Text>\n              <Text\n                style={{\n                  ...styles.transactionRecordRight,\n                  textTransform: \"capitalize\",\n                }}\n              >\n                {activeItem.plan}\n              </Text>\n            </View>\n            <View style={styles.transactionRecord}>\n              <Text style={styles.transactionRecordLeft}>Status</Text>\n              <View\n                style={[\n                  styles.transactionRecordRight,\n                  {\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    flexDirection: \"row\",\n                  },\n                ]}\n              >\n                <Text\n                  style={[\n                    { maxWidth: 50 },\n                    activeItem.status === \"active\" ||\n                    activeItem.status === \"renewed\"\n                      ? {\n                          color: COLORS.pallete_white,\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          borderRadius: 10,\n                          fontSize: SIZES.base,\n                          backgroundColor: COLORS.pallete_deep,\n                          padding: 6,\n                        }\n                      : activeItem.status === \"failed\"\n                      ? {\n                          color: COLORS.pallete_white,\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          borderRadius: 10,\n                          fontSize: SIZES.base,\n                          backgroundColor: COLORS.negative,\n                          padding: 6,\n                        }\n                      : {\n                          color: COLORS.pallete_white,\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          borderRadius: 10,\n                          fontSize: SIZES.base,\n                          backgroundColor: COLORS.dark,\n                          padding: 6,\n                        },\n                  ]}\n                >\n                  {activeItem.status}\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      );\n    }\n    return <></>;\n  };\n  if (history?.length === undefined || history?.length < 1) {\n    return <></>;\n  } else {\n    return (\n      <View\n        style={{\n          ...styles.insuranceContainer,\n          borderWidth: 1,\n          borderColor: COLORS.fade,\n          backgroundColor: COLORS.white,\n          marginBottom: 100,\n        }}\n      >\n        <Text\n          style={{ ...styles.insuranceHeading, color: COLORS.pallete_deep }}\n        >\n          Insurance History\n        </Text>\n        <View\n          style={{\n            width: \"100%\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <View style={{ width: \"100%\", marginTop: 0 }}>\n            {history &&\n              history.map((item: InsuranceModel) => (\n                <InsuranceListItem\n                  detail={item.plan}\n                  date={item.activation_date}\n                  plan={item.plan}\n                  backgroundColor={COLORS.pallete_white}\n                  tint={COLORS.white}\n                  color={COLORS.dark}\n                  loading={false}\n                  key={item._id}\n                  id={item._id}\n                  onTap={showInsurance}\n                />\n              ))}\n          </View>\n          {\n            <ContentSheet\n              content={<InsuranceContent />}\n              open={showContent}\n              closed={closeContent}\n            />\n          }\n          {/* <View style={{ marginTop: 20, width: '100%', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n          <ButtonWithTitle\n            title='View All'\n            backgroundColor='transparent'\n            noBg={false}\n            size='sm'\n            color={COLORS.dark}\n            loading={false}\n            onTap={() => { }}\n            width={'100%'}\n            bordered\n          />\n        </View> */}\n        </View>\n        <ErrorSheet error={error} open={hasError} closed={() => {}} />\n      </View>\n    );\n  }\n};\n\n// IMAGE INTERFACE\ninterface BgImage {\n  plan: string;\n  img: any;\n}\n// RETURN IMAGE PATH SERVICE\nclass BackgroundImageService {\n  private static images: Array<BgImage> = [\n    {\n      plan: \"Sosocare Basic Plan\",\n      img: require(\"../../../assets/family_package.png\"),\n    },\n    {\n      plan: \"Sosocare Silver Plan\",\n      img: require(\"../../../assets/silver_package.png\"),\n    },\n    {\n      plan: \"Sosocare Gold Plan\",\n      img: require(\"../../../assets/gold_package.png\"),\n    },\n  ];\n  static GetImage = (plan: string) => {\n    const found = BackgroundImageService.images.find((e) => e.plan === plan);\n    return found ? found.img : null;\n  };\n}\n\nconst styles = StyleSheet.create({\n  transactionHeading: {\n    fontSize: SIZES.large,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18,\n    width: \"100%\",\n  },\n  transactionRecord: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.fade,\n    paddingVertical: 10,\n    paddingHorizontal: 6,\n  },\n  transactionRecordLeft: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.pallete_deep,\n    flex: 2,\n  },\n  transactionRecordRight: {\n    flex: 5,\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.medium,\n    color: COLORS.gray,\n    flexShrink: 1,\n  },\n  insuranceContainer: {\n    width: \"100%\",\n    backgroundColor: COLORS.primary,\n    borderRadius: 15,\n    paddingTop: 30,\n    paddingBottom: 10,\n    marginBottom: 20,\n    paddingHorizontal: 18,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    borderTopEndRadius: 15,\n    elevation: 5,\n    shadowColor: \"rgb(230, 235, 243)\",\n    shadowOffset: { width: 4, height: 12 },\n    shadowOpacity: 0.5,\n    shadowRadius: 10,\n  },\n  insuranceHeading: {\n    fontSize: SIZES.medium,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 18,\n  },\n  insurancePlan: {\n    fontSize: SIZES.extraLarge,\n    fontFamily: FONTS.semiBold,\n    color: COLORS.white,\n    marginBottom: 6,\n  },\n  container: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fefefe\",\n    paddingHorizontal: 24,\n    marginTop: 30,\n  },\n  imageBg: {\n    resizeMode: \"cover\",\n    width: \"100%\",\n    height: \"100%\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  headingText: {\n    fontFamily: FONTS.semiBold,\n    fontSize: SIZES.heading,\n    color: COLORS.dark,\n    marginBottom: SIZES.font,\n    textAlign: \"center\",\n  },\n  errorText: {\n    fontSize: 14,\n    fontFamily: FONTS.medium,\n    color: COLORS.negative,\n    marginTop: -26,\n    marginBottom: 10,\n  },\n  subHeadingText: {\n    fontFamily: FONTS.medium,\n    fontSize: SIZES.medium,\n    color: COLORS.gray,\n    marginBottom: 20,\n    textAlign: \"center\",\n  },\n});\n\nconst mapToStateProps = (state: ApplicationState) => ({\n  userReducer: state.UserReducer,\n  insuranceReducer: state.InsuranceReducer,\n});\n\nconst InsuranceScreen = connect(mapToStateProps, {\n  OnLoadInsurance,\n  OnCancelInsurance,\n})(_InsuranceScreen);\nexport default InsuranceScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}