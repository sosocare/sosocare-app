{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { COLORS, FONTS } from \"../constants\";\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport { formatCurrency } from \"react-native-format-currency\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Convertible = function Convertible(_ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    balance = _ref.balance,\n    onTap = _ref.onTap,\n    _ref$tint = _ref.tint,\n    tint = _ref$tint === void 0 ? COLORS.fade : _ref$tint,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? COLORS.dark : _ref$color,\n    _ref$backgroundColor = _ref.backgroundColor,\n    backgroundColor = _ref$backgroundColor === void 0 ? 'transparent' : _ref$backgroundColor,\n    _ref$loading = _ref.loading,\n    loading = _ref$loading === void 0 ? false : _ref$loading;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    amount = _useState2[0],\n    setAmount = _useState2[1];\n  useEffect(function () {\n    var price = 0;\n    if (title === 'Batteries') {\n      price = 2700;\n    } else if (title === 'HDPE') {\n      price = 3000;\n    } else if (title === 'Carton') {\n      price = 1800;\n    } else if (title === 'Copper') {\n      price = 4000;\n    } else if (title === 'Tin') {\n      price = 5000;\n    } else if (title === 'PET') {\n      price = 1500;\n    } else if (title === 'Aluminium') {\n      price = 5500;\n    } else if (title === 'Steel') {\n      price = 6000;\n    } else if (title === 'Paper') {\n      price = 1500;\n    } else if (title === 'SachetWater') {\n      price = 1000;\n    } else if (title === 'White Nylon') {\n      price = 2500;\n    } else if (title === 'Metal') {\n      price = 3000;\n    }\n    var _formatCurrency = formatCurrency({\n        amount: price / 100 * balance * 100 / 100,\n        code: \"USD\"\n      }),\n      _formatCurrency2 = _slicedToArray(_formatCurrency, 3),\n      valueFormattedWithSymbol = _formatCurrency2[0],\n      valueFormattedWithoutSymbol = _formatCurrency2[1],\n      symbol = _formatCurrency2[2];\n    setAmount(valueFormattedWithoutSymbol);\n  }, []);\n  return _jsxs(Pressable, {\n    onPress: function onPress() {\n      return onTap(id, amount);\n    },\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return {\n        opacity: pressed ? 0.5 : 1,\n        backgroundColor: pressed ? tint : backgroundColor,\n        width: '100%',\n        position: 'relative',\n        paddingHorizontal: 10,\n        paddingVertical: 12,\n        borderRadius: 10,\n        marginBottom: 8,\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center'\n      };\n    },\n    children: [_jsx(View, {\n      style: {\n        borderRadius: 6,\n        backgroundColor: tint,\n        marginRight: 6,\n        padding: 4\n      },\n      children: _jsx(MaterialIcons, {\n        name: \"recycle-variant\",\n        style: {\n          fontSize: 20\n        },\n        color: color\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        width: '90%',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 16,\n          fontFamily: FONTS.medium,\n          color: color\n        },\n        children: title\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [title === 'Batteries' ? _jsxs(Text, {\n          style: {\n            fontSize: 14,\n            fontFamily: FONTS.medium,\n            color: COLORS.gray,\n            marginRight: 3\n          },\n          children: [balance, \" Units\"]\n        }) : _jsxs(Text, {\n          style: {\n            fontSize: 14,\n            fontFamily: FONTS.medium,\n            color: COLORS.gray,\n            marginRight: 3\n          },\n          children: [balance, \" Kg\"]\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 14,\n            fontFamily: FONTS.medium,\n            color: COLORS.gray\n          },\n          children: [\" for \", _jsxs(Text, {\n            style: {\n              fontSize: 16,\n              color: COLORS.primary\n            },\n            children: [\"\\u20A6\", amount]\n          })]\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  btn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15\n  },\n  loading: {\n    opacity: 0.7\n  }\n});\nexport { Convertible };","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","Text","Pressable","View","COLORS","FONTS","MaterialIcons","formatCurrency","jsx","_jsx","jsxs","_jsxs","Convertible","_ref","id","title","balance","onTap","_ref$tint","tint","fade","_ref$color","color","dark","_ref$backgroundColor","backgroundColor","_ref$loading","loading","_useState","_useState2","_slicedToArray","amount","setAmount","price","_formatCurrency","code","_formatCurrency2","valueFormattedWithSymbol","valueFormattedWithoutSymbol","symbol","onPress","style","_ref2","pressed","opacity","width","position","paddingHorizontal","paddingVertical","borderRadius","marginBottom","flexDirection","justifyContent","alignItems","children","marginRight","padding","name","fontSize","fontFamily","medium","gray","primary","styles","create","btn"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/components/Convertible.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, Pressable, View } from 'react-native';\nimport { COLORS, FONTS } from '../constants';\nimport MaterialIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport { formatCurrency } from \"react-native-format-currency\";\nimport {\n    Spinner\n} from \"native-base\";\n\ninterface ButtonProps {\n    title: string,\n    id: string,\n    balance: number | 0,\n    color: string,\n    backgroundColor: string,\n    tint?: string,\n    loading: boolean;\n    onTap: Function;\n}\n\nconst Convertible: React.FC<ButtonProps> = ({ id, title, balance, onTap, tint = COLORS.fade, color = COLORS.dark, backgroundColor = 'transparent', loading = false, }) => {\n    const [amount, setAmount] = useState(0);\n    useEffect(() => {\n        let price = 0;\n        if (title === 'Batteries') {\n            price = 2700;\n        } else if (title === 'HDPE') {\n            price = 3000;\n        } else if (title === 'Carton') {\n            price = 1800;\n        } else if (title === 'Copper') {\n            price = 4000;\n        } else if (title === 'Tin') {\n            price = 5000;\n        } else if (title === 'PET') {\n            price = 1500;\n        } else if (title === 'Aluminium') {\n            price = 5500;\n        } else if (title === 'Steel') {\n            price = 6000;\n        } else if (title === 'Paper') {\n            price = 1500;\n        } else if (title === 'SachetWater') {\n            price = 1000;\n        } else if (title === 'White Nylon') {\n            price = 2500;\n        } else if (title === 'Metal') {\n            price = 3000;\n        }\n        const [valueFormattedWithSymbol, valueFormattedWithoutSymbol, symbol] = formatCurrency({ amount: (price / 100 * balance * 100) / 100, code: \"USD\" });\n        setAmount(valueFormattedWithoutSymbol);\n    }, []);\n    return (\n        <Pressable onPress={() => onTap(id, amount)} style={({ pressed }) => ({\n            opacity: pressed ? 0.5 : 1,\n            backgroundColor: pressed ? tint : backgroundColor,\n            width: '100%', position: 'relative', paddingHorizontal: 10, paddingVertical: 12, borderRadius: 10, marginBottom: 8, flexDirection: 'row', justifyContent: 'flex-start', alignItems: 'center'\n        })}>\n            <View style={{ borderRadius: 6, backgroundColor: tint, marginRight: 6, padding: 4 }}>\n                <MaterialIcons name='recycle-variant' style={{ fontSize: 20 }} color={color} />\n            </View>\n            <View style={{ flexDirection: 'row', width: '90%', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Text style={{ fontSize: 16, fontFamily: FONTS.medium, color: color }}>{title}</Text>\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n                    {title === 'Batteries'\n                        ? <Text style={{ fontSize: 14, fontFamily: FONTS.medium, color: COLORS.gray, marginRight: 3 }}>{balance} Units</Text>\n                        : <Text style={{ fontSize: 14, fontFamily: FONTS.medium, color: COLORS.gray, marginRight: 3 }}>{balance} Kg</Text>}\n                    <Text style={{ fontSize: 14, fontFamily: FONTS.medium, color: COLORS.gray }}> for <Text style={{ fontSize: 16, color: COLORS.primary }}>{'\\u20A6'}{amount}</Text></Text>\n                </View>\n            </View>\n\n        </Pressable>\n    );\n\n};\n\n\nconst styles = StyleSheet.create({\n    btn: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 15,\n    },\n    loading: {\n        opacity: 0.7\n    }\n\n});\n\nexport { Convertible };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}