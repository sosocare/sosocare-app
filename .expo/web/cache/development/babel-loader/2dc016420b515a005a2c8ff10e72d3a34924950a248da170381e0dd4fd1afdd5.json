{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COLORS, FONTS } from \"../constants\";\nimport { Spinner } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ButtonWithTitle = function ButtonWithTitle(_ref) {\n  var onTap = _ref.onTap,\n    width = _ref.width,\n    title = _ref.title,\n    _ref$noBg = _ref.noBg,\n    noBg = _ref$noBg === void 0 ? false : _ref$noBg,\n    _ref$bordered = _ref.bordered,\n    bordered = _ref$bordered === void 0 ? false : _ref$bordered,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? COLORS.dark : _ref$color,\n    _ref$backgroundColor = _ref.backgroundColor,\n    backgroundColor = _ref$backgroundColor === void 0 ? 'transparent' : _ref$backgroundColor,\n    _ref$loading = _ref.loading,\n    loading = _ref$loading === void 0 ? false : _ref$loading,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'md' : _ref$size;\n  if (noBg) {\n    return _jsx(TouchableOpacity, {\n      disabled: loading,\n      style: [styles.btn, {\n        width: width,\n        backgroundColor: 'transparent',\n        paddingVertical: size === 'md' ? 24 : size === 'sm' ? 12 : 0\n      }, loading && styles.loading],\n      onPress: function onPress() {\n        return onTap();\n      },\n      children: loading ? _jsx(Spinner, {\n        color: color\n      }) : _jsx(Text, {\n        style: {\n          fontSize: 16,\n          color: color,\n          fontFamily: FONTS.semiBold\n        },\n        children: title\n      })\n    });\n  } else {\n    return _jsx(TouchableOpacity, {\n      disabled: loading,\n      style: [styles.btn, {\n        width: width,\n        backgroundColor: backgroundColor,\n        paddingVertical: size === 'md' ? 24 : size === 'sm' ? 12 : 0\n      }, bordered && {\n        borderColor: color,\n        borderWidth: 1\n      }, loading && styles.loading],\n      onPress: function onPress() {\n        return onTap();\n      },\n      children: loading ? _jsx(Spinner, {\n        color: color\n      }) : _jsx(Text, {\n        style: {\n          fontSize: 16,\n          color: color,\n          fontFamily: FONTS.semiBold\n        },\n        children: title\n      })\n    });\n  }\n};\nvar styles = StyleSheet.create({\n  btn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 15\n  },\n  loading: {\n    opacity: 0.7\n  }\n});\nexport { ButtonWithTitle };","map":{"version":3,"names":["React","StyleSheet","Text","TouchableOpacity","COLORS","FONTS","Spinner","jsx","_jsx","ButtonWithTitle","_ref","onTap","width","title","_ref$noBg","noBg","_ref$bordered","bordered","_ref$color","color","dark","_ref$backgroundColor","backgroundColor","_ref$loading","loading","_ref$size","size","disabled","style","styles","btn","paddingVertical","onPress","children","fontSize","fontFamily","semiBold","borderColor","borderWidth","create","justifyContent","alignItems","borderRadius","opacity"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/components/ButtonWithTitle.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\nimport { COLORS, FONTS } from '../constants';\nimport {\n    Spinner\n} from \"native-base\";\n\ninterface ButtonProps {\n    onTap: Function;\n    width: string | number;\n    title: string,\n    color: string,\n    backgroundColor: string,\n    noBg?: boolean;\n    loading: boolean;\n    bordered?: boolean;\n    size?: string\n}\n\nconst ButtonWithTitle: React.FC<ButtonProps> = ({ onTap, width, title, noBg = false, bordered = false, color = COLORS.dark, backgroundColor = 'transparent', loading = false, size = 'md' }) => {\n\n    if (noBg) {\n        return (\n            <TouchableOpacity disabled={loading} style={[styles.btn, { width, backgroundColor: 'transparent', paddingVertical: size === 'md' ? 24 : size === 'sm' ? 12 : 0  }, loading && styles.loading]}\n                onPress={() => onTap()}\n            >\n                {loading\n                    ? <Spinner color={color} />\n                    : <Text style={{ fontSize: 16, color, fontFamily: FONTS.semiBold }}>{title}</Text>\n                }\n            </TouchableOpacity>\n        );\n    } else {\n        return (\n            <TouchableOpacity disabled={loading} style={[styles.btn, { width, backgroundColor, paddingVertical: size === 'md' ? 24 : size === 'sm' ? 12 : 0 }, bordered && { borderColor: color, borderWidth: 1 }, loading && styles.loading]}\n                onPress={() => onTap()}\n            >\n                {loading\n                    ? <Spinner color={color} />\n                    : <Text style={{ fontSize: 16, color, fontFamily: FONTS.semiBold }}>{title}</Text>\n                }\n            </TouchableOpacity>\n        );\n\n\n    }\n\n};\n\n\nconst styles = StyleSheet.create({\n    btn: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 15,\n    },\n    loading: {\n        opacity: 0.7\n    }\n\n});\n\nexport { ButtonWithTitle };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}