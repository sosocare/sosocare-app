{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useControlledState as $fQ2SF$useControlledState } from \"@react-stately/utils\";\nimport { useMemo as $fQ2SF$useMemo, useState as $fQ2SF$useState } from \"react\";\nvar $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 10000000000);\nvar $a54cdc5c1942b639$var$i = 0;\nfunction $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {\n  var name = (0, $fQ2SF$useMemo)(function () {\n    return props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`;\n  }, [props.name]);\n  var _ref = (0, $fQ2SF$useControlledState)(props.value, props.defaultValue, props.onChange),\n    _ref2 = _slicedToArray(_ref, 2),\n    selectedValue = _ref2[0],\n    setSelected = _ref2[1];\n  var _ref3 = (0, $fQ2SF$useState)(null),\n    _ref4 = _slicedToArray(_ref3, 2),\n    lastFocusedValue = _ref4[0],\n    setLastFocusedValue = _ref4[1];\n  var setSelectedValue = function setSelectedValue(value) {\n    if (!props.isReadOnly && !props.isDisabled) setSelected(value);\n  };\n  return {\n    name: name,\n    selectedValue: selectedValue,\n    setSelectedValue: setSelectedValue,\n    lastFocusedValue: lastFocusedValue,\n    setLastFocusedValue: setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isRequired: props.isRequired || false,\n    validationState: props.validationState || null\n  };\n}\nexport { $a54cdc5c1942b639$export$bca9d026f8e704eb as useRadioGroupState };","map":{"version":3,"names":["$a54cdc5c1942b639$var$instance","Math","round","random","$a54cdc5c1942b639$var$i","$a54cdc5c1942b639$export$bca9d026f8e704eb","props","name","$fQ2SF$useMemo","_ref","$fQ2SF$useControlledState","value","defaultValue","onChange","_ref2","_slicedToArray","selectedValue","setSelected","_ref3","$fQ2SF$useState","_ref4","lastFocusedValue","setLastFocusedValue","setSelectedValue","isReadOnly","isDisabled","isRequired","validationState"],"sources":["C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-stately\\radio\\dist\\packages\\@react-stately\\radio\\src\\index.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-stately\\radio\\dist\\packages\\@react-stately\\radio\\src\\useRadioGroupState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useRadioGroupState} from './useRadioGroupState';\n\nexport type {RadioGroupProps} from '@react-types/radio';\nexport type {RadioGroupState} from './useRadioGroupState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RadioGroupProps} from '@react-types/radio';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useState} from 'react';\nimport {ValidationState} from '@react-types/shared';\n\nexport interface RadioGroupState {\n  /**\n   * The name for the group, used for native form submission.\n   * @deprecated\n   * @private\n   */\n  readonly name: string,\n\n  /** Whether the radio group is disabled. */\n  readonly isDisabled: boolean,\n\n  /** Whether the radio group is read only. */\n  readonly isReadOnly: boolean,\n\n  /** Whether the radio group is required. */\n  readonly isRequired: boolean,\n\n  /** Whether the radio group is valid or invalid. */\n  readonly validationState: ValidationState | null,\n\n  /** The currently selected value. */\n  readonly selectedValue: string | null,\n\n  /** Sets the selected value. */\n  setSelectedValue(value: string): void,\n\n  /** The value of the last focused radio. */\n  readonly lastFocusedValue: string | null,\n\n  /** Sets the last focused value. */\n  setLastFocusedValue(value: string): void\n}\n\nlet instance = Math.round(Math.random() * 10000000000);\nlet i = 0;\n\n/**\n * Provides state management for a radio group component. Provides a name for the group,\n * and manages selection and focus state.\n */\nexport function useRadioGroupState(props: RadioGroupProps): RadioGroupState  {\n  // Preserved here for backward compatibility. React Aria now generates the name instead of stately.\n  let name = useMemo(() => props.name || `radio-group-${instance}-${++i}`, [props.name]);\n  let [selectedValue, setSelected] = useControlledState(props.value, props.defaultValue, props.onChange);\n  let [lastFocusedValue, setLastFocusedValue] = useState(null);\n\n  let setSelectedValue = (value) => {\n    if (!props.isReadOnly && !props.isDisabled) {\n      setSelected(value);\n    }\n  };\n\n  return {\n    name,\n    selectedValue,\n    setSelectedValue,\n    lastFocusedValue,\n    setLastFocusedValue,\n    isDisabled: props.isDisabled || false,\n    isReadOnly: props.isReadOnly || false,\n    isRequired: props.isRequired || false,\n    validationState: props.validationState || null\n  };\n}\n"],"mappings":";;;ACkDA,IAAIA,8BAAA,GAAWC,IAAA,CAAKC,KAAA,CAAMD,IAAA,CAAKE,MAAA,KAAW;AAC1C,IAAIC,uBAAA,GAAI;AAMD,SAASC,0CAAmBC,KAAsB;EAEvD,IAAIC,IAAA,GAAO,IAAAC,cAAM,EAAE;IAAA,OAAMF,KAAA,CAAMC,IAAA,IAAS,eAAcP,8BAAS,IAAG,EAAEI,uBAAE,EAAC;EAAA,GAAE,CAACE,KAAA,CAAMC,IAAA,CAAK;EACrF,IAAAE,IAAA,GAAmC,IAAAC,yBAAiB,EAAEJ,KAAA,CAAMK,KAAA,EAAOL,KAAA,CAAMM,YAAA,EAAcN,KAAA,CAAMO,QAAA;IAAAC,KAAA,GAAAC,cAAA,CAAAN,IAAA;IAAxFO,aAAA,GAAAF,KAAA;IAAeG,WAAA,GAAAH,KAAA;EACpB,IAAAI,KAAA,GAA8C,IAAAC,eAAO,EAAE;IAAAC,KAAA,GAAAL,cAAA,CAAAG,KAAA;IAAlDG,gBAAA,GAAAD,KAAA;IAAkBE,mBAAA,GAAAF,KAAA;EAEvB,IAAIG,gBAAA,GAAmB,SAAnBA,iBAAoBZ,KAAA;IACtB,IAAI,CAACL,KAAA,CAAMkB,UAAA,IAAc,CAAClB,KAAA,CAAMmB,UAAA,EAC9BR,WAAA,CAAYN,KAAA;EAEhB;EAEA,OAAO;UACLJ,IAAA;mBACAS,aAAA;sBACAO,gBAAA;sBACAF,gBAAA;yBACAC,mBAAA;IACAG,UAAA,EAAYnB,KAAA,CAAMmB,UAAA,IAAc;IAChCD,UAAA,EAAYlB,KAAA,CAAMkB,UAAA,IAAc;IAChCE,UAAA,EAAYpB,KAAA,CAAMoB,UAAA,IAAc;IAChCC,eAAA,EAAiBrB,KAAA,CAAMqB,eAAA,IAAmB;EAC5C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}