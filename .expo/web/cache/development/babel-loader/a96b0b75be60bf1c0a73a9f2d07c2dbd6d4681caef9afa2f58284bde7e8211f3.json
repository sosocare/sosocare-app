{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"register\"],\n  _excluded2 = [\"onPress\", \"onPressChange\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"isDisabled\", \"isPressed\", \"preventFocusOnPress\", \"shouldCancelOnPointerExit\", \"allowTextSelectionOnPress\", \"ref\"],\n  _excluded3 = [\"children\"],\n  _excluded4 = [\"children\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { mergeProps as $bx7SL$mergeProps, useSyncRef as $bx7SL$useSyncRef, useGlobalListeners as $bx7SL$useGlobalListeners, useEffectEvent as $bx7SL$useEffectEvent, isVirtualClick as $bx7SL$isVirtualClick, focusWithoutScrolling as $bx7SL$focusWithoutScrolling, isVirtualPointerEvent as $bx7SL$isVirtualPointerEvent, isIOS as $bx7SL$isIOS, runAfterTransition as $bx7SL$runAfterTransition, useLayoutEffect as $bx7SL$useLayoutEffect, isMac as $bx7SL$isMac, useEvent as $bx7SL$useEvent, useDescription as $bx7SL$useDescription } from \"@react-aria/utils\";\nimport $bx7SL$react, { useRef as $bx7SL$useRef, useContext as $bx7SL$useContext, useState as $bx7SL$useState, useMemo as $bx7SL$useMemo, useEffect as $bx7SL$useEffect, useCallback as $bx7SL$useCallback } from \"react\";\nimport { useIsSSR as $bx7SL$useIsSSR } from \"@react-aria/ssr\";\nvar $14c0b72509d70225$var$state = \"default\";\nvar $14c0b72509d70225$var$savedUserSelect = \"\";\nvar $14c0b72509d70225$var$modifiedElementMap = new WeakMap();\nfunction $14c0b72509d70225$export$16a4697467175487(target) {\n  if ((0, $bx7SL$isIOS)()) {\n    if ($14c0b72509d70225$var$state === \"default\") {\n      $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = \"none\";\n    }\n    $14c0b72509d70225$var$state = \"disabled\";\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n}\nfunction $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {\n  if ((0, $bx7SL$isIOS)()) {\n    if ($14c0b72509d70225$var$state !== \"disabled\") return;\n    $14c0b72509d70225$var$state = \"restoring\";\n    setTimeout(function () {\n      (0, $bx7SL$runAfterTransition)(function () {\n        if ($14c0b72509d70225$var$state === \"restoring\") {\n          if (document.documentElement.style.webkitUserSelect === \"none\") document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || \"\";\n          $14c0b72509d70225$var$savedUserSelect = \"\";\n          $14c0b72509d70225$var$state = \"default\";\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n      if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {\n        var targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);\n        if (target.style.userSelect === \"none\") target.style.userSelect = targetOldUserSelect;\n        if (target.getAttribute(\"style\") === \"\") target.removeAttribute(\"style\");\n        $14c0b72509d70225$var$modifiedElementMap.delete(target);\n      }\n    }\n}\nvar $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = (0, $bx7SL$react).createContext(null);\n$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = \"PressResponderContext\";\nfunction $f6c31cce2adf654f$var$usePressResponderContext(props) {\n  var context = (0, $bx7SL$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n  if (context) {\n    var register = context.register,\n      contextProps = _objectWithoutProperties(context, _excluded);\n    props = (0, $bx7SL$mergeProps)(contextProps, props);\n    register();\n  }\n  (0, $bx7SL$useSyncRef)(context, props.ref);\n  return props;\n}\nfunction $f6c31cce2adf654f$export$45712eceda6fad21(props) {\n  var _$f6c31cce2adf654f$va = $f6c31cce2adf654f$var$usePressResponderContext(props),\n    onPress = _$f6c31cce2adf654f$va.onPress,\n    onPressChange = _$f6c31cce2adf654f$va.onPressChange,\n    onPressStart = _$f6c31cce2adf654f$va.onPressStart,\n    onPressEnd = _$f6c31cce2adf654f$va.onPressEnd,\n    onPressUp = _$f6c31cce2adf654f$va.onPressUp,\n    isDisabled = _$f6c31cce2adf654f$va.isDisabled,\n    isPressedProp = _$f6c31cce2adf654f$va.isPressed,\n    preventFocusOnPress = _$f6c31cce2adf654f$va.preventFocusOnPress,\n    shouldCancelOnPointerExit = _$f6c31cce2adf654f$va.shouldCancelOnPointerExit,\n    allowTextSelectionOnPress = _$f6c31cce2adf654f$va.allowTextSelectionOnPress,\n    _ = _$f6c31cce2adf654f$va.ref,\n    domProps = _objectWithoutProperties(_$f6c31cce2adf654f$va, _excluded2);\n  var _ref = (0, $bx7SL$useState)(false),\n    _ref2 = _slicedToArray(_ref, 2),\n    isPressed = _ref2[0],\n    setPressed = _ref2[1];\n  var ref = (0, $bx7SL$useRef)({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n  var _ref3 = (0, $bx7SL$useGlobalListeners)(),\n    addGlobalListener = _ref3.addGlobalListener,\n    removeAllGlobalListeners = _ref3.removeAllGlobalListeners;\n  var triggerPressStart = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType) {\n    var state = ref.current;\n    if (isDisabled || state.didFirePressStart) return;\n    if (onPressStart) onPressStart({\n      type: \"pressstart\",\n      pointerType: pointerType,\n      target: originalEvent.currentTarget,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n    if (onPressChange) onPressChange(true);\n    state.didFirePressStart = true;\n    setPressed(true);\n  });\n  var triggerPressEnd = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType) {\n    var wasPressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var state = ref.current;\n    if (!state.didFirePressStart) return;\n    state.ignoreClickAfterPress = true;\n    state.didFirePressStart = false;\n    if (onPressEnd) onPressEnd({\n      type: \"pressend\",\n      pointerType: pointerType,\n      target: originalEvent.currentTarget,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n    if (onPressChange) onPressChange(false);\n    setPressed(false);\n    if (onPress && wasPressed && !isDisabled) onPress({\n      type: \"press\",\n      pointerType: pointerType,\n      target: originalEvent.currentTarget,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n  });\n  var triggerPressUp = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType) {\n    if (isDisabled) return;\n    if (onPressUp) onPressUp({\n      type: \"pressup\",\n      pointerType: pointerType,\n      target: originalEvent.currentTarget,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n  });\n  var cancel = (0, $bx7SL$useEffectEvent)(function (e) {\n    var state = ref.current;\n    if (state.isPressed) {\n      if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n      state.isPressed = false;\n      state.isOverTarget = false;\n      state.activePointerId = null;\n      state.pointerType = null;\n      removeAllGlobalListeners();\n      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n    }\n  });\n  var cancelOnPointerExit = (0, $bx7SL$useEffectEvent)(function (e) {\n    if (shouldCancelOnPointerExit) cancel(e);\n  });\n  var pressProps = (0, $bx7SL$useMemo)(function () {\n    var state = ref.current;\n    var pressProps = {\n      onKeyDown: function onKeyDown(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n          e.stopPropagation();\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, \"keyboard\");\n            addGlobalListener(document, \"keyup\", onKeyUp, false);\n          }\n        } else if (e.key === \"Enter\" && $f6c31cce2adf654f$var$isHTMLAnchorLink(e.currentTarget)) e.stopPropagation();\n      },\n      onKeyUp: function onKeyUp(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target)) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\");\n      },\n      onClick: function onClick(e) {\n        if (e && !e.currentTarget.contains(e.target)) return;\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) e.preventDefault();\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === \"virtual\" || (0, $bx7SL$isVirtualClick)(e.nativeEvent))) {\n            if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n            triggerPressStart(e, \"virtual\");\n            triggerPressUp(e, \"virtual\");\n            triggerPressEnd(e, \"virtual\");\n          }\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n    var onKeyUp = function onKeyUp(e) {\n      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {\n        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n        e.stopPropagation();\n        state.isPressed = false;\n        var target = e.target;\n        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\", state.target.contains(target));\n        removeAllGlobalListeners();\n        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute(\"role\") === \"link\")) state.target.click();\n      }\n    };\n    if (typeof PointerEvent !== \"undefined\") {\n      pressProps.onPointerDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ((0, $bx7SL$isVirtualPointerEvent)(e.nativeEvent)) {\n          state.pointerType = \"virtual\";\n          return;\n        }\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        state.pointerType = e.pointerType;\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n          if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n          triggerPressStart(e, state.pointerType);\n          addGlobalListener(document, \"pointermove\", onPointerMove, false);\n          addGlobalListener(document, \"pointerup\", onPointerUp, false);\n          addGlobalListener(document, \"pointercancel\", onPointerCancel, false);\n        }\n      };\n      pressProps.onMouseDown = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (e.button === 0) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n          e.stopPropagation();\n        }\n      };\n      pressProps.onPointerUp = function (e) {\n        if (!e.currentTarget.contains(e.target) || state.pointerType === \"virtual\") return;\n        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n      };\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId !== state.activePointerId) return;\n        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        }\n      };\n      var onPointerCancel = function onPointerCancel(e) {\n        cancel(e);\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) return;\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = (0, $bx7SL$isVirtualClick)(e.nativeEvent) ? \"virtual\" : \"mouse\";\n        if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(document, \"mouseup\", onMouseUp, false);\n      };\n      pressProps.onMouseEnter = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n      pressProps.onMouseLeave = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n      pressProps.onMouseUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType);\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button !== 0) return;\n        state.isPressed = false;\n        removeAllGlobalListeners();\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isOverTarget = false;\n      };\n      pressProps.onTouchStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        var touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);\n        if (!touch) return;\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = \"touch\";\n        if (!isDisabled && !preventFocusOnPress) (0, $bx7SL$focusWithoutScrolling)(e.currentTarget);\n        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(window, \"scroll\", onScroll, true);\n      };\n      pressProps.onTouchMove = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n      pressProps.onTouchEnd = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (!state.isPressed) return;\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) triggerPressEnd(e, state.pointerType, false);\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        removeAllGlobalListeners();\n      };\n      pressProps.onTouchCancel = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed) cancel(e);\n      };\n      var onScroll = function onScroll(e) {\n        if (state.isPressed && e.target.contains(state.target)) cancel({\n          currentTarget: state.target,\n          shiftKey: false,\n          ctrlKey: false,\n          metaKey: false,\n          altKey: false\n        });\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    }\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress, cancel, cancelOnPointerExit, triggerPressEnd, triggerPressStart, triggerPressUp]);\n  (0, $bx7SL$useEffect)(function () {\n    return function () {\n      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(ref.current.target);\n    };\n  }, [allowTextSelectionOnPress]);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: (0, $bx7SL$mergeProps)(domProps, pressProps)\n  };\n}\nfunction $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {\n  return target.tagName === \"A\" && target.hasAttribute(\"href\");\n}\nfunction $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {\n  var key = event.key,\n    code = event.code;\n  var element = currentTarget;\n  var role = element.getAttribute(\"role\");\n  return (key === \"Enter\" || key === \" \" || key === \"Spacebar\" || code === \"Space\") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === \"button\" && key !== \"Enter\") && !(role === \"link\" && key !== \"Enter\");\n}\nfunction $f6c31cce2adf654f$var$getTouchFromEvent(event) {\n  var targetTouches = event.targetTouches;\n  if (targetTouches.length > 0) return targetTouches[0];\n  return null;\n}\nfunction $f6c31cce2adf654f$var$getTouchById(event, pointerId) {\n  var changedTouches = event.changedTouches;\n  for (var i = 0; i < changedTouches.length; i++) {\n    var touch = changedTouches[i];\n    if (touch.identifier === pointerId) return touch;\n  }\n  return null;\n}\nfunction $f6c31cce2adf654f$var$createEvent(target, e) {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\nfunction $f6c31cce2adf654f$var$getPointClientRect(point) {\n  var offsetX = point.width / 2 || point.radiusX || 0;\n  var offsetY = point.height / 2 || point.radiusY || 0;\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\nfunction $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {\n  if (a.left > b.right || b.left > a.right) return false;\n  if (a.top > b.bottom || b.top > a.bottom) return false;\n  return true;\n}\nfunction $f6c31cce2adf654f$var$isOverTarget(point, target) {\n  var rect = target.getBoundingClientRect();\n  var pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);\n  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefault(target) {\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {\n  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);\n  if (target instanceof HTMLButtonElement) return target.type !== \"submit\";\n  return true;\n}\nvar $f6c31cce2adf654f$var$nonTextInputTypes = new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction $f6c31cce2adf654f$var$isValidInputKey(target, key) {\n  return target.type === \"checkbox\" || target.type === \"radio\" ? key === \" \" : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);\n}\nvar $3b117e43dc0ca95d$export$27c701ed9e449e99 = (0, $bx7SL$react).forwardRef(function (_ref4, ref) {\n  var children = _ref4.children,\n    props = _objectWithoutProperties(_ref4, _excluded3);\n  var newRef = (0, $bx7SL$useRef)();\n  ref = ref !== null && ref !== void 0 ? ref : newRef;\n  var _ref5 = (0, $f6c31cce2adf654f$export$45712eceda6fad21)(_objectSpread(_objectSpread({}, props), {}, {\n      ref: ref\n    })),\n    pressProps = _ref5.pressProps;\n  var child = (0, $bx7SL$react).Children.only(children);\n  return (0, $bx7SL$react).cloneElement(child, _objectSpread({\n    ref: ref\n  }, (0, $bx7SL$mergeProps)(child.props, pressProps)));\n});\nvar $f1ab8c75478c6f73$export$3351871ee4b288b8 = (0, $bx7SL$react).forwardRef(function (_ref6, ref) {\n  var children = _ref6.children,\n    props = _objectWithoutProperties(_ref6, _excluded4);\n  var isRegistered = (0, $bx7SL$useRef)(false);\n  var prevContext = (0, $bx7SL$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n  var context = (0, $bx7SL$mergeProps)(prevContext || {}, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),\n    register: function register() {\n      isRegistered.current = true;\n      if (prevContext) prevContext.register();\n    }\n  }));\n  (0, $bx7SL$useSyncRef)(prevContext, ref);\n  (0, $bx7SL$useEffect)(function () {\n    if (!isRegistered.current) {\n      console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n      isRegistered.current = true;\n    }\n  }, []);\n  return (0, $bx7SL$react).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {\n    value: context\n  }, children);\n});\nvar $8a9cb279dc87e130$export$905e7fc544a71f36 = function () {\n  function $8a9cb279dc87e130$export$905e7fc544a71f36(type, nativeEvent) {\n    _classCallCheck(this, $8a9cb279dc87e130$export$905e7fc544a71f36);\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target;\n    this.currentTarget = nativeEvent.currentTarget;\n    this.relatedTarget = nativeEvent.relatedTarget;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n  _createClass($8a9cb279dc87e130$export$905e7fc544a71f36, [{\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.nativeEvent.defaultPrevented;\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n      this.nativeEvent.preventDefault();\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.nativeEvent.stopPropagation();\n      this.isPropagationStopped = function () {\n        return true;\n      };\n    }\n  }, {\n    key: \"isPropagationStopped\",\n    value: function isPropagationStopped() {\n      return false;\n    }\n  }, {\n    key: \"persist\",\n    value: function persist() {}\n  }]);\n  return $8a9cb279dc87e130$export$905e7fc544a71f36;\n}();\nfunction $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {\n  var stateRef = (0, $bx7SL$useRef)({\n    isFocused: false,\n    observer: null\n  });\n  (0, $bx7SL$useLayoutEffect)(function () {\n    var state = stateRef.current;\n    return function () {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n  var dispatchBlur = (0, $bx7SL$useEffectEvent)(function (e) {\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n  });\n  return (0, $bx7SL$useCallback)(function (e) {\n    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {\n      stateRef.current.isFocused = true;\n      var target = e.target;\n      var onBlurHandler = function onBlurHandler(e) {\n        stateRef.current.isFocused = false;\n        if (target.disabled) dispatchBlur(new $8a9cb279dc87e130$export$905e7fc544a71f36(\"blur\", e));\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n      target.addEventListener(\"focusout\", onBlurHandler, {\n        once: true\n      });\n      stateRef.current.observer = new MutationObserver(function () {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          var relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent(\"blur\", {\n            relatedTarget: relatedTargetEl\n          }));\n          target.dispatchEvent(new FocusEvent(\"focusout\", {\n            bubbles: true,\n            relatedTarget: relatedTargetEl\n          }));\n        }\n      });\n      stateRef.current.observer.observe(target, {\n        attributes: true,\n        attributeFilter: [\"disabled\"]\n      });\n    }\n  }, [dispatchBlur]);\n}\nfunction $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {\n  var isDisabled = props.isDisabled,\n    onFocusProp = props.onFocus,\n    onBlurProp = props.onBlur,\n    onFocusChange = props.onFocusChange;\n  var onBlur = (0, $bx7SL$useCallback)(function (e) {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) onBlurProp(e);\n      if (onFocusChange) onFocusChange(false);\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n  var onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);\n  var onFocus = (0, $bx7SL$useCallback)(function (e) {\n    if (e.target === e.currentTarget && document.activeElement === e.target) {\n      if (onFocusProp) onFocusProp(e);\n      if (onFocusChange) onFocusChange(true);\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n  return {\n    focusProps: {\n      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : undefined,\n      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : undefined\n    }\n  };\n}\nvar $507fabe10e71c6fb$var$currentModality = null;\nvar $507fabe10e71c6fb$var$changeHandlers = new Set();\nvar $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;\nvar $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\nvar $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\nvar $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {\n  for (var handler of $507fabe10e71c6fb$var$changeHandlers) handler(modality, e);\n}\nfunction $507fabe10e71c6fb$var$isValidKey(e) {\n  return !(e.metaKey || !(0, $bx7SL$isMac)() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nfunction $507fabe10e71c6fb$var$handleKeyboardEvent(e) {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n  if ($507fabe10e71c6fb$var$isValidKey(e)) {\n    $507fabe10e71c6fb$var$currentModality = \"keyboard\";\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction $507fabe10e71c6fb$var$handlePointerEvent(e) {\n  $507fabe10e71c6fb$var$currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction $507fabe10e71c6fb$var$handleClickEvent(e) {\n  if ((0, $bx7SL$isVirtualClick)(e)) {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    $507fabe10e71c6fb$var$currentModality = \"virtual\";\n  }\n}\nfunction $507fabe10e71c6fb$var$handleFocusEvent(e) {\n  if (e.target === window || e.target === document) return;\n  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {\n    $507fabe10e71c6fb$var$currentModality = \"virtual\";\n    $507fabe10e71c6fb$var$triggerChangeHandlers(\"virtual\", e);\n  }\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\n}\nfunction $507fabe10e71c6fb$var$handleWindowBlur() {\n  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;\n}\nfunction $507fabe10e71c6fb$var$setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || $507fabe10e71c6fb$var$hasSetupGlobalListeners) return;\n  var focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n  document.addEventListener(\"keydown\", $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener(\"keyup\", $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n  document.addEventListener(\"click\", $507fabe10e71c6fb$var$handleClickEvent, true);\n  window.addEventListener(\"focus\", $507fabe10e71c6fb$var$handleFocusEvent, true);\n  window.addEventListener(\"blur\", $507fabe10e71c6fb$var$handleWindowBlur, false);\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"pointermove\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"pointerup\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n  } else {\n    document.addEventListener(\"mousedown\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"mousemove\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n    document.addEventListener(\"mouseup\", $507fabe10e71c6fb$var$handlePointerEvent, true);\n  }\n  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;\n}\nif (typeof document !== \"undefined\") {\n  if (document.readyState !== \"loading\") $507fabe10e71c6fb$var$setupGlobalFocusEvents();else document.addEventListener(\"DOMContentLoaded\", $507fabe10e71c6fb$var$setupGlobalFocusEvents);\n}\nfunction $507fabe10e71c6fb$export$b9b3dfddab17db27() {\n  return $507fabe10e71c6fb$var$currentModality !== \"pointer\";\n}\nfunction $507fabe10e71c6fb$export$630ff653c5ada6a9() {\n  return $507fabe10e71c6fb$var$currentModality;\n}\nfunction $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {\n  $507fabe10e71c6fb$var$currentModality = modality;\n  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);\n}\nfunction $507fabe10e71c6fb$export$98e20ec92f614cfe() {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  var _ref7 = (0, $bx7SL$useState)($507fabe10e71c6fb$var$currentModality),\n    _ref8 = _slicedToArray(_ref7, 2),\n    modality = _ref8[0],\n    setModality = _ref8[1];\n  (0, $bx7SL$useEffect)(function () {\n    var handler = function handler() {\n      setModality($507fabe10e71c6fb$var$currentModality);\n    };\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, []);\n  return (0, $bx7SL$useIsSSR)() ? null : modality;\n}\nfunction $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {\n  return !(isTextInput && modality === \"keyboard\" && e instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\nfunction $507fabe10e71c6fb$export$ffd9e5021c1fb2d6() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isTextInput = props.isTextInput,\n    autoFocus = props.autoFocus;\n  var _ref9 = (0, $bx7SL$useState)(autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()),\n    _ref10 = _slicedToArray(_ref9, 2),\n    isFocusVisibleState = _ref10[0],\n    setFocusVisible = _ref10[1];\n  $507fabe10e71c6fb$export$ec71b4b83ac08ec3(function (isFocusVisible) {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {\n    isTextInput: isTextInput\n  });\n  return {\n    isFocusVisible: isFocusVisibleState\n  };\n}\nfunction $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {\n  $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n  (0, $bx7SL$useEffect)(function () {\n    var handler = function handler(modality, e) {\n      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e)) return;\n      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());\n    };\n    $507fabe10e71c6fb$var$changeHandlers.add(handler);\n    return function () {\n      $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n    };\n  }, deps);\n}\nfunction $9ab94262bd0047c7$export$420e68273165f4ec(props) {\n  var isDisabled = props.isDisabled,\n    onBlurWithin = props.onBlurWithin,\n    onFocusWithin = props.onFocusWithin,\n    onFocusWithinChange = props.onFocusWithinChange;\n  var state = (0, $bx7SL$useRef)({\n    isFocusWithin: false\n  });\n  var onBlur = (0, $bx7SL$useCallback)(function (e) {\n    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n      state.current.isFocusWithin = false;\n      if (onBlurWithin) onBlurWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(false);\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n  var onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);\n  var onFocus = (0, $bx7SL$useCallback)(function (e) {\n    if (!state.current.isFocusWithin && document.activeElement === e.target) {\n      if (onFocusWithin) onFocusWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(true);\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n  if (isDisabled) return {\n    focusWithinProps: {\n      onFocus: null,\n      onBlur: null\n    }\n  };\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\nvar $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\nvar $6179b936705e76d3$var$hoverCount = 0;\nfunction $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {\n  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;\n  setTimeout(function () {\n    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\nfunction $6179b936705e76d3$var$handleGlobalPointerEvent(e) {\n  if (e.pointerType === \"touch\") $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();\n}\nfunction $6179b936705e76d3$var$setupGlobalTouchEvents() {\n  if (typeof document === \"undefined\") return;\n  if (typeof PointerEvent !== \"undefined\") document.addEventListener(\"pointerup\", $6179b936705e76d3$var$handleGlobalPointerEvent);else document.addEventListener(\"touchend\", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  $6179b936705e76d3$var$hoverCount++;\n  return function () {\n    $6179b936705e76d3$var$hoverCount--;\n    if ($6179b936705e76d3$var$hoverCount > 0) return;\n    if (typeof PointerEvent !== \"undefined\") document.removeEventListener(\"pointerup\", $6179b936705e76d3$var$handleGlobalPointerEvent);else document.removeEventListener(\"touchend\", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n  };\n}\nfunction $6179b936705e76d3$export$ae780daf29e6d456(props) {\n  var onHoverStart = props.onHoverStart,\n    onHoverChange = props.onHoverChange,\n    onHoverEnd = props.onHoverEnd,\n    isDisabled = props.isDisabled;\n  var _ref11 = (0, $bx7SL$useState)(false),\n    _ref12 = _slicedToArray(_ref11, 2),\n    isHovered = _ref12[0],\n    setHovered = _ref12[1];\n  var state = (0, $bx7SL$useRef)({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: \"\",\n    target: null\n  }).current;\n  (0, $bx7SL$useEffect)($6179b936705e76d3$var$setupGlobalTouchEvents, []);\n  var _ref13 = (0, $bx7SL$useMemo)(function () {\n      var triggerHoverStart = function triggerHoverStart(event, pointerType) {\n        state.pointerType = pointerType;\n        if (isDisabled || pointerType === \"touch\" || state.isHovered || !event.currentTarget.contains(event.target)) return;\n        state.isHovered = true;\n        var target = event.currentTarget;\n        state.target = target;\n        if (onHoverStart) onHoverStart({\n          type: \"hoverstart\",\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(true);\n        setHovered(true);\n      };\n      var triggerHoverEnd = function triggerHoverEnd(event, pointerType) {\n        state.pointerType = \"\";\n        state.target = null;\n        if (pointerType === \"touch\" || !state.isHovered) return;\n        state.isHovered = false;\n        var target = event.currentTarget;\n        if (onHoverEnd) onHoverEnd({\n          type: \"hoverend\",\n          target: target,\n          pointerType: pointerType\n        });\n        if (onHoverChange) onHoverChange(false);\n        setHovered(false);\n      };\n      var hoverProps = {};\n      if (typeof PointerEvent !== \"undefined\") {\n        hoverProps.onPointerEnter = function (e) {\n          if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === \"mouse\") return;\n          triggerHoverStart(e, e.pointerType);\n        };\n        hoverProps.onPointerLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n        };\n      } else {\n        hoverProps.onTouchStart = function () {\n          state.ignoreEmulatedMouseEvents = true;\n        };\n        hoverProps.onMouseEnter = function (e) {\n          if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, \"mouse\");\n          state.ignoreEmulatedMouseEvents = false;\n        };\n        hoverProps.onMouseLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, \"mouse\");\n        };\n      }\n      return {\n        hoverProps: hoverProps,\n        triggerHoverEnd: triggerHoverEnd\n      };\n    }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]),\n    hoverProps = _ref13.hoverProps,\n    triggerHoverEnd = _ref13.triggerHoverEnd;\n  (0, $bx7SL$useEffect)(function () {\n    if (isDisabled) triggerHoverEnd({\n      currentTarget: state.target\n    }, state.pointerType);\n  }, [isDisabled]);\n  return {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  };\n}\nfunction $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {\n  var ref = props.ref,\n    onInteractOutside = props.onInteractOutside,\n    isDisabled = props.isDisabled,\n    onInteractOutsideStart = props.onInteractOutsideStart;\n  var stateRef = (0, $bx7SL$useRef)({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  var onPointerDown = (0, $bx7SL$useEffectEvent)(function (e) {\n    if (onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n      if (onInteractOutsideStart) onInteractOutsideStart(e);\n      stateRef.current.isPointerDown = true;\n    }\n  });\n  var triggerInteractOutside = (0, $bx7SL$useEffectEvent)(function (e) {\n    if (onInteractOutside) onInteractOutside(e);\n  });\n  (0, $bx7SL$useEffect)(function () {\n    var state = stateRef.current;\n    if (isDisabled) return;\n    if (typeof PointerEvent !== \"undefined\") {\n      var onPointerUp = function onPointerUp(e) {\n        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      document.addEventListener(\"pointerdown\", onPointerDown, true);\n      document.addEventListener(\"pointerup\", onPointerUp, true);\n      return function () {\n        document.removeEventListener(\"pointerdown\", onPointerDown, true);\n        document.removeEventListener(\"pointerup\", onPointerUp, true);\n      };\n    } else {\n      var onMouseUp = function onMouseUp(e) {\n        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;else if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      document.addEventListener(\"mousedown\", onPointerDown, true);\n      document.addEventListener(\"mouseup\", onMouseUp, true);\n      document.addEventListener(\"touchstart\", onPointerDown, true);\n      document.addEventListener(\"touchend\", onTouchEnd, true);\n      return function () {\n        document.removeEventListener(\"mousedown\", onPointerDown, true);\n        document.removeEventListener(\"mouseup\", onMouseUp, true);\n        document.removeEventListener(\"touchstart\", onPointerDown, true);\n        document.removeEventListener(\"touchend\", onTouchEnd, true);\n      };\n    }\n  }, [ref, isDisabled, onPointerDown, triggerInteractOutside]);\n}\nfunction $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {\n  if (event.button > 0) return false;\n  if (event.target) {\n    var ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;\n    if (event.target.closest(\"[data-react-aria-top-layer]\")) return false;\n  }\n  return ref.current && !ref.current.contains(event.target);\n}\nfunction $93925083ecbb358c$export$48d1ea6320830260(handler) {\n  if (!handler) return;\n  var shouldStopPropagation = true;\n  return function (e) {\n    var event = _objectSpread(_objectSpread({}, e), {}, {\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented: function isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation: function stopPropagation() {\n        console.error(\"stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.\");\n      },\n      continuePropagation: function continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    });\n    handler(event);\n    if (shouldStopPropagation) e.stopPropagation();\n  };\n}\nfunction $46d819fcbaf35654$export$8f71654801c2f7cd(props) {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyDown),\n      onKeyUp: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyUp)\n    }\n  };\n}\nfunction $e8a7022cf87cba2a$export$36da96379f79f245(props) {\n  var onMoveStart = props.onMoveStart,\n    onMove = props.onMove,\n    onMoveEnd = props.onMoveEnd;\n  var state = (0, $bx7SL$useRef)({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n  var _ref14 = (0, $bx7SL$useGlobalListeners)(),\n    addGlobalListener = _ref14.addGlobalListener,\n    removeGlobalListener = _ref14.removeGlobalListener;\n  var move = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType, deltaX, deltaY) {\n    if (deltaX === 0 && deltaY === 0) return;\n    if (!state.current.didMove) {\n      state.current.didMove = true;\n      onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({\n        type: \"movestart\",\n        pointerType: pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n    onMove({\n      type: \"move\",\n      pointerType: pointerType,\n      deltaX: deltaX,\n      deltaY: deltaY,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n  });\n  var end = (0, $bx7SL$useEffectEvent)(function (originalEvent, pointerType) {\n    (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)();\n    if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({\n      type: \"moveend\",\n      pointerType: pointerType,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n  });\n  var moveProps = (0, $bx7SL$useMemo)(function () {\n    var moveProps = {};\n    var start = function start() {\n      (0, $14c0b72509d70225$export$16a4697467175487)();\n      state.current.didMove = false;\n    };\n    if (typeof PointerEvent === \"undefined\") {\n      var onMouseMove = function onMouseMove(e) {\n        if (e.button === 0) {\n          move(e, \"mouse\", e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button === 0) {\n          end(e, \"mouse\");\n          removeGlobalListener(window, \"mousemove\", onMouseMove, false);\n          removeGlobalListener(window, \"mouseup\", onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = function (e) {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, \"mousemove\", onMouseMove, false);\n          addGlobalListener(window, \"mouseup\", onMouseUp, false);\n        }\n      };\n      var onTouchMove = function onTouchMove(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref15) {\n          var identifier = _ref15.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          var _e$changedTouches$tou = e.changedTouches[touch],\n            pageX = _e$changedTouches$tou.pageX,\n            pageY = _e$changedTouches$tou.pageY;\n          move(e, \"touch\", pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: pageX,\n            pageY: pageY\n          };\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref16) {\n          var identifier = _ref16.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          end(e, \"touch\");\n          state.current.id = null;\n          removeGlobalListener(window, \"touchmove\", onTouchMove);\n          removeGlobalListener(window, \"touchend\", onTouchEnd);\n          removeGlobalListener(window, \"touchcancel\", onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = function (e) {\n        if (e.changedTouches.length === 0 || state.current.id != null) return;\n        var _e$changedTouches$ = e.changedTouches[0],\n          pageX = _e$changedTouches$.pageX,\n          pageY = _e$changedTouches$.pageY,\n          identifier = _e$changedTouches$.identifier;\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX: pageX,\n          pageY: pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, \"touchmove\", onTouchMove, false);\n        addGlobalListener(window, \"touchend\", onTouchEnd, false);\n        addGlobalListener(window, \"touchcancel\", onTouchEnd, false);\n      };\n    } else {\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || \"mouse\";\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || \"mouse\";\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, \"pointermove\", onPointerMove, false);\n          removeGlobalListener(window, \"pointerup\", onPointerUp, false);\n          removeGlobalListener(window, \"pointercancel\", onPointerUp, false);\n        }\n      };\n      moveProps.onPointerDown = function (e) {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          state.current.id = e.pointerId;\n          addGlobalListener(window, \"pointermove\", onPointerMove, false);\n          addGlobalListener(window, \"pointerup\", onPointerUp, false);\n          addGlobalListener(window, \"pointercancel\", onPointerUp, false);\n        }\n      };\n    }\n    var triggerKeyboardMove = function triggerKeyboardMove(e, deltaX, deltaY) {\n      start();\n      move(e, \"keyboard\", deltaX, deltaY);\n      end(e, \"keyboard\");\n    };\n    moveProps.onKeyDown = function (e) {\n      switch (e.key) {\n        case \"Left\":\n        case \"ArrowLeft\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case \"Right\":\n        case \"ArrowRight\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case \"Up\":\n        case \"ArrowUp\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case \"Down\":\n        case \"ArrowDown\":\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n    return moveProps;\n  }, [state, addGlobalListener, removeGlobalListener, move, end]);\n  return {\n    moveProps: moveProps\n  };\n}\nfunction $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {\n  var onScroll = props.onScroll,\n    isDisabled = props.isDisabled;\n  var onScrollHandler = (0, $bx7SL$useCallback)(function (e) {\n    if (e.ctrlKey) return;\n    e.preventDefault();\n    e.stopPropagation();\n    if (onScroll) onScroll({\n      deltaX: e.deltaX,\n      deltaY: e.deltaY\n    });\n  }, [onScroll]);\n  (0, $bx7SL$useEvent)(ref, \"wheel\", isDisabled ? null : onScrollHandler);\n}\nvar $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n  var isDisabled = props.isDisabled,\n    onLongPressStart = props.onLongPressStart,\n    onLongPressEnd = props.onLongPressEnd,\n    onLongPress = props.onLongPress,\n    _props$threshold = props.threshold,\n    threshold = _props$threshold === void 0 ? $8a26561d2877236e$var$DEFAULT_THRESHOLD : _props$threshold,\n    accessibilityDescription = props.accessibilityDescription;\n  var timeRef = (0, $bx7SL$useRef)(null);\n  var _ref17 = (0, $bx7SL$useGlobalListeners)(),\n    addGlobalListener = _ref17.addGlobalListener,\n    removeGlobalListener = _ref17.removeGlobalListener;\n  var _ref18 = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({\n      isDisabled: isDisabled,\n      onPressStart: function onPressStart(e) {\n        if (e.pointerType === \"mouse\" || e.pointerType === \"touch\") {\n          if (onLongPressStart) onLongPressStart(_objectSpread(_objectSpread({}, e), {}, {\n            type: \"longpressstart\"\n          }));\n          timeRef.current = setTimeout(function () {\n            e.target.dispatchEvent(new PointerEvent(\"pointercancel\", {\n              bubbles: true\n            }));\n            if (onLongPress) onLongPress(_objectSpread(_objectSpread({}, e), {}, {\n              type: \"longpress\"\n            }));\n            timeRef.current = null;\n          }, threshold);\n          if (e.pointerType === \"touch\") {\n            var onContextMenu = function onContextMenu(e) {\n              e.preventDefault();\n            };\n            addGlobalListener(e.target, \"contextmenu\", onContextMenu, {\n              once: true\n            });\n            addGlobalListener(window, \"pointerup\", function () {\n              setTimeout(function () {\n                removeGlobalListener(e.target, \"contextmenu\", onContextMenu);\n              }, 30);\n            }, {\n              once: true\n            });\n          }\n        }\n      },\n      onPressEnd: function onPressEnd(e) {\n        if (timeRef.current) clearTimeout(timeRef.current);\n        if (onLongPressEnd && (e.pointerType === \"mouse\" || e.pointerType === \"touch\")) onLongPressEnd(_objectSpread(_objectSpread({}, e), {}, {\n          type: \"longpressend\"\n        }));\n      }\n    }),\n    pressProps = _ref18.pressProps;\n  var descriptionProps = (0, $bx7SL$useDescription)(onLongPress && !isDisabled ? accessibilityDescription : null);\n  return {\n    longPressProps: (0, $bx7SL$mergeProps)(pressProps, descriptionProps)\n  };\n}\nexport { $3b117e43dc0ca95d$export$27c701ed9e449e99 as Pressable, $f1ab8c75478c6f73$export$3351871ee4b288b8 as PressResponder, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6 as useFocus, $507fabe10e71c6fb$export$b9b3dfddab17db27 as isFocusVisible, $507fabe10e71c6fb$export$630ff653c5ada6a9 as getInteractionModality, $507fabe10e71c6fb$export$8397ddfc504fdb9a as setInteractionModality, $507fabe10e71c6fb$export$98e20ec92f614cfe as useInteractionModality, $507fabe10e71c6fb$export$ffd9e5021c1fb2d6 as useFocusVisible, $507fabe10e71c6fb$export$ec71b4b83ac08ec3 as useFocusVisibleListener, $9ab94262bd0047c7$export$420e68273165f4ec as useFocusWithin, $6179b936705e76d3$export$ae780daf29e6d456 as useHover, $e0b6e0b68ec7f50f$export$872b660ac5a1ff98 as useInteractOutside, $46d819fcbaf35654$export$8f71654801c2f7cd as useKeyboard, $e8a7022cf87cba2a$export$36da96379f79f245 as useMove, $f6c31cce2adf654f$export$45712eceda6fad21 as usePress, $7d0a636d7a4dcefd$export$2123ff2b87c81ca as useScrollWheel, $8a26561d2877236e$export$c24ed0104d07eab9 as useLongPress };","map":{"version":3,"names":["$14c0b72509d70225$var$state","$14c0b72509d70225$var$savedUserSelect","$14c0b72509d70225$var$modifiedElementMap","WeakMap","$14c0b72509d70225$export$16a4697467175487","target","$bx7SL$isIOS","document","documentElement","style","webkitUserSelect","HTMLElement","SVGElement","set","userSelect","$14c0b72509d70225$export$b0d6fa1ab32e3295","setTimeout","$bx7SL$runAfterTransition","has","targetOldUserSelect","get","getAttribute","removeAttribute","delete","$ae1eeba8b9eafd08$export$5165eccb35aaadb5","$bx7SL$react","createContext","displayName","$f6c31cce2adf654f$var$usePressResponderContext","props","context","$bx7SL$useContext","register","contextProps","_objectWithoutProperties","_excluded","$bx7SL$mergeProps","$bx7SL$useSyncRef","ref","$f6c31cce2adf654f$export$45712eceda6fad21","_$f6c31cce2adf654f$va","onPress","onPressChange","onPressStart","onPressEnd","onPressUp","isDisabled","isPressedProp","isPressed","preventFocusOnPress","shouldCancelOnPointerExit","allowTextSelectionOnPress","_","domProps","_excluded2","_ref","$bx7SL$useState","_ref2","_slicedToArray","setPressed","$bx7SL$useRef","ignoreEmulatedMouseEvents","ignoreClickAfterPress","didFirePressStart","activePointerId","isOverTarget","pointerType","_ref3","$bx7SL$useGlobalListeners","addGlobalListener","removeAllGlobalListeners","triggerPressStart","$bx7SL$useEffectEvent","originalEvent","state","current","type","currentTarget","shiftKey","metaKey","ctrlKey","altKey","triggerPressEnd","wasPressed","arguments","length","undefined","triggerPressUp","cancel","e","$f6c31cce2adf654f$var$createEvent","cancelOnPointerExit","pressProps","$bx7SL$useMemo","onKeyDown","$f6c31cce2adf654f$var$isValidKeyboardEvent","nativeEvent","contains","$f6c31cce2adf654f$var$shouldPreventDefaultKeyboard","key","preventDefault","stopPropagation","repeat","onKeyUp","$f6c31cce2adf654f$var$isHTMLAnchorLink","onClick","button","$bx7SL$isVirtualClick","$bx7SL$focusWithoutScrolling","click","PointerEvent","onPointerDown","$bx7SL$isVirtualPointerEvent","$f6c31cce2adf654f$var$shouldPreventDefault","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","$f6c31cce2adf654f$var$isOverTarget","onDragStart","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","$f6c31cce2adf654f$var$getTouchFromEvent","identifier","window","onScroll","onTouchMove","$f6c31cce2adf654f$var$getTouchById","onTouchEnd","onTouchCancel","$bx7SL$useEffect","tagName","hasAttribute","event","code","element","role","HTMLInputElement","$f6c31cce2adf654f$var$isValidInputKey","HTMLTextAreaElement","isContentEditable","targetTouches","changedTouches","i","$f6c31cce2adf654f$var$getPointClientRect","point","offsetX","width","radiusX","offsetY","height","radiusY","top","clientY","right","clientX","bottom","left","$f6c31cce2adf654f$var$areRectanglesOverlapping","a","b","rect","getBoundingClientRect","pointRect","draggable","HTMLButtonElement","$f6c31cce2adf654f$var$nonTextInputTypes","Set","$3b117e43dc0ca95d$export$27c701ed9e449e99","forwardRef","_ref4","children","_excluded3","newRef","_ref5","_objectSpread","child","Children","only","cloneElement","$f1ab8c75478c6f73$export$3351871ee4b288b8","_ref6","_excluded4","isRegistered","prevContext","console","warn","createElement","Provider","value","$8a9cb279dc87e130$export$905e7fc544a71f36","_classCallCheck","relatedTarget","bubbles","cancelable","defaultPrevented","eventPhase","isTrusted","timeStamp","_createClass","isDefaultPrevented","isPropagationStopped","persist","$8a9cb279dc87e130$export$715c682d09d639cc","onBlur","stateRef","isFocused","observer","$bx7SL$useLayoutEffect","disconnect","dispatchBlur","$bx7SL$useCallback","HTMLSelectElement","onBlurHandler","disabled","addEventListener","once","MutationObserver","relatedTargetEl","activeElement","dispatchEvent","FocusEvent","observe","attributes","attributeFilter","$a1ea59d68270f0dd$export$f8168d8dd8fd66e6","onFocusProp","onFocus","onBlurProp","onFocusChange","onSyntheticFocus","focusProps","$507fabe10e71c6fb$var$currentModality","$507fabe10e71c6fb$var$changeHandlers","$507fabe10e71c6fb$var$hasSetupGlobalListeners","$507fabe10e71c6fb$var$hasEventBeforeFocus","$507fabe10e71c6fb$var$hasBlurredWindowRecently","$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","$507fabe10e71c6fb$var$triggerChangeHandlers","modality","handler","$507fabe10e71c6fb$var$isValidKey","$bx7SL$isMac","$507fabe10e71c6fb$var$handleKeyboardEvent","$507fabe10e71c6fb$var$handlePointerEvent","$507fabe10e71c6fb$var$handleClickEvent","$507fabe10e71c6fb$var$handleFocusEvent","$507fabe10e71c6fb$var$handleWindowBlur","$507fabe10e71c6fb$var$setupGlobalFocusEvents","focus","prototype","apply","readyState","$507fabe10e71c6fb$export$b9b3dfddab17db27","$507fabe10e71c6fb$export$630ff653c5ada6a9","$507fabe10e71c6fb$export$8397ddfc504fdb9a","$507fabe10e71c6fb$export$98e20ec92f614cfe","_ref7","_ref8","setModality","add","$bx7SL$useIsSSR","$507fabe10e71c6fb$var$isKeyboardFocusEvent","isTextInput","KeyboardEvent","$507fabe10e71c6fb$export$ffd9e5021c1fb2d6","autoFocus","_ref9","_ref10","isFocusVisibleState","setFocusVisible","$507fabe10e71c6fb$export$ec71b4b83ac08ec3","isFocusVisible","fn","deps","opts","$9ab94262bd0047c7$export$420e68273165f4ec","onBlurWithin","onFocusWithin","onFocusWithinChange","isFocusWithin","focusWithinProps","$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$hoverCount","$6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$handleGlobalPointerEvent","$6179b936705e76d3$var$setupGlobalTouchEvents","removeEventListener","$6179b936705e76d3$export$ae780daf29e6d456","onHoverStart","onHoverChange","onHoverEnd","_ref11","_ref12","isHovered","setHovered","_ref13","triggerHoverStart","triggerHoverEnd","hoverProps","onPointerEnter","onPointerLeave","$e0b6e0b68ec7f50f$export$872b660ac5a1ff98","onInteractOutside","onInteractOutsideStart","isPointerDown","$e0b6e0b68ec7f50f$var$isValidEvent","triggerInteractOutside","ownerDocument","closest","$93925083ecbb358c$export$48d1ea6320830260","shouldStopPropagation","error","continuePropagation","$46d819fcbaf35654$export$8f71654801c2f7cd","keyboardProps","$e8a7022cf87cba2a$export$36da96379f79f245","onMoveStart","onMove","onMoveEnd","didMove","lastPosition","id","_ref14","removeGlobalListener","move","deltaX","deltaY","end","moveProps","start","onMouseMove","pageX","pageY","_toConsumableArray","findIndex","_ref15","_e$changedTouches$tou","_ref16","_e$changedTouches$","triggerKeyboardMove","$7d0a636d7a4dcefd$export$2123ff2b87c81ca","onScrollHandler","$bx7SL$useEvent","$8a26561d2877236e$var$DEFAULT_THRESHOLD","$8a26561d2877236e$export$c24ed0104d07eab9","onLongPressStart","onLongPressEnd","onLongPress","_props$threshold","threshold","accessibilityDescription","timeRef","_ref17","_ref18","onContextMenu","clearTimeout","descriptionProps","$bx7SL$useDescription","longPressProps"],"sources":["C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\index.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\Pressable.tsx","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\usePress.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\textSelection.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\context.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\PressResponder.tsx","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocus.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\utils.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusVisible.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusWithin.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useHover.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useInteractOutside.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useKeyboard.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\createEventHandler.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useMove.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useScrollWheel.ts","C:\\Users\\Aromolaran\\Downloads\\sosocare-app-master\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useLongPress.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {Pressable} from './Pressable';\nexport {PressResponder} from './PressResponder';\nexport {useFocus} from './useFocus';\nexport {\n  isFocusVisible,\n  getInteractionModality,\n  setInteractionModality,\n  useInteractionModality,\n  useFocusVisible,\n  useFocusVisibleListener\n} from './useFocusVisible';\nexport {useFocusWithin} from './useFocusWithin';\nexport {useHover} from './useHover';\nexport {useInteractOutside} from './useInteractOutside';\nexport {useKeyboard} from './useKeyboard';\nexport {useMove} from './useMove';\nexport {usePress} from './usePress';\nexport {useScrollWheel} from './useScrollWheel';\nexport {useLongPress} from './useLongPress';\n\nexport type {FocusProps, FocusResult} from './useFocus';\nexport type {FocusVisibleHandler, FocusVisibleProps, FocusVisibleResult, Modality} from './useFocusVisible';\nexport type {FocusWithinProps, FocusWithinResult} from './useFocusWithin';\nexport type {HoverProps, HoverResult} from './useHover';\nexport type {InteractOutsideProps} from './useInteractOutside';\nexport type {KeyboardProps, KeyboardResult} from './useKeyboard';\nexport type {PressProps, PressHookProps, PressResult} from './usePress';\nexport type {MoveEvents} from '@react-types/shared';\nexport type {MoveResult} from './useMove';\nexport type {LongPressProps, LongPressResult} from './useLongPress';\nexport type {ScrollWheelProps} from './useScrollWheel';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<DOMAttributes, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<Element>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {DOMAttributes, FocusableElement, PointerType, PressEvents} from '@react-types/shared';\nimport {focusWithoutScrolling, isVirtualClick, isVirtualPointerEvent, mergeProps, useEffectEvent, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {PressResponderContext} from './context';\nimport {RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean,\n  /**\n   * Whether press events should be canceled when the pointer leaves the target while pressed.\n   * By default, this is `false`, which means if the pointer returns back over the target while\n   * still pressed, onPressStart will be fired again. If set to `true`, the press is canceled\n   * when the pointer leaves the target and onPressStart will not be fired if the pointer returns.\n   */\n  shouldCancelOnPointerExit?: boolean,\n  /** Whether text selection should be enabled on the pressable element. */\n  allowTextSelectionOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<Element>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: FocusableElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: DOMAttributes\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    shouldCancelOnPointerExit,\n    allowTextSelectionOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let triggerPressStart = useEffectEvent((originalEvent: EventBase, pointerType: PointerType) => {\n    let state = ref.current;\n    if (isDisabled || state.didFirePressStart) {\n      return;\n    }\n\n    if (onPressStart) {\n      onPressStart({\n        type: 'pressstart',\n        pointerType,\n        target: originalEvent.currentTarget as Element,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n\n    if (onPressChange) {\n      onPressChange(true);\n    }\n\n    state.didFirePressStart = true;\n    setPressed(true);\n  });\n\n  let triggerPressEnd = useEffectEvent((originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n    let state = ref.current;\n    if (!state.didFirePressStart) {\n      return;\n    }\n\n    state.ignoreClickAfterPress = true;\n    state.didFirePressStart = false;\n\n    if (onPressEnd) {\n      onPressEnd({\n        type: 'pressend',\n        pointerType,\n        target: originalEvent.currentTarget as Element,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n\n    if (onPressChange) {\n      onPressChange(false);\n    }\n\n    setPressed(false);\n\n    if (onPress && wasPressed && !isDisabled) {\n      onPress({\n        type: 'press',\n        pointerType,\n        target: originalEvent.currentTarget as Element,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n  });\n\n  let triggerPressUp = useEffectEvent((originalEvent: EventBase, pointerType: PointerType) => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (onPressUp) {\n      onPressUp({\n        type: 'pressup',\n        pointerType,\n        target: originalEvent.currentTarget as Element,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n  });\n\n  let cancel = useEffectEvent((e: EventBase) => {\n    let state = ref.current;\n    if (state.isPressed) {\n      if (state.isOverTarget) {\n        triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n      }\n      state.isPressed = false;\n      state.isOverTarget = false;\n      state.activePointerId = null;\n      state.pointerType = null;\n      removeAllGlobalListeners();\n      if (!allowTextSelectionOnPress) {\n        restoreTextSelection(state.target);\n      }\n    }\n  });\n\n  let cancelOnPointerExit = useEffectEvent((e: EventBase) => {\n    if (shouldCancelOnPointerExit) {\n      cancel(e);\n    }\n  });\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let pressProps: DOMAttributes = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target as Element)) {\n          if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        } else if (e.key === 'Enter' && isHTMLAnchorLink(e.currentTarget)) {\n          // If the target is a link, we won't have handled this above because we want the default\n          // browser behavior to open the link when pressing Enter. But we still need to prevent\n          // default so that elements above do not also handle it (e.g. table row).\n          e.stopPropagation();\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target as Element)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || isVirtualClick(e.nativeEvent))) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e, state.target)) {\n        if (shouldPreventDefaultKeyboard(e.target as Element, e.key)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n\n        state.isPressed = false;\n        let target = e.target as Element;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', state.target.contains(target));\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (state.target instanceof HTMLElement && state.target.contains(target) && (isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link')) {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n        // Ignore and let the onClick handler take care of it instead.\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        // https://bugs.webkit.org/show_bug.cgi?id=223202\n        if (isVirtualPointerEvent(e.nativeEvent)) {\n          state.pointerType = 'virtual';\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget as Element)) {\n          e.preventDefault();\n        }\n\n        state.pointerType = e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          if (!allowTextSelectionOnPress) {\n            disableTextSelection(state.target);\n          }\n\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.currentTarget as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n        if (!e.currentTarget.contains(e.target as Element) || state.pointerType === 'virtual') {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType || e.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) {\n            restoreTextSelection(state.target);\n          }\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.currentTarget)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        if (!allowTextSelectionOnPress) {\n          disableTextSelection(state.target);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (!allowTextSelectionOnPress) {\n          restoreTextSelection(state.target);\n        }\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as Element).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false,\n            altKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as Element)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [\n    addGlobalListener,\n    isDisabled,\n    preventFocusOnPress,\n    removeAllGlobalListeners,\n    allowTextSelectionOnPress,\n    cancel,\n    cancelOnPointerExit,\n    triggerPressEnd,\n    triggerPressStart,\n    triggerPressUp\n  ]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (!allowTextSelectionOnPress) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        restoreTextSelection(ref.current.target);\n      }\n    };\n  }, [allowTextSelectionOnPress]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: Element): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent, currentTarget: Element): boolean {\n  const {key, code} = event;\n  const element = currentTarget as HTMLElement;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') &&\n    !((element instanceof HTMLInputElement && !isValidInputKey(element, key)) ||\n      element instanceof HTMLTextAreaElement ||\n      element.isContentEditable) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: FocusableElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: Element) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is a draggable element.\n  return !(target instanceof HTMLElement) || !target.draggable;\n}\n\nfunction shouldPreventDefaultKeyboard(target: Element, key: string) {\n  if (target instanceof HTMLInputElement) {\n    return !isValidInputKey(target, key);\n  }\n\n  if (target instanceof HTMLButtonElement) {\n    return target.type !== 'submit';\n  }\n\n  return true;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nfunction isValidInputKey(target: HTMLInputElement, key: string) {\n  // Only space should toggle checkboxes and radios, not enter.\n  return target.type === 'checkbox' || target.type === 'radio'\n    ? key === ' '\n    : nonTextInputTypes.has(target.type);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element) {\n  if (isIOS()) {\n    if (state === 'default') {\n      savedUserSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    modifiedElementMap.set(target, target.style.userSelect);\n    target.style.userSelect = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element) {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n          if (document.documentElement.style.webkitUserSelect === 'none') {\n            document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target);\n\n      if (target.style.userSelect === 'none') {\n        target.style.userSelect = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<FocusableElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<FocusableElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n      isRegistered.current = true; // only warn once in strict mode.\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusableElement, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps<Target = FocusableElement> extends FocusEvents<Target> {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult<Target = FocusableElement> {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes<Target>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus<Target extends FocusableElement = FocusableElement>(props: FocusProps<Target>): FocusResult<Target> {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps<Target>['onBlur'] = useCallback((e: FocusEvent<Target>) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent<Target>(onBlur);\n\n  const onFocus: FocusProps<Target>['onFocus'] = useCallback((e: FocusEvent<Target>) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (e.target === e.currentTarget && document.activeElement === e.target) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : undefined\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useEffectEvent, useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent<Target = Element> implements ReactFocusEvent<Target> {\n  nativeEvent: FocusEvent;\n  target: EventTarget & Target;\n  currentTarget: EventTarget & Target;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as EventTarget & Target;\n    this.currentTarget = nativeEvent.currentTarget as EventTarget & Target;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent<Target = Element>(onBlur: (e: ReactFocusEvent<Target>) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    observer: null as MutationObserver\n  });\n\n  // Clean up MutationObserver on unmount. See below.\n  // eslint-disable-next-line arrow-body-style\n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  let dispatchBlur = useEffectEvent((e: SyntheticFocusEvent<Target>) => {\n    onBlur?.(e);\n  });\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent<Target>) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler = (e: FocusEvent) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          dispatchBlur(new SyntheticFocusEvent('blur', e));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer.disconnect();\n          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent('blur', {relatedTarget: relatedTargetEl}));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true, relatedTarget: relatedTargetEl}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, [dispatchBlur]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\nexport interface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return useIsSSR() ? null : modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (!state.current.isFocusWithin && document.activeElement === e.target) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        onFocus: null,\n        onBlur: null\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\nimport {useEffectEvent} from '@react-aria/utils';\n\nexport interface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n\n  let onPointerDown = useEffectEvent((e: SyntheticEvent) => {\n    if (onInteractOutside && isValidEvent(e, ref)) {\n      if (onInteractOutsideStart) {\n        onInteractOutsideStart(e);\n      }\n      stateRef.current.isPointerDown = true;\n    }\n  });\n\n  let triggerInteractOutside = useEffectEvent((e: SyntheticEvent) => {\n    if (onInteractOutside) {\n      onInteractOutside(e);\n    }\n  });\n\n  useEffect(() => {\n    let state = stateRef.current;\n    if (isDisabled) {\n      return;\n    }\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, isDisabled, onPointerDown, triggerInteractOutside]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  if (event.target) {\n    // if the event target is no longer in the document, ignore\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n\n    // If the target is within a top layer element (e.g. toasts), ignore.\n    if (event.target.closest('[data-react-aria-top-layer]')) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {DOMAttributes, KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: DOMAttributes\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {DOMAttributes, MoveEvents, PointerType} from '@react-types/shared';\nimport React, {useMemo, useRef} from 'react';\nimport {useEffectEvent, useGlobalListeners} from '@react-aria/utils';\n\nexport interface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: DOMAttributes\n}\n\ninterface EventBase {\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean,\n  altKey: boolean\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let move = useEffectEvent((originalEvent: EventBase, pointerType: PointerType, deltaX: number, deltaY: number) => {\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    if (!state.current.didMove) {\n      state.current.didMove = true;\n      onMoveStart?.({\n        type: 'movestart',\n        pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n    onMove({\n      type: 'move',\n      pointerType,\n      deltaX: deltaX,\n      deltaY: deltaY,\n      shiftKey: originalEvent.shiftKey,\n      metaKey: originalEvent.metaKey,\n      ctrlKey: originalEvent.ctrlKey,\n      altKey: originalEvent.altKey\n    });\n  });\n\n  let end = useEffectEvent((originalEvent: EventBase, pointerType: PointerType) => {\n    restoreTextSelection();\n    if (state.current.didMove) {\n      onMoveEnd?.({\n        type: 'moveend',\n        pointerType,\n        shiftKey: originalEvent.shiftKey,\n        metaKey: originalEvent.metaKey,\n        ctrlKey: originalEvent.ctrlKey,\n        altKey: originalEvent.altKey\n      });\n    }\n  });\n\n  let moveProps = useMemo(() => {\n    let moveProps: DOMAttributes = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end(e, 'mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end(e, 'touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          let pointerType = (e.pointerType || 'mouse') as PointerType;\n          end(e, pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (e: EventBase, deltaX: number, deltaY: number) => {\n      start();\n      move(e, 'keyboard', deltaX, deltaY);\n      end(e, 'keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, -1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(e, 0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, addGlobalListener, removeGlobalListener, move, end]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, LongPressEvent} from '@react-types/shared';\nimport {mergeProps, useDescription, useGlobalListeners} from '@react-aria/utils';\nimport {usePress} from './usePress';\nimport {useRef} from 'react';\n\nexport interface LongPressProps {\n  /** Whether long press events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when a long press interaction starts. */\n  onLongPressStart?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when a long press interaction ends, either\n   * over the target or when the pointer leaves the target.\n   */\n  onLongPressEnd?: (e: LongPressEvent) => void,\n  /**\n   * Handler that is called when the threshold time is met while\n   * the press is over the target.\n   */\n  onLongPress?: (e: LongPressEvent) => void,\n  /**\n   * The amount of time in milliseconds to wait before triggering a long press.\n   * @default 500ms\n   */\n  threshold?: number,\n  /**\n   * A description for assistive techology users indicating that a long press\n   * action is available, e.g. \"Long press to open menu\".\n   */\n  accessibilityDescription?: string\n}\n\nexport interface LongPressResult {\n  /** Props to spread on the target element. */\n  longPressProps: DOMAttributes\n}\n\nconst DEFAULT_THRESHOLD = 500;\n\n/**\n * Handles long press interactions across mouse and touch devices. Supports a customizable time threshold,\n * accessibility description, and normalizes behavior across browsers and devices.\n */\nexport function useLongPress(props: LongPressProps): LongPressResult {\n  let {\n    isDisabled,\n    onLongPressStart,\n    onLongPressEnd,\n    onLongPress,\n    threshold = DEFAULT_THRESHOLD,\n    accessibilityDescription\n  } = props;\n\n  const timeRef = useRef(null);\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let {pressProps} = usePress({\n    isDisabled,\n    onPressStart(e) {\n      if (e.pointerType === 'mouse' || e.pointerType === 'touch') {\n        if (onLongPressStart) {\n          onLongPressStart({\n            ...e,\n            type: 'longpressstart'\n          });\n        }\n\n        timeRef.current = setTimeout(() => {\n          // Prevent other usePress handlers from also handling this event.\n          e.target.dispatchEvent(new PointerEvent('pointercancel', {bubbles: true}));\n          if (onLongPress) {\n            onLongPress({\n              ...e,\n              type: 'longpress'\n            });\n          }\n          timeRef.current = null;\n        }, threshold);\n\n        // Prevent context menu, which may be opened on long press on touch devices\n        if (e.pointerType === 'touch') {\n          let onContextMenu = e => {\n            e.preventDefault();\n          };\n\n          addGlobalListener(e.target, 'contextmenu', onContextMenu, {once: true});\n          addGlobalListener(window, 'pointerup', () => {\n            // If no contextmenu event is fired quickly after pointerup, remove the handler\n            // so future context menu events outside a long press are not prevented.\n            setTimeout(() => {\n              removeGlobalListener(e.target, 'contextmenu', onContextMenu);\n            }, 30);\n          }, {once: true});\n        }\n      }\n    },\n    onPressEnd(e) {\n      if (timeRef.current) {\n        clearTimeout(timeRef.current);\n      }\n\n      if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) {\n        onLongPressEnd({\n          ...e,\n          type: 'longpressend'\n        });\n      }\n    }\n  });\n\n  let descriptionProps = useDescription(onLongPress && !isDisabled ? accessibilityDescription : null);\n\n  return {\n    longPressProps: mergeProps(pressProps, descriptionProps)\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}