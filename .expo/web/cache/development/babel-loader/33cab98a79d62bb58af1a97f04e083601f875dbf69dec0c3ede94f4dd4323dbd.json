{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport axios from 'axios';\nimport { BASE_URL } from \"../../utils\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { store } from \"../store\";\nexport var OnUserUpdatePassword = function OnUserUpdatePassword(data) {\n  return function () {\n    var _ref = _asyncToGenerator(function* (dispatch) {\n      var userToken = yield AsyncStorage.getItem('user_token');\n      if (!userToken) {\n        return {\n          'error': 'User logged out'\n        };\n      }\n      try {\n        var response = yield axios.put(`${BASE_URL}user/update/password`, _objectSpread({}, data), {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var OnUserUpdateProfileImage = function OnUserUpdateProfileImage(link) {\n  return function () {\n    var _ref2 = _asyncToGenerator(function* (dispatch) {\n      try {\n        dispatch({\n          type: 'ON_USER_UPDATE_PROFILE_IMAGE',\n          payload: link\n        });\n        return {\n          'success': 'done'\n        };\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var OnUserUpdate = function OnUserUpdate(data) {\n  return function () {\n    var _ref3 = _asyncToGenerator(function* (dispatch) {\n      var userToken = yield AsyncStorage.getItem('user_token');\n      if (!userToken) {\n        return {\n          'error': 'User logged out'\n        };\n      }\n      try {\n        var response = yield axios.put(`${BASE_URL}user/update`, _objectSpread({}, data), {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          dispatch({\n            type: 'ON_USER_LOGIN',\n            payload: response.data\n          });\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var OnUpdateLocation = function OnUpdateLocation(location) {\n  return function () {\n    var _ref4 = _asyncToGenerator(function* (dispatch) {\n      var userToken = yield AsyncStorage.getItem('user_token');\n      if (!userToken) {\n        return {\n          'error': 'User logged out'\n        };\n      }\n      try {\n        var response = yield axios.put(`${BASE_URL}user/update`, _objectSpread({}, location), {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          dispatch({\n            type: 'ON_UPDATE_LOCATION',\n            payload: location\n          });\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var onSendOTP = function onSendOTP(phone) {\n  return function () {\n    var _ref5 = _asyncToGenerator(function* (dispatch) {\n      try {\n        var response = yield axios.post(`${BASE_URL}user/otp`, {\n          phone: phone\n        });\n        if (!response) {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: 'OTP Error'\n          });\n        }\n        return response.data;\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var onVerifyOTP = function onVerifyOTP(phone, token) {\n  return function () {\n    var _ref6 = _asyncToGenerator(function* (dispatch) {\n      try {\n        var response = yield axios.post(`${BASE_URL}user/verify-otp`, {\n          phone: phone,\n          token: token\n        });\n        if (!response) {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: 'OTP Verification Error'\n          });\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: 'OTP Verification Error'\n        });\n      }\n    });\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var OnUserNotificationsCount = function OnUserNotificationsCount() {\n  return function () {\n    var _ref7 = _asyncToGenerator(function* (dispatch) {\n      var token = store.getState().UserReducer.user.authToken;\n      if (!token) return;\n      try {\n        var response = yield axios.get(`${BASE_URL}user/notifications/count`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          return {\n            'success': resBody['status'],\n            'count': resBody['count']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: 'Notifications error'\n        });\n      }\n    });\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport var OnReadUserMessage = function OnReadUserMessage(id, type) {\n  return function () {\n    var _ref8 = _asyncToGenerator(function* (dispatch) {\n      var token = store.getState().UserReducer.user.authToken;\n      if (!token) return;\n      try {\n        var url = `${BASE_URL}user/messages/read/${id}`;\n        if (type && type === 'answer') {\n          url = `${BASE_URL}user/answers/read/${id}`;\n        }\n        var response = yield axios.get(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: 'Notifications error'\n        });\n      }\n    });\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};\nexport var OnLoadUserMessages = function OnLoadUserMessages() {\n  return function () {\n    var _ref9 = _asyncToGenerator(function* (dispatch) {\n      var token = store.getState().UserReducer.user.authToken;\n      if (!token) return;\n      try {\n        var response = yield axios.get(`${BASE_URL}user/messages/all`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          return {\n            'success': resBody['status'],\n            'messages': resBody['messages']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: 'Notifications error'\n        });\n      }\n    });\n    return function (_x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n};\nexport var OnUserLogin = function OnUserLogin(loginId, password) {\n  return function () {\n    var _ref10 = _asyncToGenerator(function* (dispatch) {\n      try {\n        var response = yield axios.post(`${BASE_URL}user/login`, {\n          login: loginId,\n          password: password\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          yield AsyncStorage.setItem('user_token', response.data['authToken']);\n          dispatch({\n            type: 'ON_USER_LOGIN',\n            payload: response.data\n          });\n          var location = {\n            address_country: response.data['address_country'],\n            address_state: response.data['address_state'],\n            address_city: response.data['address_city'],\n            address_street: response.data['address_street'],\n            address_lat: null,\n            address_long: null,\n            address_zipcode: null\n          };\n          dispatch({\n            type: 'ON_UPDATE_LOCATION',\n            payload: location\n          });\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x10) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n};\nexport var OnAskQuestion = function OnAskQuestion(title, question, gender, age) {\n  return function () {\n    var _ref11 = _asyncToGenerator(function* (dispatch) {\n      var token = store.getState().UserReducer.user.authToken;\n      if (!token) return;\n      try {\n        var response = yield axios.post(`${BASE_URL}user/question`, {\n          title: title,\n          question: question,\n          gender: gender,\n          age: age\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x11) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n};\nexport var OnContactSupport = function OnContactSupport(subject, message) {\n  return function () {\n    var _ref12 = _asyncToGenerator(function* (dispatch) {\n      var token = store.getState().UserReducer.user.authToken;\n      if (!token) return;\n      try {\n        var response = yield axios.post(`${BASE_URL}user/contact`, {\n          subject: subject,\n          message: message\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x12) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n};\nexport var OnUserRefresh = function OnUserRefresh() {\n  return function () {\n    var _ref13 = _asyncToGenerator(function* (dispatch) {\n      var userToken = yield AsyncStorage.getItem('user_token');\n      if (!userToken) {\n        return;\n      }\n      try {\n        var response = yield axios.post(`${BASE_URL}user/refresh`, {}, {\n          headers: {\n            'Authorization': `Bearer ${userToken}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          if (resBody[\"message\"] === \"session expired\" || resBody[\"message\"] === \"Please authenticate\") {\n            dispatch({\n              type: 'ON_USER_LOGOUT',\n              payload: response.data\n            });\n            return {\n              'error': 'logout'\n            };\n          }\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: resBody['message']\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          yield AsyncStorage.setItem('user_token', response.data['authToken']);\n          dispatch({\n            type: 'ON_USER_LOGIN',\n            payload: response.data\n          });\n          var location = {\n            address_country: response.data['address_country'],\n            address_state: response.data['address_state'],\n            address_city: response.data['address_city'],\n            address_street: response.data['address_street'],\n            address_lat: null,\n            address_long: null,\n            address_zipcode: null\n          };\n          dispatch({\n            type: 'ON_UPDATE_LOCATION',\n            payload: location\n          });\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x13) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n};\nexport var OnUserLogout = function OnUserLogout() {\n  return function () {\n    var _ref14 = _asyncToGenerator(function* (dispatch) {\n      var token = store.getState().UserReducer.user.authToken;\n      if (!token) return;\n      try {\n        var response = yield axios.get(`${BASE_URL}user/logout`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var resBody = response.data;\n        if (resBody['status'] === 'error') {\n          dispatch({\n            type: 'ON_USER_LOGOUT',\n            payload: response.data\n          });\n          return {\n            'error': resBody['message']\n          };\n        } else {\n          dispatch({\n            type: 'ON_USER_LOGOUT',\n            payload: response.data\n          });\n          return {\n            'success': resBody['status']\n          };\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: error.message\n        });\n        return {\n          'error': error.message\n        };\n      }\n    });\n    return function (_x14) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n};\nexport var OnUserSignup = function OnUserSignup(firstName, lastName, email, phone, password) {\n  return function () {\n    var _ref15 = _asyncToGenerator(function* (dispatch) {\n      try {\n        var response = yield axios.post(`${BASE_URL}user/register`, {\n          email: email,\n          phone: phone,\n          password: password,\n          first_name: firstName,\n          last_name: lastName\n        });\n        if (!response) {\n          dispatch({\n            type: 'ON_USER_ERROR',\n            payload: 'Signup Error'\n          });\n        } else {\n          dispatch({\n            type: 'ON_USER_LOGIN',\n            payload: response.data\n          });\n        }\n      } catch (error) {\n        dispatch({\n          type: 'ON_USER_ERROR',\n          payload: 'Signup Error'\n        });\n      }\n    });\n    return function (_x15) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["axios","BASE_URL","AsyncStorage","store","OnUserUpdatePassword","data","_ref","_asyncToGenerator","dispatch","userToken","getItem","response","put","_objectSpread","headers","resBody","type","payload","error","message","_x","apply","arguments","OnUserUpdateProfileImage","link","_ref2","_x2","OnUserUpdate","_ref3","_x3","OnUpdateLocation","location","_ref4","_x4","onSendOTP","phone","_ref5","post","_x5","onVerifyOTP","token","_ref6","_x6","OnUserNotificationsCount","_ref7","getState","UserReducer","user","authToken","get","_x7","OnReadUserMessage","id","_ref8","url","_x8","OnLoadUserMessages","_ref9","_x9","OnUserLogin","loginId","password","_ref10","login","setItem","address_country","address_state","address_city","address_street","address_lat","address_long","address_zipcode","_x10","OnAskQuestion","title","question","gender","age","_ref11","_x11","OnContactSupport","subject","_ref12","_x12","OnUserRefresh","_ref13","_x13","OnUserLogout","_ref14","_x14","OnUserSignup","firstName","lastName","email","_ref15","first_name","last_name","_x15"],"sources":["C:/Users/Aromolaran/Downloads/sosocare-app-master/src/redux/actions/userActions.ts"],"sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'react';\nimport { BASE_URL } from \"../../utils\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LocationModel } from '../models';\nimport { store } from '../store';\n\nexport interface UpdateLocationAction {\n    readonly type: 'ON_UPDATE_LOCATION',\n    payload: LocationModel;\n}\nexport interface UserErrorAction {\n    readonly type: 'ON_USER_ERROR',\n    payload: any;\n}\nexport interface UserLoginAction {\n    readonly type: 'ON_USER_LOGIN',\n    payload: string;\n}\nexport interface UserUpdateProfileImage {\n    readonly type: 'ON_USER_UPDATE_PROFILE_IMAGE',\n    payload: string;\n}\nexport interface UserLogoutAction {\n    readonly type: 'ON_USER_LOGOUT',\n    payload: string;\n}\n\n\nexport type UserAction = UpdateLocationAction | UserErrorAction | UserLoginAction | UserLogoutAction | UserUpdateProfileImage;\n\n\n// User Actions trigger from Components\n\nexport const OnUserUpdatePassword = (data) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let userToken = await AsyncStorage.getItem('user_token');\n        if (!userToken) {\n            return { 'error': 'User logged out' };\n        }\n        try {\n            const response = await axios.put<string>(`${BASE_URL}user/update/password`,\n                { ...data }\n                , {\n                    headers: {\n                        'Authorization': `Bearer ${userToken}`\n                    }\n                });\n\n            let resBody = response.data;\n\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                return { 'success': resBody['status'] };\n            }\n\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n\n    };\n\n};\nexport const OnUserUpdateProfileImage = (link) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        try {\n\n            dispatch({\n                type: 'ON_USER_UPDATE_PROFILE_IMAGE',\n                payload: link\n            });\n            return { 'success': 'done' };\n\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n\n    };\n\n};\nexport const OnUserUpdate = (data) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let userToken = await AsyncStorage.getItem('user_token');\n        if (!userToken) {\n            return { 'error': 'User logged out' };\n        }\n        try {\n            const response = await axios.put<string>(`${BASE_URL}user/update`,\n                { ...data }\n                , {\n                    headers: {\n                        'Authorization': `Bearer ${userToken}`\n                    }\n                });\n\n            let resBody = response.data;\n\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                dispatch({\n                    type: 'ON_USER_LOGIN',\n                    payload: response.data\n                });\n                return { 'success': resBody['status'] };\n            }\n\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n\n    };\n\n};\nexport const OnUpdateLocation = (location: LocationModel) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let userToken = await AsyncStorage.getItem('user_token');\n        if (!userToken) {\n            return { 'error': 'User logged out' };\n        }\n        try {\n            const response = await axios.put<string>(`${BASE_URL}user/update`,\n                {...location}\n                , {\n                    headers: {\n                        'Authorization': `Bearer ${userToken}`\n                    }\n                });\n\n            let resBody = response.data;\n\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                dispatch({\n                    type: 'ON_UPDATE_LOCATION',\n                    payload: location\n                });\n                return { 'success': resBody['status'] };\n            }\n\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n\n    };\n\n};\nexport const onSendOTP = (phone: string) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n\n        try {\n            const response = await axios.post<string>(`${BASE_URL}user/otp`, {\n                phone,\n            });\n\n            if (!response) {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: 'OTP Error'\n                });\n            }\n            return response.data;\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n    };\n\n};\nexport const onVerifyOTP = (phone: string, token: string) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n\n        try {\n            const response = await axios.post<string>(`${BASE_URL}user/verify-otp`, {\n                phone,\n                token\n            });\n\n            if (!response) {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: 'OTP Verification Error'\n                });\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: 'OTP Verification Error'\n            });\n        }\n    };\n\n};\nexport const OnUserNotificationsCount = () => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let token = store.getState().UserReducer.user.authToken;\n        if (!token) return;\n        try {\n            const response = await axios.get<string>(`${BASE_URL}user/notifications/count`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            let resBody = response.data;\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                return { 'success': resBody['status'], 'count': resBody['count'] };\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: 'Notifications error'\n            });\n        }\n    };\n\n};\nexport const OnReadUserMessage = (id, type) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let token = store.getState().UserReducer.user.authToken;\n        if (!token) return;\n        try {\n            let url = `${BASE_URL}user/messages/read/${id}`\n            if(type && type === 'answer'){\n                url = `${BASE_URL}user/answers/read/${id}`\n            }\n            const response = await axios.get<string>(url, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            let resBody = response.data;\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                return { 'success': resBody['status'] };\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: 'Notifications error'\n            });\n        }\n    };\n\n};\nexport const OnLoadUserMessages = () => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let token = store.getState().UserReducer.user.authToken;\n        if (!token) return;\n        try {\n            const response = await axios.get<string>(`${BASE_URL}user/messages/all`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            let resBody = response.data;\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                return { 'success': resBody['status'], 'messages': resBody['messages'] };\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: 'Notifications error'\n            });\n        }\n    };\n\n};\nexport const OnUserLogin = (loginId: string, password: string) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n\n        try {\n            const response = await axios.post<string>(`${BASE_URL}user/login`, {\n                login: loginId,\n                password\n            });\n\n            let resBody = response.data;\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                await AsyncStorage.setItem('user_token', response.data['authToken']);\n                dispatch({\n                    type: 'ON_USER_LOGIN',\n                    payload: response.data\n                });\n                let location = {\n                    address_country: response.data['address_country'],\n                    address_state: response.data['address_state'],\n                    address_city: response.data['address_city'],\n                    address_street: response.data['address_street'],\n                    address_lat: null,\n                    address_long: null,\n                    address_zipcode: null,\n                };\n                dispatch({\n                    type: 'ON_UPDATE_LOCATION',\n                    payload: location\n                });\n                return { 'success': resBody['status'] };\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n    };\n\n};\nexport const OnAskQuestion = (title: string, question: string, gender: string, age: string) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let token = store.getState().UserReducer.user.authToken;\n        if (!token) return;\n        try {\n            const response = await axios.post<string>(`${BASE_URL}user/question`, {\n                title,\n                question,\n                gender,\n                age\n            }, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            let resBody = response.data;\n\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                return { 'success': resBody['status'] };\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n    };\n\n};\nexport const OnContactSupport = (subject: string, message: string) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let token = store.getState().UserReducer.user.authToken;\n        if (!token) return;\n        try {\n            const response = await axios.post<string>(`${BASE_URL}user/contact`, {\n                subject,\n                message\n            }, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            let resBody = response.data;\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                return { 'success': resBody['status'] };\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n    };\n\n};\nexport const OnUserRefresh = () => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        let userToken = await AsyncStorage.getItem('user_token');\n        if (!userToken) {\n            return;\n        }\n        try {\n            const response = await axios.post<string>(`${BASE_URL}user/refresh`, {}, {\n                headers: {\n                    'Authorization': `Bearer ${userToken}`\n                }\n            });\n\n            let resBody = response.data;\n            if (resBody['status'] === 'error') {\n                if (\n                    resBody[\"message\"] === \"session expired\" ||\n                    resBody[\"message\"] === \"Please authenticate\"\n                ) {\n                    dispatch({\n                        type: 'ON_USER_LOGOUT',\n                        payload: response.data\n                    });\n                    return { 'error': 'logout' };\n                }\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: resBody['message']\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                await AsyncStorage.setItem('user_token', response.data['authToken']);\n                dispatch({\n                    type: 'ON_USER_LOGIN',\n                    payload: response.data\n                });\n                let location = {\n                    address_country: response.data['address_country'],\n                    address_state: response.data['address_state'],\n                    address_city: response.data['address_city'],\n                    address_street: response.data['address_street'],\n                    address_lat: null,\n                    address_long: null,\n                    address_zipcode: null,\n                };\n\n                dispatch({\n                    type: 'ON_UPDATE_LOCATION',\n                    payload: location\n                });\n                return { 'success': resBody['status'] };\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n    };\n\n};\nexport const OnUserLogout = () => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n\n        let token = store.getState().UserReducer.user.authToken;\n        if (!token) return;\n        try {\n            const response = await axios.get<string>(`${BASE_URL}user/logout`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            let resBody = response.data;\n\n            if (resBody['status'] === 'error') {\n                dispatch({\n                    type: 'ON_USER_LOGOUT',\n                    payload: response.data\n                });\n                return { 'error': resBody['message'] };\n            } else {\n                dispatch({\n                    type: 'ON_USER_LOGOUT',\n                    payload: response.data\n                });\n                return { 'success': resBody['status'] };\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: (error as Error).message\n            });\n            return { 'error': (error as Error).message };\n        }\n    };\n\n};\nexport const OnUserSignup = (\n    firstName: string,\n    lastName: string,\n    // address_state: string,\n    // address_city: string,\n    // address_street: string,\n    // address_zipcode: string,\n    // address_long: string,\n    // address_lat: string,\n    email: string,\n    phone: string,\n    password: string\n) => {\n\n    return async (dispatch: Dispatch<UserAction>) => {\n        try {\n            const response = await axios.post<string>(`${BASE_URL}user/register`, {\n                email,\n                phone,\n                password,\n                first_name: firstName,\n                last_name: lastName,\n                // address_city,\n                // address_lat,\n                // address_long,\n                // address_state,\n                // address_street,\n                // address_zipcode\n            });\n\n            if (!response) {\n                dispatch({\n                    type: 'ON_USER_ERROR',\n                    payload: 'Signup Error'\n                });\n            } else {\n                dispatch({\n                    type: 'ON_USER_LOGIN',\n                    payload: response.data\n                });\n            }\n        } catch (error) {\n            dispatch({\n                type: 'ON_USER_ERROR',\n                payload: 'Signup Error'\n            });\n        }\n    };\n\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}